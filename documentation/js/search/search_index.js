var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/modules/ApiModule.html",[0,2.175,1,2.73]],["body/modules/ApiModule.html",[0,3.388,1,4.252,2,0.013,3,0.137,4,0.137,5,4.921,6,4.921,7,6.306,8,7.339,9,4.921,10,4.921,11,4.966,12,0.233,13,6.306,14,0.825,15,1.757,16,4.921,17,4.569,18,4.921,19,4.569,20,4.921,21,4.569,22,4.921,23,4.569,24,4.921,25,4.569,26,4.921,27,4.569,28,4.921,29,4.569,30,4.921,31,4.569,32,4.921,33,4.569,34,4.921,35,4.569,36,4.921,37,4.569,38,4.921,39,4.921,40,4.569,41,4.921,42,4.569,43,4.921,44,4.569,45,4.921,46,4.921,47,4.569,48,4.921,49,3.876,50,0.154,51,0.339,52,3.566,53,4.921,54,0.008,55,0.008]],["title/modules/AppModule.html",[0,2.175,56,2.934]],["body/modules/AppModule.html",[0,3.929,1,5.38,2,0.013,3,0.152,4,0.152,12,0.218,14,0.92,50,0.172,51,0.378,54,0.009,55,0.009,56,6.056,57,3.975,58,4.321,59,4.321,60,3.699,61,5.317,62,4.321,63,4.783,64,4.783,65,4.783,66,5.38,67,5.38,68,5.45,69,5.486,70,5.486,71,5.486,72,5.486,73,4.783]],["title/classes/ApplyVolunteerDto.html",[51,0.279,74,3.189]],["body/classes/ApplyVolunteerDto.html",[2,0.013,3,0.142,4,0.142,12,0.18,50,0.16,51,0.445,54,0.008,55,0.008,74,5.09,75,6.694,76,4.46,77,0.94,78,4.481,79,6.178,80,5.58,81,6.178,82,1.35,83,5.134,84,5.115,85,5.115,86,5.115,87,5.635,88,4.677,89,5.115,90,5.115,91,5.115,92,4.46,93,5.176,94,3.449,95,5.176,96,1.762,97,4.46]],["title/injectables/ApplyVolunteerFlow.html",[98,0.729,99,2.73]],["body/injectables/ApplyVolunteerFlow.html",[2,0.013,3,0.075,4,0.075,12,0.199,14,0.451,50,0.084,51,0.185,54,0.004,55,0.004,77,0.305,98,0.741,99,2.774,100,5.963,101,2.343,102,4.616,103,3.614,104,1.008,105,4.359,106,5,107,4.114,108,5,109,5,110,4.359,111,3.938,112,2.343,113,4.026,114,2.687,115,3.623,116,2.687,117,5.141,118,6.437,119,7.624,120,6.345,121,2.687,122,2.687,123,2.687,124,4.114,125,2.687,126,2.687,127,2.687,128,2.687,129,5,130,2.687,131,2.687,132,2.687,133,5.602,134,4.114,135,4.114,136,5.602,137,4.114,138,2.687,139,2.687,140,2.343,141,0.556,142,2.966,143,1.812,144,1.519,145,1.376,146,1.812,147,1.444,148,1.812,149,1.699,150,2.687,151,1.159,152,1.032,153,3.162,154,1.699,155,1.699,156,1.812,157,2.742,158,1.947,159,0.704,160,0.995,161,2.116,162,2.343,163,2.343,164,2.343,165,4.885,166,6.039,167,1.414,168,5.814,169,3.938,170,4.885,171,1.052,172,4.885,173,6.039,174,4.359,175,2.343,176,4.359,177,2.343,178,4.059,179,5.266,180,6.039,181,5.602,182,0.393,183,2.343,184,2.687,185,1.376,186,2.343,187,2.687,188,0.434,189,2.687,190,1.519,191,2.116,192,3.241,193,2.687,194,2.687,195,2.687,196,2.687,197,2.687]],["title/classes/Authority.html",[51,0.279,198,2.415]],["body/classes/Authority.html",[2,0.013,3,0.132,4,0.091,12,0.182,50,0.102,51,0.328,54,0.005,55,0.005,77,0.637,82,1.275,141,0.675,157,3.21,159,0.855,182,0.426,185,3.36,188,1.107,198,4.085,199,2.846,200,2.947,201,4.068,202,3.21,203,2.421,204,2.829,205,3.707,206,4.068,207,2.327,208,3.017,209,3.21,210,2.052,211,2.052,212,2.052,213,1.379,214,2.052,215,5.615,216,2.748,217,3.551,218,3.551,219,4.068,220,3.264,221,2.891,222,2.048,223,3.264,224,1.466,225,2.137,226,2.137,227,2.421,228,3.049,229,3.264,230,3.902,231,2.891,232,3.264,233,4.068,234,3.264,235,2.846,236,3.264,237,2.52,238,2.838,239,3.208,240,2.437,241,2.437,242,2.328,243,3.208,244,3.264,245,2.284,246,1.898,247,3.264,248,3.264,249,1.407,250,1.466,251,1.407,252,1.466,253,1.972,254,1.407,255,1.582,256,1.466,257,1.407,258,1.466,259,2.137,260,3.264,261,1.333,262,1.407,263,1.466,264,3.264,265,3.264,266,2.365,267,3.264,268,2.365,269,3.264,270,2.365,271,3.264,272,1.466,273,3.21,274,1.124,275,2.137,276,2.953,277,2.365,278,2.846,279,1.672,280,1.753,281,2.846,282,2.365,283,1.672,284,1.048,285,2.846,286,3.264,287,3.208,288,3.208,289,3.264]],["title/classes/AuthorityController.html",[33,2.934,51,0.279]],["body/classes/AuthorityController.html",[2,0.013,3,0.114,4,0.114,12,0.205,14,0.94,33,4.061,50,0.129,51,0.284,54,0.006,55,0.006,77,0.467,96,1.418,104,1.062,171,1.068,182,0.48,188,1.106,205,3.168,213,1.624,290,3.59,291,2.518,292,2.626,293,1.68,294,2.626,295,4.117,296,4.404,297,4.117,298,2.015,299,2.748,300,4.117,301,3.184,302,2.109,303,2.743,304,4.117,305,2.015,306,2.743,307,4.117,308,1.916,309,3.59,310,4.887,311,4.117,312,2.015,313,2.985,314,4.117,315,1.929,316,2.985,317,4.117,318,1.707,319,2.417,320,1.776,321,1.322,322,1.929,323,2.153,324,1.524,325,1.929,326,1.776,327,1.642,328,1.929,329,1.524,330,1.707,331,4.117,332,4.117,333,4.117,334,1.776,335,1.929,336,1.524,337,2.109,338,1.47,339,0.943,340,4.117,341,2.015,342,4.117,343,2.015,344,5.605,345,1.929,346,3.59,347,4.117,348,2.015,349,4.117]],["title/injectables/AuthorityService.html",[98,0.729,296,2.415]],["body/injectables/AuthorityService.html",[2,0.013,3,0.1,4,0.1,12,0.197,14,0.604,50,0.113,51,0.248,54,0.006,55,0.006,77,0.409,82,1.35,98,0.919,104,1.067,141,0.745,151,1.553,152,1.383,157,2.499,159,0.943,160,1.333,167,1.227,171,1.122,182,0.473,188,0.582,198,3.046,204,2.202,205,2.886,206,2.609,261,1.43,293,1.531,296,3.046,308,1.662,313,2.392,321,1.64,323,1.961,338,1.285,339,0.824,350,3.139,351,2.826,352,5.106,353,5.106,354,3.7,355,2.392,356,2.293,357,3.6,358,4.353,359,3.6,360,5.106,361,5.106,362,3.6,363,2.293,364,5.106,365,3.6,366,5.933,367,5.106,368,3.6,369,3.7,370,3.6,371,4.452,372,3.6,373,2.499,374,3.6,375,2.392,376,3.6,377,1.617,378,1.687,379,1.617,380,1.687,381,1.333,382,1.24,383,1.687,384,3.139,385,3.6,386,1.285,387,3.6,388,3.6,389,5.106,390,4.452,391,5.106,392,3.6,393,3.6,394,5.106,395,3.6,396,3.6,397,3.6,398,2.609,399,3.7,400,5.106,401,5.106,402,3.6,403,3.139,404,3.6,405,3.6,406,3.139,407,3.6]],["title/classes/Base.html",[51,0.279,200,1.615]],["body/classes/Base.html",[2,0.013,3,0.19,4,0.132,12,0.202,50,0.149,51,0.426,54,0.007,55,0.007,82,1.036,141,0.986,145,2.441,182,0.471,188,1.108,200,2.464,207,2.201,210,2.956,211,2.956,212,2.956,214,2.664,222,1.986,227,2.055,228,3.127,245,2.684,249,2.055,251,2.664,253,3.114,254,2.055,255,2.411,257,2.055,262,2.664,274,1.642,276,2.664,284,1.53,408,4.156,409,4.766,410,4.766,411,4.766,412,4.766,413,4.766,414,4.766,415,6.177,416,6.177,417,3.491,418,3.453,419,5.386,420,3.754,421,4.766,422,2.843,423,4.766,424,3.685,425,3.754,426,4.766,427,4.766,428,6.177,429,4.766,430,4.766]],["title/classes/BaseFlow.html",[51,0.279,102,2.934]],["body/classes/BaseFlow.html",[2,0.013,3,0.128,4,0.128,12,0.216,14,0.773,15,1.647,50,0.144,51,0.318,52,3.342,54,0.007,55,0.007,77,0.766,82,1.131,102,4.381,103,3.216,104,0.981,110,6.778,111,5.639,113,3.504,115,4.888,141,0.954,144,4.047,145,2.362,147,3.249,148,3.11,149,2.917,156,3.11,160,1.707,162,5.882,167,0.954,171,0.975,182,0.3,204,3.088,261,1.89,287,3.11,339,1.056,381,1.707,382,1.589,420,3.633,431,4.022,432,4.612,433,4.271,434,6.047,435,4.612,436,4.612,437,3.11,438,2.751,439,4.612,440,4.612,441,4.612,442,4.022,443,5.882,444,5.272,445,4.612,446,2.917,447,4.612,448,4.612,449,3.342,450,4.612,451,4.612,452,4.612,453,4.612,454,4.022]],["title/classes/BaseService.html",[51,0.279,351,1.678]],["body/classes/BaseService.html",[2,0.013,3,0.151,4,0.151,12,0.151,50,0.17,51,0.374,54,0.008,55,0.008,77,0.617,82,1.334,104,1.023,113,3.895,141,1.123,171,0.97,182,0.436,188,0.878,293,2.011,336,2.011,351,2.781,356,3.014,363,2.44,377,3.014,379,3.014,420,4.278,455,4.736,456,5.431,457,5.431,458,5.431,459,5.431,460,5.431,461,5.431,462,5.431]],["title/classes/Carousel.html",[51,0.279,463,2.73]],["body/classes/Carousel.html",[2,0.013,3,0.16,4,0.119,12,0.193,50,0.134,51,0.397,54,0.007,55,0.007,82,1.09,141,0.886,159,1.122,167,0.886,182,0.423,185,3.331,188,0.931,200,3.135,203,2.805,207,2.33,210,2.484,211,2.484,212,2.484,213,1.669,214,2.484,221,2.008,222,1.885,224,1.925,225,2.587,226,2.587,227,2.484,228,2.999,230,3.642,231,2.698,237,2.498,245,2.132,249,1.848,250,1.925,251,1.848,252,1.925,253,2.387,254,1.848,255,1.915,256,1.925,257,1.848,258,1.925,259,2.587,261,1.613,262,1.848,263,1.925,272,1.925,273,2.818,274,1.476,275,2.587,276,2.805,284,1.376,381,1.587,382,1.476,446,2.71,463,4.892,464,3.737,465,6.504,466,4.286,467,4.286,468,4.286,469,4.286,470,4.286,471,4.286,472,4.286,473,4.286,474,5.759,475,4.286,476,4.286]],["title/classes/CarouselController.html",[42,2.934,51,0.279]],["body/classes/CarouselController.html",[2,0.013,3,0.111,4,0.111,12,0.197,14,0.667,42,3.967,50,0.196,51,0.274,54,0.006,55,0.006,77,0.452,96,1.371,104,1.067,171,1.082,182,0.487,185,2.804,188,1.09,213,1.586,291,2.459,292,2.565,293,1.641,294,2.565,298,1.947,299,2.7,301,2.908,302,2.038,303,2.679,305,1.947,306,2.679,308,2.047,312,1.947,313,2.933,315,1.864,316,2.933,318,1.649,319,2.361,320,1.716,321,1.278,322,1.864,323,2.103,324,1.473,325,1.864,326,1.716,327,1.587,328,1.864,329,1.473,330,1.649,334,1.716,335,1.864,336,1.473,337,2.038,338,1.42,339,0.911,341,1.947,343,1.947,345,1.864,348,1.947,477,3.469,478,5.475,479,3.979,480,4.265,481,3.979,482,5.475,483,3.979,484,3.979,485,5.475,486,3.979,487,2.516,488,3.266,489,3.979,490,3.979,491,3.979,492,3.979,493,3.979,494,3.979,495,3.979,496,3.979,497,3.979,498,3.979,499,3.979,500,5.475,501,2.374,502,5.475,503,3.979]],["title/injectables/CarouselService.html",[98,0.729,480,2.561]],["body/injectables/CarouselService.html",[2,0.013,3,0.109,4,0.109,12,0.207,14,0.657,50,0.122,51,0.373,54,0.006,55,0.006,77,0.445,82,1.123,98,0.975,104,1.047,113,3.278,141,0.81,151,1.689,152,1.504,159,1.025,160,1.45,167,1.12,171,1.017,182,0.457,185,2.774,188,1.004,202,1.916,246,1.562,261,1.097,274,1.349,293,1.623,308,1.517,321,1.739,323,2.08,338,1.398,339,0.896,351,2.915,355,2.537,356,3.008,363,1.759,373,2.65,375,2.537,377,2.788,378,1.835,379,1.759,380,1.835,381,1.45,382,1.349,383,1.835,386,1.398,463,3.652,480,3.425,504,3.415,505,5.415,506,3.916,507,3.916,508,5.415,509,4.714,510,3.916,511,5.415,512,3.916,513,3.916,514,3.916,515,3.415,516,3.916,517,3.916,518,2.213,519,3.916,520,3.23,521,3.508,522,2.213,523,3.061,524,3.916,525,2.336,526,3.23,527,2.336,528,3.415,529,2.837,530,2.837,531,2.64,532,2.336,533,2.336,534,2.336,535,5.415,536,3.916,537,3.916]],["title/classes/Category.html",[51,0.279,538,1.819]],["body/classes/Category.html",[2,0.013,3,0.14,4,0.098,12,0.188,50,0.111,51,0.348,54,0.006,55,0.006,77,0.668,82,1.181,141,0.733,159,0.928,182,0.417,188,1.139,200,3.007,201,4.262,203,2.536,204,2.922,205,3.829,207,2.379,208,3.16,209,3.316,210,2.177,211,2.177,212,2.177,213,1.463,214,2.177,216,2.878,217,3.72,218,3.72,219,4.262,221,2.365,222,1.963,224,1.592,225,2.268,226,2.268,227,2.536,228,2.922,233,4.262,237,2.603,238,3.012,240,2.586,241,2.586,242,2.471,243,3.404,245,2.373,246,2.014,249,1.528,250,1.592,251,1.528,252,1.592,253,2.093,254,1.528,255,1.679,256,1.592,257,1.528,258,1.592,259,2.268,261,1.414,262,1.528,263,1.592,266,2.568,268,2.568,270,2.568,272,1.592,273,3.137,274,1.221,275,2.268,276,2.764,277,2.568,279,1.815,280,1.904,282,2.568,283,1.815,284,1.138,287,2.39,288,3.404,538,3.164,539,3.09,540,4.632,541,3.544,542,3.64,543,2.241,544,3.544,545,3.544,546,3.544,547,3.544,548,3.977,549,3.544,550,3.544,551,3.544,552,3.544,553,3.544,554,3.544,555,2.241,556,3.544,557,2.241,558,3.544,559,3.544]],["title/classes/CategoryController.html",[27,2.934,51,0.279]],["body/classes/CategoryController.html",[2,0.013,3,0.117,4,0.117,12,0.207,14,0.954,27,4.125,50,0.132,51,0.29,54,0.007,55,0.007,77,0.478,96,1.451,104,1.057,171,1.075,182,0.483,188,1.117,213,1.649,291,2.557,292,2.667,293,1.707,294,2.667,298,2.062,299,2.781,301,2.978,302,2.158,303,2.786,305,2.062,306,2.786,308,2.02,312,2.062,313,3.021,315,1.974,316,3.021,318,1.746,319,2.455,320,1.817,321,1.353,322,1.974,323,2.187,324,1.56,325,1.974,326,1.817,327,1.68,328,1.974,329,1.56,330,1.746,334,1.817,335,1.974,336,1.56,337,2.158,338,1.504,339,0.964,341,2.062,343,2.062,345,1.974,348,2.062,488,2.513,501,2.513,560,3.673,561,3.673,562,4.201,563,4.213,564,4.213,565,4.213,566,4.213,567,4.213,568,4.213,569,4.213,570,4.213,571,4.213,572,3.673,573,4.964,574,4.964,575,3.673]],["title/injectables/CategoryService.html",[98,0.729,562,2.288]],["body/injectables/CategoryService.html",[2,0.013,3,0.119,4,0.119,12,0.208,14,0.719,50,0.134,51,0.295,54,0.007,55,0.007,77,0.487,82,1.28,98,1.037,104,1.059,141,0.886,151,1.848,152,1.646,159,1.122,167,0.886,171,1.049,182,0.452,188,0.693,204,2.484,261,1.2,293,1.726,308,1.613,321,1.849,351,3.008,354,4.173,355,2.698,356,2.587,358,4.689,363,1.925,369,4.173,373,2.818,375,2.698,377,1.925,378,2.008,379,1.925,380,2.008,381,1.587,382,1.476,383,2.008,386,1.53,398,3.105,399,3.105,538,3.356,562,3.255,576,3.737,577,5.022,578,3.737,579,4.286,580,4.173,581,4.286,582,5.022,583,4.286,584,4.286,585,4.286,586,3.375,587,4.286,588,3.737,589,3.375,590,3.737,591,3.737,592,4.286,593,3.737,594,3.737]],["title/modules/CommonModule.html",[0,2.175,66,2.73]],["body/modules/CommonModule.html",[0,2.823,2,0.013,3,0.081,4,0.081,12,0.232,14,0.489,50,0.091,51,0.201,54,0.005,55,0.005,57,2.112,58,2.295,59,2.295,60,1.965,61,3.446,62,3.446,66,5.709,73,2.541,99,4.432,103,1.965,142,1.814,143,1.965,146,1.965,147,2.351,148,1.965,149,1.843,152,1.119,157,2.141,158,2.112,198,2.61,296,4.484,327,1.162,384,2.541,417,2.473,463,2.95,480,4.753,515,2.541,538,1.965,542,2.351,562,4.248,586,2.295,595,2.541,596,2.541,597,2.541,598,4.753,599,4.753,600,4.484,601,4.753,602,4.753,603,4.753,604,4.753,605,4.753,606,4.753,607,4.753,608,4.484,609,4.248,610,4.432,611,4.432,612,2.914,613,4.376,614,2.914,615,2.914,616,2.541,617,2.914,618,4.376,619,2.914,620,2.541,621,2.541,622,2.541,623,2.914,624,2.112,625,2.61,626,2.541,627,2.351,628,2.295,629,2.473,630,2.295,631,1.843,632,2.767,633,2.541,634,2.914,635,2.914,636,2.914,637,2.914,638,2.914,639,3.171,640,2.914,641,2.914,642,2.914,643,2.914,644,2.914,645,2.914,646,2.914,647,2.914,648,2.914,649,2.295,650,2.914,651,2.914,652,2.914,653,2.914,654,2.914,655,2.541,656,2.95,657,2.914,658,2.914,659,2.914,660,2.914,661,2.295,662,2.914,663,2.914,664,2.914]],["title/injectables/CommonService.html",[98,0.729,598,2.561]],["body/injectables/CommonService.html",[2,0.013,3,0.12,4,0.12,12,0.216,14,0.723,50,0.135,51,0.297,54,0.007,55,0.007,77,0.657,82,1.255,98,1.041,104,1.012,141,0.892,151,1.86,152,1.657,160,1.597,167,1.504,171,1.008,182,0.453,231,2.709,358,4.701,386,2.065,538,1.937,580,4.728,586,3.397,589,3.397,598,3.658,608,4.465,625,2.573,665,3.761,666,5.783,667,6.972,668,6.972,669,3.761,670,4.313,671,5.783,672,6.525,673,4.313,674,6.525,675,4.313,676,4.313,677,5.783,678,4.313,679,3.761,680,4.313,681,4.313,682,2.908,683,3.761,684,4.313,685,5.783,686,3.761,687,4.313,688,3.269,689,5.043,690,4.313,691,3.761,692,5.043,693,4.313,694,4.313,695,4.313,696,4.313,697,4.313,698,4.313,699,4.313,700,4.313,701,4.313,702,4.313,703,3.761,704,3.125,705,4.313,706,5.783,707,4.313,708,4.313,709,4.313,710,2.573]],["title/classes/Content.html",[51,0.279,542,2.175]],["body/classes/Content.html",[2,0.014,3,0.077,4,0.131,12,0.17,50,0.051,51,0.191,54,0.003,55,0.003,77,0.578,78,2.66,82,1.238,104,0.761,141,0.34,159,0.43,167,0.971,171,0.518,182,0.233,188,0.759,200,2.361,203,1.546,207,2.02,208,1.926,209,2.059,210,1.193,211,1.193,212,1.193,213,0.802,214,1.193,216,2.783,221,2.537,222,2.166,224,2.109,225,2.286,226,2.286,227,2.195,228,3.049,237,1.804,238,1.65,240,4.142,241,0.841,242,3.958,245,1.884,246,1.678,249,0.708,250,0.738,251,0.708,252,0.738,253,1.147,254,0.708,255,0.92,256,0.738,257,0.708,258,0.738,259,1.243,261,0.775,262,0.708,263,0.738,272,0.738,273,1.754,274,0.566,275,1.243,276,2.837,279,0.841,280,0.882,284,2.415,288,2.417,324,1.557,381,0.608,382,0.566,538,2.826,540,2.179,542,2.909,631,1.038,688,4.075,711,1.293,712,3.835,713,3.585,714,3.835,715,3.924,716,3.835,717,4.479,718,3.924,719,4.265,720,4.265,721,3.126,722,3.126,723,1.642,724,1.642,725,1.19,726,1.642,727,3.585,728,2.801,729,2.412,730,2.412,731,5.334,732,6.286,733,5.334,734,2.766,735,1.642,736,1.642,737,2.005,738,1.642,739,4.207,740,2.766,741,4.207,742,2.766,743,2.766,744,2.766,745,2.766,746,2.766,747,2.766,748,2.766,749,2.766,750,2.766,751,1.642,752,1.642,753,1.642,754,1.642,755,1.642,756,1.642,757,1.642,758,1.642,759,2.412,760,1.642,761,1.642,762,1.642,763,1.642,764,1.432,765,1.642,766,1.432,767,1.642,768,1.65,769,1.19,770,3.585,771,3.585,772,3.585,773,1.038,774,1.293,775,1.19,776,1.19,777,1.293,778,1.642,779,2.138,780,1.19,781,1.642,782,1.642,783,1.432,784,1.432,785,1.432,786,3.126,787,1.19,788,1.038,789,1.107,790,1.107,791,2.412,792,3.668,793,2.179,794,2.412,795,1.432,796,2.823,797,3.126,798,2.766,799,2.766,800,2.766,801,2.766,802,2.766,803,2.766,804,2.766,805,2.412,806,1.642,807,1.642,808,1.432,809,1.432]],["title/classes/ContentController.html",[23,2.934,51,0.279]],["body/classes/ContentController.html",[2,0.013,3,0.114,4,0.114,12,0.205,14,0.94,23,4.061,50,0.199,51,0.284,54,0.006,55,0.006,77,0.467,96,1.418,104,1.062,171,1.068,182,0.48,188,1.106,213,1.624,291,2.518,292,2.626,293,1.68,294,2.626,298,2.015,299,2.748,301,2.95,302,2.109,303,2.743,305,2.015,306,2.743,308,2.068,312,2.015,313,2.985,315,1.929,316,2.985,318,1.707,319,2.417,320,1.776,321,1.322,322,1.929,323,2.153,324,1.524,325,1.929,326,1.776,327,1.642,328,1.929,329,1.524,330,1.707,334,1.776,335,1.929,336,1.524,337,2.109,338,1.47,339,0.943,341,2.015,343,2.015,345,1.929,348,2.015,487,2.604,488,3.344,501,2.456,599,4.669,810,3.59,811,4.117,812,4.117,813,4.117,814,4.117,815,4.117,816,4.117,817,4.117,818,4.117,819,4.117,820,4.117,821,4.117,822,4.117,823,5.605,824,5.605,825,4.117]],["title/injectables/ContentService.html",[98,0.729,599,2.561]],["body/injectables/ContentService.html",[2,0.013,3,0.109,4,0.109,12,0.207,14,0.658,50,0.123,51,0.374,54,0.006,55,0.006,77,0.446,82,1.124,98,0.977,104,1.03,113,3.282,141,0.812,151,1.694,152,1.509,159,1.028,160,1.454,167,1.122,171,0.97,182,0.436,188,1.005,190,2.22,202,2.655,246,1.566,261,1.1,274,1.353,293,1.627,308,1.52,321,1.742,323,2.084,338,1.402,339,0.899,351,2.918,355,2.542,356,3.012,363,1.764,373,2.655,375,2.542,377,2.793,378,1.84,379,1.764,380,1.84,381,1.454,382,1.353,383,1.84,386,1.402,509,4.451,518,2.22,520,3.237,521,3.514,522,2.22,523,3.067,525,2.343,526,3.237,527,2.343,529,2.846,530,4.505,531,2.648,532,2.343,533,2.343,534,2.343,538,3.012,542,2.915,599,3.432,624,2.846,826,3.424,827,3.927,828,3.927,829,5.426,830,3.927,831,3.927,832,3.927,833,3.927,834,3.927,835,3.927,836,3.424,837,3.424,838,3.424,839,4.731,840,3.424,841,3.093,842,3.424,843,3.093,844,3.424,845,3.424,846,3.093,847,3.424,848,3.927,849,3.927,850,3.927]],["title/classes/ContextTrace.html",[51,0.279,851,2.934]],["body/classes/ContextTrace.html",[2,0.013,3,0.148,4,0.083,12,0.191,15,1.593,50,0.167,51,0.308,54,0.005,55,0.005,77,0.858,82,1.352,160,1.107,167,1.595,182,0.385,207,2.32,218,3.375,222,1.293,231,1.401,245,2.798,255,0.995,283,3.522,284,1.433,339,0.685,381,1.107,382,1.03,422,1.784,424,3.775,704,2.167,710,1.784,768,2.661,788,1.892,789,2.017,790,2.017,851,4.286,852,2.017,853,5.476,854,5.996,855,5.518,856,5.996,857,2.991,858,2.991,859,2.991,860,2.991,861,2.991,862,2.991,863,3.89,864,3.89,865,3.89,866,2.608,867,3.89,868,2.356,869,3.514,870,3.233,871,4.203,872,3.514,873,3.008,874,3.514,875,2.608,876,2.608,877,2.608,878,2.608,879,5.158,880,5.158,881,2.608,882,2.608,883,2.356,884,2.608,885,3.89,886,3.89,887,2.608,888,2.608,889,2.356,890,2.608,891,3.89,892,2.608,893,2.608,894,2.608,895,2.608,896,2.608,897,2.608,898,2.608,899,3.89,900,2.608,901,5.996,902,2.608,903,2.608,904,2.608,905,2.608,906,4.197,907,2.608,908,2.608,909,2.608,910,2.608,911,2.608,912,2.608,913,2.608,914,2.608,915,2.608,916,2.608,917,2.608,918,2.608,919,2.608,920,3.89,921,3.89,922,2.608,923,2.608,924,2.167,925,2.608,926,2.356,927,2.356,928,2.608,929,2.608,930,3.89,931,3.89,932,6.827,933,3.89,934,3.89,935,3.89,936,5.158,937,3.89,938,3.89,939,5.158,940,3.89,941,3.89,942,3.89,943,3.89,944,3.89,945,2.608,946,2.608,947,3.89,948,2.608,949,2.608,950,2.608,951,2.608,952,2.608,953,3.89,954,2.608,955,3.89,956,2.608,957,3.233,958,2.608,959,2.608,960,2.608,961,2.608,962,2.608]],["title/classes/CreateContentDto.html",[51,0.279,963,2.934]],["body/classes/CreateContentDto.html",[2,0.013,3,0.123,4,0.123,12,0.163,50,0.184,51,0.455,54,0.007,55,0.007,77,0.967,82,1.395,83,4.258,88,4.199,93,4.942,94,2.979,95,5.674,96,1.522,209,3.445,216,3.445,245,2.79,688,3.979,712,4.747,714,4.747,715,5.101,716,4.747,718,5.101,963,4.258,964,3.479,965,4.418,966,4.418,967,4.418,968,4.418,969,4.418,970,4.418,971,4.418,972,4.418,973,3.201]],["title/classes/Engine.html",[51,0.279,438,2.415]],["body/classes/Engine.html",[2,0.013,3,0.101,4,0.101,11,2.862,12,0.197,15,1.835,50,0.228,51,0.25,54,0.006,55,0.006,82,1,103,3.406,104,0.988,111,4.048,117,4.612,141,0.751,142,1.506,144,3.664,145,1.861,146,2.45,153,3.771,154,2.298,155,2.298,167,1.468,168,4.696,171,1.078,178,3.724,182,0.236,188,1.048,190,2.054,192,4.696,204,1.567,207,2.28,222,1.053,237,1.974,255,1.709,339,0.832,382,1.252,386,2.129,433,3.557,438,4.08,779,2.168,853,5.29,974,2.45,975,5.199,976,5.652,977,4.321,978,4.697,979,3.634,980,3.634,981,4.481,982,5.964,983,3.634,984,3.634,985,4.481,986,3.634,987,3.168,988,3.25,989,2.633,990,3.168,991,2.633,992,2.45,993,4.048,994,4.696,995,4.048,996,2.862,997,2.862,998,2.862,999,3.168,1000,4.481,1001,3.168,1002,3.168,1003,3.168,1004,2.633,1005,3.168,1006,3.168,1007,3.168,1008,3.168,1009,3.168,1010,2.862,1011,3.168,1012,3.168,1013,3.168,1014,3.168,1015,2.633,1016,5.652,1017,2.862,1018,4.481,1019,3.168,1020,3.168,1021,3.25,1022,3.168,1023,3.168,1024,3.724,1025,3.168,1026,2.633,1027,3.168,1028,3.168,1029,2.45,1030,2.45,1031,2.633,1032,3.168,1033,3.168,1034,3.168,1035,3.168,1036,3.168,1037,3.168,1038,3.37]],["title/classes/ExcelHelper.html",[51,0.279,1039,2.73]],["body/classes/ExcelHelper.html",[2,0.013,3,0.158,4,0.093,12,0.134,50,0.207,51,0.23,54,0.005,55,0.005,104,0.994,167,1.678,171,0.957,182,0.474,207,2.481,208,4.224,217,2.112,222,1.402,241,1.711,242,2.368,255,1.11,279,1.711,338,2.227,339,1.63,381,1.236,382,1.15,422,1.992,424,2.886,446,4.366,704,3.506,710,1.992,779,1.992,873,2.252,906,3.06,1039,3.836,1040,2.63,1041,4.838,1042,4.838,1043,4.838,1044,4.838,1045,5.439,1046,3.34,1047,2.912,1048,4.838,1049,3.34,1050,6.238,1051,4.838,1052,3.34,1053,3.34,1054,4.838,1055,3.34,1056,2.912,1057,2.912,1058,3.34,1059,2.912,1060,2.912,1061,5.689,1062,3.34,1063,4.838,1064,3.34,1065,3.34,1066,4.838,1067,3.34,1068,3.34,1069,3.34,1070,2.912,1071,4.961,1072,3.34,1073,5.689,1074,4.838,1075,5.689,1076,4.838,1077,3.34,1078,6.62,1079,3.34,1080,4.838,1081,3.34,1082,3.34,1083,3.34,1084,3.34,1085,3.34,1086,3.34,1087,3.34,1088,3.34,1089,3.34,1090,4.838,1091,3.34,1092,4.838,1093,4.838,1094,4.838,1095,3.34,1096,4.838,1097,3.34,1098,3.34,1099,3.34,1100,3.34,1101,3.34,1102,3.34,1103,4.838,1104,3.34,1105,4.838,1106,5.689,1107,3.34,1108,3.34,1109,3.34,1110,4.838,1111,3.34,1112,3.34,1113,3.34,1114,3.34,1115,4.838,1116,3.34,1117,3.34,1118,3.34,1119,3.34,1120,3.34,1121,3.34,1122,3.34,1123,3.34,1124,3.34,1125,3.34]],["title/classes/ExceptionsFilter.html",[51,0.279,1126,3.189]],["body/classes/ExceptionsFilter.html",[2,0.013,3,0.129,4,0.129,12,0.199,14,0.777,15,1.655,50,0.145,51,0.32,52,3.359,54,0.007,55,0.007,88,3.619,104,0.87,167,1.633,171,0.67,182,0.301,283,3.107,284,1.948,339,1.061,437,3.126,737,4.9,768,3.619,787,3.359,788,2.932,789,3.126,790,3.126,883,3.651,1029,5.021,1126,4.778,1127,4.042,1128,6.763,1129,6.067,1130,6.763,1131,5.897,1132,7.174,1133,4.636,1134,7.639,1135,7.174,1136,6.067,1137,4.636,1138,4.636,1139,4.636,1140,6.763,1141,4.636,1142,4.042,1143,4.636,1144,4.636,1145,4.636,1146,4.091,1147,4.636,1148,4.636,1149,4.042,1150,4.636,1151,4.636,1152,4.636,1153,6.067,1154,5.29,1155,5.29,1156,4.396,1157,5.29,1158,6.067,1159,4.042,1160,4.042,1161,4.636,1162,4.636,1163,4.636,1164,4.636,1165,4.042,1166,4.636,1167,3.651,1168,4.636,1169,4.636,1170,3.651,1171,4.636,1172,4.636,1173,4.636,1174,4.636,1175,4.636]],["title/classes/Flow.html",[51,0.279,103,1.819]],["body/classes/Flow.html",[2,0.013,3,0.142,4,0.1,12,0.197,50,0.112,51,0.351,52,2.602,54,0.006,55,0.006,82,0.993,103,3.059,141,0.743,142,3.216,147,3.464,149,2.271,154,4.473,155,4.473,156,2.421,159,0.94,167,1.054,182,0.419,188,0.824,200,3.016,203,2.555,207,2.187,210,2.198,211,2.198,212,2.198,213,1.477,214,2.198,221,2.775,222,1.716,224,1.613,225,2.289,226,2.289,227,2.937,228,3.05,237,2.276,245,1.887,249,1.549,250,1.613,251,1.549,252,1.613,253,2.113,254,1.549,255,1.695,256,1.613,257,1.549,258,1.613,259,2.289,261,1.427,262,1.549,263,1.613,272,1.613,273,2.494,274,1.237,275,2.289,276,2.937,284,1.153,433,3.846,443,3.131,444,4.444,725,4.293,769,2.602,780,4.293,992,3.995,993,5.571,994,4.666,1015,4.672,1176,3.131,1177,3.591,1178,3.591,1179,3.591,1180,3.591,1181,3.591,1182,3.591,1183,3.591,1184,3.591,1185,3.591,1186,3.591,1187,3.591,1188,3.591,1189,2.828,1190,3.591,1191,3.591,1192,3.591,1193,3.591,1194,5.096,1195,3.591,1196,3.591,1197,5.096,1198,3.591]],["title/classes/FlowController.html",[47,2.934,51,0.279]],["body/classes/FlowController.html",[2,0.013,3,0.11,4,0.11,12,0.203,14,0.914,47,3.951,50,0.195,51,0.273,54,0.006,55,0.006,77,0.449,96,1.363,104,1.066,171,1.081,182,0.486,188,1.088,213,1.58,291,2.45,292,2.555,293,1.635,294,2.555,298,1.936,299,2.692,301,2.901,302,2.026,303,2.669,305,1.936,306,2.669,308,2.133,312,1.936,313,2.924,315,1.853,316,2.924,318,1.64,319,2.352,320,1.706,321,1.27,322,1.853,323,2.095,324,1.464,325,1.853,326,1.706,327,1.578,328,1.853,329,1.464,330,1.64,334,1.706,335,1.853,336,1.464,337,2.026,338,1.412,339,0.906,341,1.936,343,1.936,345,1.853,348,1.936,487,2.502,488,3.253,501,2.36,600,4.351,977,3.951,1199,3.449,1200,3.956,1201,3.956,1202,3.956,1203,3.449,1204,5.453,1205,3.956,1206,3.956,1207,3.956,1208,3.956,1209,3.956,1210,3.956,1211,3.956,1212,3.956,1213,3.956,1214,3.956,1215,5.453,1216,3.956,1217,3.956,1218,5.453,1219,3.956]],["title/injectables/FlowService.html",[98,0.729,600,2.415]],["body/injectables/FlowService.html",[2,0.013,3,0.085,4,0.085,12,0.208,14,0.512,50,0.096,51,0.312,54,0.005,55,0.005,77,0.515,82,1.161,98,0.816,103,2.868,104,1.05,113,3.388,115,3.915,117,3.056,141,0.632,142,3.209,143,2.06,144,3.913,145,1.565,146,2.06,147,1.641,148,2.06,149,1.932,151,1.317,152,1.173,154,4.038,155,1.932,156,2.06,159,0.8,160,1.131,161,2.406,167,1.383,169,2.406,171,0.967,174,2.664,175,4.711,176,2.664,177,2.664,178,2.214,182,0.45,188,0.874,190,1.727,202,1.495,213,1.313,246,1.219,261,1.513,274,1.052,293,1.359,308,1.674,321,1.455,339,0.699,351,2.647,355,2.123,356,2.685,363,1.372,373,2.218,375,2.123,377,2.427,378,1.431,379,1.372,380,1.431,381,1.131,382,1.052,383,1.431,386,1.618,390,2.664,433,4.576,438,1.822,442,2.664,449,3.284,509,4.038,518,2.561,520,2.704,521,3.054,522,1.727,523,2.561,525,1.822,526,2.704,527,1.822,531,2.06,532,1.822,533,1.822,534,1.822,600,2.704,977,3.284,1015,4.331,1038,1.727,1203,3.952,1220,2.664,1221,5.977,1222,4.532,1223,3.055,1224,3.055,1225,4.532,1226,4.532,1227,5.977,1228,3.055,1229,3.055,1230,3.055,1231,3.055,1232,4.532,1233,3.055,1234,3.055,1235,3.055,1236,3.055,1237,3.055,1238,3.055,1239,2.664,1240,3.055,1241,2.664,1242,4.532,1243,4.532,1244,4.532,1245,4.532,1246,2.406,1247,2.664,1248,3.055,1249,3.055,1250,3.055,1251,3.055,1252,3.055,1253,3.055,1254,3.055,1255,4.532,1256,3.055,1257,3.055,1258,3.055,1259,3.055,1260,3.055,1261,3.055]],["title/classes/FlowTemplate.html",[51,0.279,147,2.175]],["body/classes/FlowTemplate.html",[2,0.013,3,0.158,4,0.116,12,0.2,50,0.131,51,0.391,54,0.006,55,0.006,82,1.078,103,3.233,141,0.866,144,3.633,145,2.144,147,3.046,159,1.096,182,0.272,188,0.917,200,3.12,203,2.772,204,2.772,207,2.311,210,2.445,211,2.445,212,2.445,213,1.643,214,2.445,222,1.862,224,1.881,225,2.546,226,2.546,227,2.772,228,3.272,230,3.585,231,3.227,237,2.469,245,2.099,249,1.806,250,1.881,251,1.806,252,1.881,253,2.35,254,1.806,255,1.885,256,1.881,257,1.806,258,1.881,259,2.546,261,1.588,262,1.806,263,1.881,272,1.881,274,1.442,275,2.546,276,2.971,284,1.344,433,3.834,543,2.648,555,2.648,557,2.648,1239,3.651,1262,6.47,1263,3.651,1264,5.062,1265,4.187,1266,4.187,1267,5.669,1268,4.187,1269,4.187,1270,4.187,1271,3.651,1272,4.187]],["title/classes/FlowTemplateController.html",[44,2.934,51,0.279]],["body/classes/FlowTemplateController.html",[2,0.013,3,0.113,4,0.113,12,0.204,14,0.932,44,4.028,50,0.198,51,0.28,54,0.006,55,0.006,77,0.462,96,1.401,104,1.06,171,1.064,182,0.478,188,1.1,213,1.611,291,2.497,292,2.604,293,1.666,294,2.604,298,1.991,299,2.731,301,2.935,302,2.084,303,2.721,305,1.991,306,2.721,308,2.061,312,1.991,313,2.967,315,1.906,316,2.967,318,1.686,319,2.397,320,1.754,321,1.306,322,1.906,323,2.135,324,1.506,325,1.906,326,1.754,327,1.623,328,1.906,329,1.506,330,1.686,334,1.754,335,1.906,336,1.506,337,2.084,338,1.452,339,0.931,341,1.991,343,1.991,345,1.906,348,1.991,487,2.573,488,3.316,501,2.427,601,4.652,655,3.547,1273,6.685,1274,3.547,1275,4.068,1276,4.068,1277,4.068,1278,4.068,1279,4.068,1280,4.068,1281,4.068,1282,4.068,1283,4.068,1284,4.068,1285,4.068,1286,4.068,1287,5.559,1288,5.559,1289,4.068]],["title/injectables/FlowTemplateService.html",[98,0.729,601,2.561]],["body/injectables/FlowTemplateService.html",[2,0.013,3,0.118,4,0.118,12,0.207,14,0.714,50,0.133,51,0.294,54,0.007,55,0.007,77,0.484,82,1.163,98,1.032,104,1.043,112,3.714,113,3.395,115,4.155,141,0.881,147,3.081,148,2.872,149,2.693,151,1.837,152,1.636,159,1.115,160,1.577,161,3.354,167,1.186,171,0.937,182,0.421,188,0.927,202,2.084,246,1.699,261,1.193,293,1.719,308,1.606,321,1.842,351,3.001,355,2.687,356,3.116,363,1.913,373,2.806,375,2.687,377,2.912,378,1.995,379,1.913,380,1.995,381,1.577,382,1.467,383,1.995,386,1.52,454,3.714,518,2.407,520,3.421,521,3.664,522,2.407,523,3.241,525,2.541,526,3.421,527,2.541,528,3.714,532,2.541,533,2.541,534,2.541,601,3.627,1246,3.354,1290,6.313,1291,3.714,1292,4.259,1293,4.259,1294,4.259,1295,4.259,1296,4.259,1297,4.259,1298,4.259,1299,4.259]],["title/interfaces/IFlow.html",[991,2.934,992,2.73]],["body/interfaces/IFlow.html",[2,0.013,3,0.111,4,0.111,12,0.203,15,1.955,50,0.234,51,0.274,54,0.006,55,0.006,82,1.297,103,3.363,104,0.867,117,4.221,141,0.823,142,1.649,144,3.094,145,2.038,146,2.683,153,3.959,154,2.516,155,2.516,167,1.511,168,4.93,171,1.103,178,3.967,182,0.259,188,1.181,190,2.249,192,4.93,204,1.716,207,1.758,222,1.153,255,1.821,339,0.911,382,1.371,386,1.42,433,3.266,438,4.023,779,2.374,853,4.536,974,2.683,975,3.469,976,3.469,977,2.883,978,2.883,981,3.469,982,5.458,985,3.469,987,3.469,988,3.463,989,2.883,990,3.469,991,2.883,992,3.692,993,5.569,994,5.755,995,4.312,996,3.134,997,3.134,998,3.134,999,3.469,1000,4.774,1001,3.469,1002,3.469,1003,3.469,1004,2.883,1005,3.469,1006,3.469,1007,3.469,1008,3.469,1009,3.469,1010,3.134,1011,3.469,1012,3.469,1013,3.469,1014,3.469,1015,2.883,1016,5.88,1017,3.134,1018,4.774,1019,3.469,1020,3.469,1021,3.463,1022,3.469,1023,3.469,1024,3.967,1025,3.469,1026,2.883,1027,3.469,1028,3.469,1029,2.683,1030,2.683,1031,2.883,1032,3.469,1033,3.469,1034,3.469,1035,3.469,1036,3.469,1037,3.469,1038,3.538]],["title/classes/IO.html",[51,0.279,1300,2.934]],["body/classes/IO.html",[2,0.013,3,0.133,4,0.133,12,0.172,15,2.215,50,0.215,51,0.331,54,0.007,55,0.007,77,0.781,104,0.884,160,2.297,167,1.283,182,0.312,188,1.003,222,1.391,339,1.099,386,2.455,873,4.184,978,5.268,1024,5.587,1146,3.236,1300,5.587,1301,3.78,1302,7.528,1303,5.996,1304,6.205,1305,6.205,1306,4.799,1307,4.799,1308,4.799,1309,4.185,1310,6.205,1311,4.799,1312,4.799,1313,7.711,1314,4.799,1315,4.799,1316,4.799,1317,4.799,1318,4.799,1319,4.799,1320,4.799,1321,4.799,1322,7.27,1323,4.799,1324,4.799,1325,4.799,1326,4.799,1327,4.799,1328,4.496,1329,4.185,1330,4.185,1331,4.185,1332,4.799,1333,4.799,1334,4.799,1335,4.799]],["title/injectables/ImportService.html",[98,0.729,602,2.561]],["body/injectables/ImportService.html",[2,0.013,3,0.118,4,0.118,12,0.212,14,0.711,50,0.133,51,0.292,54,0.007,55,0.007,77,0.649,98,1.029,104,1.008,141,0.877,152,1.628,160,1.569,167,1.574,171,1.101,182,0.484,217,2.681,222,1.228,231,2.678,261,1.939,280,2.278,292,1.986,386,2.041,422,2.529,424,3.41,446,2.681,538,2.905,540,3.339,542,3.071,562,4.302,602,3.615,624,3.072,627,2.278,628,3.339,649,3.339,710,2.529,906,2.681,1021,3.615,1039,2.858,1336,3.696,1337,5.717,1338,5.717,1339,4.985,1340,3.696,1341,5.865,1342,4.239,1343,5.717,1344,4.239,1345,4.687,1346,5.717,1347,4.239,1348,5.717,1349,4.239,1350,4.985,1351,4.239,1352,4.502,1353,4.239,1354,5.717,1355,4.239,1356,4.239,1357,4.239,1358,4.239,1359,4.239,1360,4.239,1361,4.239,1362,4.239,1363,3.696,1364,4.239,1365,3.696,1366,3.696,1367,5.64,1368,3.696,1369,3.696,1370,3.696,1371,3.696]],["title/controllers/IndexController.html",[1372,2.934,1373,2.934]],["body/controllers/IndexController.html",[2,0.013,3,0.16,4,0.16,12,0.193,14,0.964,49,4.531,50,0.18,51,0.396,54,0.009,55,0.009,77,0.653,104,0.96,167,1.19,171,0.832,182,0.374,336,2.129,598,4.722,728,4.146,1021,4.722,1372,5.036,1373,5.036,1374,5.016,1375,5.752,1376,5.752,1377,5.752,1378,5.752,1379,6.949,1380,5.752,1381,5.752]],["title/injectables/JwtStrategy.html",[98,0.729,610,2.73]],["body/injectables/JwtStrategy.html",[2,0.013,3,0.145,4,0.145,12,0.219,14,0.877,50,0.164,51,0.361,54,0.008,55,0.008,77,0.594,98,1.18,104,0.921,142,3.317,143,3.528,159,1.37,163,4.563,167,1.082,171,0.757,182,0.34,308,1.466,327,2.087,336,1.937,338,1.868,339,1.198,417,3.705,609,4.457,610,4.421,622,4.563,661,4.121,1382,4.563,1383,6.556,1384,4.121,1385,5.233,1386,6.556,1387,5.233,1388,5.233,1389,5.233,1390,5.233,1391,5.233,1392,6.556,1393,5.233,1394,5.233,1395,5.233,1396,5.233,1397,5.233,1398,5.233]],["title/classes/Logger.html",[15,1.445,51,0.279]],["body/classes/Logger.html",[2,0.014,3,0.178,4,0.068,11,5.954,12,0.178,15,1.686,50,0.148,51,0.264,54,0.004,55,0.004,77,0.606,82,1.267,160,0.909,167,1.533,182,0.347,207,2.573,218,2.986,222,1.112,231,1.15,245,2.458,255,0.816,283,2.419,284,1.232,339,0.562,381,0.909,382,0.846,422,1.464,424,3.455,704,2.78,710,1.464,768,2.288,788,1.552,789,1.655,790,1.655,851,3.868,852,1.655,853,3.868,854,4.118,855,3.345,856,4.118,863,3.345,864,3.345,865,3.345,866,2.14,867,3.345,868,1.933,869,3.021,870,4.449,871,5.053,872,4.836,873,4.14,874,4.836,875,2.14,876,2.14,877,2.14,878,2.14,879,4.655,880,4.655,881,2.14,882,2.14,883,1.933,884,2.14,885,3.345,886,3.345,887,2.14,888,2.14,889,1.933,890,2.14,891,3.345,892,2.14,893,2.14,894,2.14,895,2.14,896,2.14,897,2.14,898,2.14,899,3.345,900,2.14,901,5.594,902,2.14,903,2.14,904,2.14,905,2.14,906,3.883,907,2.14,908,2.14,909,2.14,910,2.14,911,2.14,912,2.14,913,2.14,914,2.14,915,2.14,916,2.14,917,2.14,918,2.14,919,2.14,920,3.345,921,3.345,922,2.14,923,2.14,924,1.779,925,2.14,926,1.933,927,1.933,928,2.14,929,2.14,930,4.655,931,3.345,932,7.082,933,4.655,934,3.345,935,4.655,936,4.655,937,4.655,938,4.655,939,4.655,940,4.655,941,4.655,942,3.345,943,4.655,944,3.345,945,3.345,946,2.14,947,3.345,948,2.14,949,2.14,950,2.14,951,2.14,952,2.14,953,3.345,954,2.14,955,3.345,956,2.14,957,2.78,958,2.14,959,2.14,960,2.14,961,2.14,962,2.14,1399,3.836,1400,4.655,1401,5.339,1402,2.455,1403,2.455,1404,2.455,1405,2.455,1406,2.455,1407,2.455,1408,2.455,1409,2.455,1410,2.455,1411,2.455,1412,2.455,1413,2.455,1414,2.455,1415,2.455,1416,2.455,1417,2.455,1418,2.455,1419,2.455]],["title/classes/LoginController.html",[17,2.934,51,0.279]],["body/classes/LoginController.html",[2,0.013,3,0.149,4,0.149,12,0.217,14,0.902,17,4.832,50,0.168,51,0.371,54,0.008,55,0.008,77,0.611,96,1.852,104,0.932,171,0.777,182,0.35,299,2.876,301,2.876,318,2.229,324,1.991,329,1.991,330,2.229,336,1.991,609,4.487,1384,4.235,1420,4.689,1421,5.815,1422,5.378,1423,5.378,1424,5.491,1425,5.378,1426,6.321,1427,5.378,1428,4.689,1429,5.378,1430,4.689,1431,5.378,1432,5.378,1433,4.689,1434,5.378,1435,5.378,1436,5.378]],["title/classes/LoginDto.html",[51,0.279,1424,2.934]],["body/classes/LoginDto.html",[2,0.013,3,0.151,4,0.151,12,0.186,50,0.17,51,0.462,54,0.008,55,0.008,77,0.904,82,1.275,83,3.935,87,4.736,88,4.812,92,4.736,93,4.91,94,3.662,95,4.91,96,1.871,97,4.736,1156,3.935,1424,4.862,1437,4.736,1438,4.91,1439,4.605,1440,5.431,1441,4.736,1442,4.736,1443,4.736,1444,5.431,1445,4.736,1446,4.736,1447,4.736,1448,4.736,1449,4.278]],["title/classes/MQ.html",[51,0.279,988,2.561]],["body/classes/MQ.html",[2,0.013,3,0.145,4,0.145,12,0.199,15,2.335,50,0.234,51,0.359,54,0.008,55,0.008,104,0.919,167,1.078,171,0.946,182,0.339,222,1.51,255,1.733,339,1.193,386,2.812,417,3.696,978,5.431,988,4.982,989,3.777,1038,3.696,1450,3.777,1451,7.878,1452,7.147,1453,6.541,1454,5.213,1455,6.541,1456,5.213,1457,5.213,1458,5.213,1459,5.213,1460,5.213,1461,5.213,1462,6.541,1463,6.541,1464,5.213,1465,5.213,1466,5.213,1467,5.213,1468,6.541,1469,5.213,1470,5.213]],["title/classes/Notice.html",[51,0.279,656,2.73]],["body/classes/Notice.html",[2,0.013,3,0.16,4,0.119,12,0.193,50,0.134,51,0.397,54,0.007,55,0.007,82,1.216,141,0.885,145,2.192,159,1.12,182,0.278,188,0.93,200,3.134,203,2.803,207,2.329,210,2.481,211,2.481,212,2.481,213,1.667,214,2.481,216,3.181,221,3.045,222,2.211,224,1.922,225,2.584,226,2.584,227,2.803,228,3.221,237,2.496,245,2.13,249,1.845,250,1.922,251,1.845,252,1.922,253,2.385,254,1.845,255,1.913,256,1.922,257,1.845,258,1.922,259,2.584,261,1.611,262,1.845,263,1.922,272,1.922,274,1.474,275,2.584,276,3.127,284,2.232,656,3.879,1471,3.731,1472,5.667,1473,4.279,1474,4.279,1475,4.279,1476,5.667,1477,4.279,1478,4.279,1479,4.279,1480,4.279]],["title/classes/Organization.html",[51,0.279,627,2.175]],["body/classes/Organization.html",[2,0.013,3,0.137,4,0.095,12,0.186,50,0.107,51,0.34,54,0.005,55,0.005,77,0.656,82,1.232,141,0.71,142,2.774,159,0.899,182,0.411,188,1.127,200,2.984,201,4.186,202,3.275,203,2.492,204,2.886,205,3.782,207,2.359,208,3.104,209,3.275,210,2.128,211,2.128,212,2.128,213,1.43,214,2.128,216,2.827,217,3.654,218,3.654,219,4.186,221,2.707,222,2.08,224,1.542,225,2.217,226,2.217,227,2.492,228,3.005,233,4.186,237,2.571,238,2.944,240,2.527,241,2.527,242,2.415,243,3.327,245,2.339,246,1.968,249,1.48,250,1.542,251,1.48,252,1.542,253,2.046,254,1.48,255,1.641,256,1.542,257,1.48,258,1.542,259,2.217,261,1.382,262,1.48,263,1.542,266,2.487,268,2.487,270,2.487,272,1.542,273,3.091,274,1.182,275,2.217,276,2.886,277,2.487,279,1.758,280,1.844,282,2.487,283,1.758,284,1.102,287,2.314,288,3.327,543,2.171,555,2.171,557,2.171,627,3.744,1189,2.703,1352,3.886,1481,2.993,1482,5.038,1483,3.432,1484,3.432,1485,3.432,1486,3.432,1487,3.432,1488,3.432,1489,3.432,1490,3.432,1491,3.432,1492,3.432,1493,3.432,1494,3.432,1495,3.432,1496,3.432]],["title/classes/OrganizationController.html",[29,2.934,51,0.279]],["body/classes/OrganizationController.html",[2,0.013,3,0.114,4,0.114,12,0.205,14,0.939,29,4.057,50,0.129,51,0.283,54,0.006,55,0.006,77,0.467,96,1.416,104,1.061,171,1.067,182,0.48,188,1.105,205,3.164,213,1.622,291,2.515,292,2.623,293,1.678,294,2.623,298,2.012,299,2.746,301,3.183,302,2.106,303,2.74,305,2.012,306,2.74,308,1.915,309,3.585,310,4.882,312,2.012,313,2.983,315,1.926,316,2.983,318,1.704,319,2.415,320,1.773,321,1.32,322,1.926,323,2.151,324,1.522,325,1.926,326,1.773,327,1.64,328,1.926,329,1.522,330,1.704,334,1.773,335,1.926,336,1.522,337,2.106,338,1.468,339,0.941,341,2.012,343,2.012,345,1.926,346,3.585,348,2.012,603,4.667,1497,3.585,1498,4.111,1499,4.111,1500,4.111,1501,4.111,1502,4.111,1503,4.111,1504,4.111,1505,4.111,1506,4.111,1507,4.111,1508,4.111,1509,4.111,1510,4.111,1511,5.599,1512,4.111,1513,4.111]],["title/injectables/OrganizationService.html",[98,0.729,603,2.561]],["body/injectables/OrganizationService.html",[2,0.013,3,0.11,4,0.11,12,0.203,14,0.664,50,0.124,51,0.273,54,0.006,55,0.006,77,0.45,82,1.312,98,0.983,104,1.061,141,0.819,151,1.708,152,1.522,159,1.037,160,1.467,167,1.292,171,1.131,182,0.459,188,0.641,204,2.354,205,3.085,261,1.11,293,2.018,308,1.749,321,1.753,323,2.097,338,1.414,339,0.907,351,2.927,354,3.955,355,2.557,356,2.452,358,4.539,363,2.452,369,3.955,371,4.76,373,2.671,375,2.557,377,1.779,378,1.856,379,2.805,380,1.856,381,1.467,382,1.365,383,1.856,386,1.414,398,2.871,399,2.871,403,3.454,406,3.454,603,3.452,627,3.356,628,3.12,1514,3.454,1515,3.962,1516,3.962,1517,5.459,1518,3.962,1519,3.962,1520,3.962,1521,3.962,1522,3.962,1523,3.962,1524,3.962,1525,3.962,1526,3.962,1527,3.962,1528,3.962,1529,5.459,1530,3.962,1531,3.962,1532,3.962,1533,3.962,1534,3.962,1535,3.962,1536,3.962]],["title/classes/PasswordDto.html",[51,0.279,1537,2.934]],["body/classes/PasswordDto.html",[2,0.013,3,0.15,4,0.15,12,0.186,50,0.169,51,0.46,54,0.008,55,0.008,77,0.902,82,1.271,88,4.925,93,4.892,94,3.633,95,4.892,96,1.856,1156,4.838,1439,4.588,1441,5.822,1442,5.822,1443,5.822,1445,4.698,1446,4.698,1447,5.822,1448,5.822,1449,5.259,1537,4.838,1538,4.698,1539,7.255,1540,5.388,1541,5.388]],["title/classes/Qiniu.html",[51,0.279,1542,2.561]],["body/classes/Qiniu.html",[2,0.013,3,0.158,4,0.158,12,0.191,50,0.177,51,0.391,54,0.009,55,0.009,182,0.368,207,2.656,339,1.767,417,3.893,1542,4.881,1543,4.943,1544,7.42,1545,7.42,1546,7.718,1547,6.888,1548,6.888,1549,5.669,1550,6.888,1551,5.669,1552,5.669,1553,5.669]],["title/classes/Role.html",[51,0.279,157,1.981]],["body/classes/Role.html",[2,0.013,3,0.137,4,0.096,12,0.194,50,0.107,51,0.34,54,0.005,55,0.005,77,0.656,82,1.204,141,0.711,142,2.776,157,2.417,159,0.9,182,0.321,185,3.429,188,1.127,191,2.707,198,3.994,200,2.985,202,3.277,203,2.493,204,2.887,206,3.579,207,2.36,208,3.106,209,3.277,210,2.13,211,2.13,212,2.13,213,1.431,214,2.13,221,2.961,222,2.081,224,1.544,225,2.219,226,2.219,227,2.493,228,3.097,230,3.997,231,2.961,235,2.997,237,2.572,238,2.946,239,3.898,240,2.53,241,2.53,242,2.417,245,2.34,246,1.97,249,1.482,250,1.544,251,1.482,252,1.544,253,2.047,254,1.482,255,1.642,256,1.544,257,1.482,258,1.544,259,2.219,261,1.383,262,1.482,263,1.544,272,1.544,273,2.417,274,1.184,275,2.219,276,3.006,278,2.997,279,1.76,280,1.846,284,1.104,285,2.997,543,2.173,555,2.173,557,2.173,1189,2.707,1482,5.041,1554,2.997,1555,5.041,1556,3.437,1557,3.437,1558,3.437,1559,3.437,1560,3.437,1561,3.437,1562,3.437,1563,3.437,1564,3.437,1565,3.437,1566,2.997,1567,3.437,1568,4.939,1569,3.437,1570,3.437,1571,3.437,1572,2.997,1573,3.437,1574,2.707]],["title/classes/RoleController.html",[31,2.934,51,0.279]],["body/classes/RoleController.html",[2,0.013,3,0.114,4,0.114,12,0.205,14,0.94,31,4.061,50,0.199,51,0.284,54,0.006,55,0.006,77,0.467,96,1.418,104,1.062,171,1.068,182,0.48,188,1.106,213,1.624,291,2.518,292,2.626,293,1.68,294,2.626,298,2.015,299,2.748,301,2.95,302,2.109,303,2.743,305,2.015,306,2.743,308,2.068,312,2.015,313,2.985,315,1.929,316,2.985,318,1.707,319,2.417,320,1.776,321,1.322,322,1.929,323,2.153,324,1.524,325,1.929,326,1.776,327,1.642,328,1.929,329,1.524,330,1.707,334,1.776,335,1.929,336,1.524,337,2.109,338,1.47,339,0.943,341,2.015,343,2.015,345,1.929,348,2.015,487,2.604,488,3.344,501,2.456,604,4.669,1575,3.59,1576,4.117,1577,4.117,1578,4.117,1579,4.117,1580,4.117,1581,4.117,1582,4.117,1583,4.117,1584,4.117,1585,4.117,1586,4.117,1587,4.117,1588,5.605,1589,5.605,1590,4.117]],["title/injectables/RoleService.html",[98,0.729,604,2.561]],["body/injectables/RoleService.html",[2,0.013,3,0.117,4,0.117,12,0.211,14,0.705,50,0.132,51,0.392,54,0.007,55,0.007,77,0.478,82,1.274,98,1.024,104,1.041,113,3.377,141,0.87,151,1.814,152,1.616,157,3.153,158,3.048,159,1.101,167,1.176,171,0.932,182,0.419,188,1.042,190,2.377,202,2.058,239,3.835,274,1.449,293,1.705,308,1.593,321,1.826,351,2.989,355,2.664,356,2.554,363,1.889,373,2.783,375,2.664,377,1.889,378,1.971,379,1.889,380,1.971,381,1.557,382,1.449,383,1.971,386,1.502,509,4.559,518,2.377,521,2.377,523,3.214,525,2.509,526,3.392,527,2.509,532,2.509,533,2.509,534,2.509,604,3.596,846,3.313,1246,3.313,1591,3.668,1592,5.687,1593,4.206,1594,4.206,1595,4.959,1596,5.687,1597,4.206,1598,4.206,1599,4.206,1600,4.206,1601,4.206,1602,3.668,1603,4.206,1604,4.206,1605,4.206,1606,4.206]],["title/classes/SMS.html",[51,0.279,1607,3.189]],["body/classes/SMS.html",[2,0.013,3,0.134,4,0.134,12,0.173,15,2.22,50,0.195,51,0.332,54,0.007,55,0.007,80,3.793,82,1.294,104,0.886,171,0.696,182,0.313,207,2.478,237,2.389,255,1.602,284,1.547,433,4.109,446,3.046,728,2.873,1010,5.733,1026,3.49,1029,3.248,1030,3.248,1031,3.49,1154,4.2,1155,4.2,1156,3.49,1157,4.2,1438,3.248,1439,3.046,1607,5.425,1608,3.793,1609,6.888,1610,6.219,1611,6.347,1612,7.28,1613,6.347,1614,6.219,1615,4.816,1616,6.219,1617,6.347,1618,6.888,1619,4.816,1620,6.888,1621,6.219,1622,4.816,1623,4.816,1624,4.816,1625,4.816,1626,4.816,1627,4.816,1628,4.816,1629,3.49,1630,4.816,1631,4.816,1632,4.816,1633,4.816,1634,4.816]],["title/modules/SSRModule.html",[0,2.175,67,2.73]],["body/modules/SSRModule.html",[0,3.919,2,0.013,3,0.173,4,0.173,12,0.203,14,1.046,49,5.745,50,0.195,51,0.43,54,0.01,55,0.01,67,4.918,1373,5.6,1635,6.24,1636,6.24]],["title/classes/SearchController.html",[35,2.934,51,0.279]],["body/classes/SearchController.html",[2,0.013,3,0.151,4,0.151,12,0.217,14,0.912,35,4.868,50,0.17,51,0.375,54,0.008,55,0.008,77,0.618,96,1.875,104,0.937,171,0.787,182,0.354,299,3.143,308,1.882,318,2.256,319,2.897,320,2.347,324,2.015,326,2.347,327,2.171,329,2.015,330,2.256,334,2.347,336,2.015,605,5.036,1170,5.291,1637,4.745,1638,5.442,1639,5.442,1640,4.745,1641,5.442,1642,5.442,1643,5.442,1644,5.442,1645,5.442,1646,5.442]],["title/injectables/SearchService.html",[98,0.729,605,2.561]],["body/injectables/SearchService.html",[2,0.013,3,0.151,4,0.151,12,0.202,14,0.911,50,0.17,51,0.374,54,0.008,55,0.008,98,1.208,104,0.936,167,1.123,171,0.785,182,0.353,284,1.744,308,1.521,324,2.011,339,1.243,518,3.069,520,4.003,521,4.115,522,3.069,523,3.792,542,2.918,605,4.243,624,3.935,728,3.24,773,3.435,774,4.278,796,4.278,797,4.736,1170,5.285,1629,4.862,1640,5.851,1647,4.736,1648,5.431,1649,5.431,1650,5.431,1651,5.431,1652,5.431,1653,5.431,1654,5.431,1655,5.431,1656,5.431,1657,5.431]],["title/injectables/Seed.html",[68,2.73,98,0.729]],["body/injectables/Seed.html",[2,0.013,3,0.082,4,0.082,12,0.217,14,0.496,15,1.056,50,0.093,51,0.204,54,0.007,55,0.005,68,2.984,77,0.336,82,0.496,98,0.797,104,1.032,141,0.612,142,1.227,152,1.136,157,1.448,167,1.627,171,1.18,185,2.267,198,1.765,203,1.276,206,3.207,222,0.857,237,1.136,239,2.984,281,2.58,283,2.715,284,2.262,291,1.329,324,1.095,386,1.056,418,3.207,425,2.33,446,2.799,538,1.329,542,1.59,548,3.485,625,1.765,627,1.59,629,1.672,631,1.871,688,3.325,728,3.757,729,2.58,730,2.58,731,5.13,732,6.142,733,5.13,773,1.871,796,3.485,957,2.144,1039,1.995,1339,5.13,1340,2.58,1341,5.206,1345,2.144,1350,2.58,1352,2.33,1363,2.58,1365,2.58,1366,2.58,1367,6.575,1368,2.58,1369,2.58,1370,2.58,1371,2.58,1438,1.995,1574,3.485,1658,2.58,1659,5.884,1660,5.884,1661,5.884,1662,5.884,1663,5.884,1664,6.299,1665,2.959,1666,2.959,1667,2.959,1668,2.959,1669,2.959,1670,2.959,1671,2.959,1672,2.959,1673,2.33,1674,2.959,1675,2.959,1676,2.959,1677,2.959,1678,2.58,1679,2.959,1680,2.959,1681,2.959,1682,2.959,1683,2.58,1684,2.959,1685,2.959,1686,2.959,1687,2.959,1688,2.959,1689,6.61,1690,2.959,1691,2.959,1692,2.959,1693,2.959,1694,2.959,1695,2.959,1696,2.959,1697,4.425,1698,2.959,1699,2.959,1700,2.959,1701,2.58,1702,2.58,1703,2.58,1704,2.959,1705,2.959,1706,2.959,1707,4.425,1708,4.634,1709,4.425,1710,2.959,1711,2.58,1712,2.58,1713,2.959,1714,2.58,1715,2.959,1716,4.425,1717,2.959,1718,2.959,1719,4.425,1720,4.425,1721,4.425,1722,4.425,1723,4.425,1724,4.425,1725,2.959,1726,2.959,1727,2.959,1728,2.959,1729,2.959,1730,2.959,1731,2.959,1732,2.959,1733,2.959,1734,2.959,1735,2.959,1736,2.959,1737,2.959,1738,2.959,1739,2.959,1740,2.959,1741,2.959,1742,2.959,1743,2.959,1744,2.959,1745,2.959,1746,2.959,1747,2.959]],["title/classes/Service.html",[51,0.279,632,2.561]],["body/classes/Service.html",[2,0.014,3,0.114,4,0.168,12,0.19,50,0.084,51,0.283,54,0.004,55,0.004,77,0.566,78,3.536,82,1.297,104,0.818,141,0.554,159,0.701,167,1.156,182,0.324,188,0.663,200,2.793,203,2.151,207,2.193,208,2.68,209,2.736,210,1.769,211,1.769,212,1.769,213,1.189,214,1.769,216,2.736,221,3.102,222,2.33,224,2.708,225,2.857,226,2.857,227,2.743,228,3.359,237,2.316,240,2.554,241,1.371,242,2.441,245,2.354,246,2.23,249,1.154,250,1.202,251,1.154,252,1.202,253,1.7,254,1.154,255,1.364,256,1.202,257,1.154,258,1.202,259,1.843,261,1.149,262,1.154,263,1.202,272,1.202,273,2.441,274,0.922,275,1.843,276,3.22,279,1.371,280,1.438,284,1.936,381,0.991,382,0.922,538,2.511,629,3.16,631,1.693,632,4.022,688,3.595,712,3.77,714,3.77,715,3.614,716,3.77,717,4.403,718,3.614,719,5.214,720,5.214,721,4.349,722,4.349,725,1.939,737,2.972,759,3.577,764,2.334,766,2.334,768,2.447,769,1.939,775,1.939,776,1.939,777,2.108,779,2.975,780,1.939,783,2.334,784,2.334,785,2.334,786,2.334,787,1.939,788,1.693,789,1.805,790,1.805,791,3.577,792,3.577,793,3.231,794,3.577,1748,2.108,1749,2.677,1750,2.677,1751,2.677,1752,2.677,1753,2.677,1754,2.677,1755,2.677,1756,2.677,1757,2.677,1758,2.677,1759,2.677,1760,2.677,1761,2.677,1762,2.677,1763,2.677,1764,2.677,1765,2.677,1766,2.677,1767,2.677,1768,2.677,1769,2.677]],["title/classes/ServiceCategory.html",[51,0.279,629,2.288]],["body/classes/ServiceCategory.html",[2,0.013,3,0.139,4,0.097,12,0.187,50,0.109,51,0.344,54,0.005,55,0.005,77,0.662,82,1.175,141,0.722,159,0.914,182,0.414,188,1.133,200,2.996,201,4.225,203,2.515,204,2.905,205,3.806,207,2.369,208,3.133,209,3.296,210,2.153,211,2.153,212,2.153,213,1.447,214,2.153,216,2.854,217,3.688,218,3.688,219,4.225,221,2.339,222,1.951,224,1.567,225,2.243,226,2.243,227,2.515,228,2.905,233,4.225,237,2.587,238,2.979,240,2.558,241,2.558,242,2.444,243,3.367,245,2.356,246,1.992,249,1.505,250,1.567,251,1.505,252,1.567,253,2.07,254,1.505,255,1.66,256,1.567,257,1.505,258,1.567,259,2.243,261,1.399,262,1.505,263,1.567,266,2.528,268,2.528,270,2.528,272,1.567,273,3.115,274,1.202,275,2.243,276,2.745,277,2.528,279,1.787,280,1.875,282,2.528,283,1.787,284,1.121,287,2.353,288,3.367,543,2.207,548,3.933,555,2.207,557,2.207,629,3.96,632,4.259,1770,6.794,1771,3.043,1772,5.831,1773,3.489,1774,3.489,1775,3.489,1776,3.489,1777,3.489,1778,3.489,1779,3.489,1780,3.489,1781,3.489,1782,3.489,1783,3.489,1784,3.489,1785,3.489,1786,3.489]],["title/classes/ServiceCategoryController.html",[37,2.934,51,0.279]],["body/classes/ServiceCategoryController.html",[2,0.013,3,0.118,4,0.118,12,0.207,14,0.96,37,4.151,50,0.133,51,0.293,54,0.007,55,0.007,77,0.483,96,1.465,104,1.054,171,1.046,182,0.47,188,1.121,213,1.66,291,2.573,292,2.684,293,1.717,294,2.684,298,2.081,299,2.794,301,2.99,302,2.178,303,2.803,305,2.081,306,2.803,308,1.942,312,2.081,313,3.035,315,1.992,316,3.035,318,1.763,319,2.471,320,1.834,321,1.365,322,1.992,323,2.201,324,1.574,325,1.992,326,1.834,327,1.696,328,1.992,329,1.574,330,1.763,334,1.834,335,1.992,336,1.574,337,2.178,338,1.518,339,0.973,341,2.081,343,2.081,345,1.992,348,2.081,561,3.708,562,3.238,572,3.708,573,3.708,574,4.995,575,3.708,606,4.384,649,3.349,1787,6.643,1788,3.708,1789,4.252,1790,4.252,1791,4.252,1792,4.252,1793,4.252,1794,4.252,1795,4.252,1796,4.252,1797,4.252]],["title/injectables/ServiceCategoryService.html",[98,0.729,606,2.561]],["body/injectables/ServiceCategoryService.html",[2,0.013,3,0.117,4,0.117,12,0.207,14,0.708,50,0.132,51,0.291,54,0.007,55,0.007,77,0.48,82,1.275,98,1.027,104,1.057,141,0.874,151,1.822,152,1.623,159,1.107,160,1.564,167,0.874,171,1.044,182,0.449,188,0.683,204,2.46,261,1.184,293,1.71,308,1.598,321,1.832,351,2.993,354,4.134,355,2.673,356,2.562,358,4.662,363,1.898,369,4.134,373,2.792,375,2.673,377,1.898,378,1.98,379,1.898,380,1.98,381,1.564,382,1.456,383,1.98,386,1.509,398,3.062,399,3.062,538,1.898,577,4.974,578,3.685,580,4.134,582,4.974,588,3.685,589,3.328,590,3.685,591,3.685,593,3.685,594,3.685,606,3.608,629,4.081,630,3.328,631,2.672,1798,6.488,1799,3.685,1800,4.226,1801,4.226,1802,4.226,1803,4.226,1804,4.226,1805,3.685,1806,4.226]],["title/classes/ServiceController.html",[40,2.934,51,0.279]],["body/classes/ServiceController.html",[2,0.013,3,0.115,4,0.115,12,0.205,14,0.941,40,4.065,50,0.199,51,0.284,54,0.006,55,0.006,77,0.468,96,1.42,104,1.062,171,1.068,182,0.48,188,1.107,213,1.626,291,2.52,292,2.628,293,1.682,294,2.628,298,2.018,299,2.75,301,2.952,302,2.112,303,2.746,305,2.018,306,2.746,308,2.069,312,2.018,313,2.988,315,1.932,316,2.988,318,1.709,319,2.42,320,1.778,321,1.324,322,1.932,323,2.155,324,1.526,325,1.932,326,1.778,327,1.645,328,1.932,329,1.526,330,1.709,334,1.778,335,1.932,336,1.526,337,2.112,338,1.472,339,0.944,341,2.018,343,2.018,345,1.932,348,2.018,487,2.608,488,3.347,501,2.46,607,4.671,1807,3.595,1808,4.124,1809,4.124,1810,4.124,1811,4.124,1812,4.124,1813,4.124,1814,4.124,1815,4.124,1816,4.124,1817,4.124,1818,4.124,1819,4.124,1820,5.611,1821,5.611,1822,4.124]],["title/injectables/ServiceService.html",[98,0.729,607,2.561]],["body/injectables/ServiceService.html",[2,0.013,3,0.107,4,0.107,12,0.21,14,0.644,50,0.12,51,0.368,54,0.006,55,0.006,77,0.606,82,1.113,98,0.962,104,1.027,113,3.628,141,0.794,151,1.655,152,1.475,159,1.005,160,1.421,167,1.105,171,0.96,182,0.432,188,0.993,190,2.169,202,2.614,246,1.531,261,1.075,274,1.322,293,1.601,308,1.496,321,1.715,323,2.052,338,1.37,339,0.879,351,2.894,355,2.502,356,2.983,363,1.724,373,2.614,375,2.502,377,2.759,378,1.798,379,1.724,380,1.798,381,1.421,382,1.322,383,1.798,386,1.907,509,4.414,518,2.169,520,3.186,521,3.471,522,2.169,523,3.019,525,2.29,526,3.186,527,2.29,529,2.781,530,4.451,531,2.588,532,2.29,533,2.29,534,2.29,538,2.983,580,4.451,607,3.378,629,2.169,630,3.023,631,2.428,632,3.378,633,3.347,836,3.347,837,3.347,838,3.347,839,4.657,840,3.347,841,3.023,842,3.347,843,3.023,844,3.347,845,3.347,846,3.023,847,3.347,1805,3.347,1823,3.347,1824,3.839,1825,3.839,1826,5.341,1827,3.839,1828,3.839,1829,3.839,1830,3.839,1831,3.839,1832,3.839,1833,3.839,1834,3.839,1835,3.839]],["title/classes/Setting.html",[51,0.279,625,2.415]],["body/classes/Setting.html",[2,0.014,3,0.139,4,0.097,12,0.177,50,0.109,51,0.344,54,0.005,55,0.005,77,0.662,78,3.155,82,0.977,141,0.721,159,0.913,182,0.379,185,2.984,188,1.132,200,2.995,202,3.113,203,2.513,207,2.369,208,3.131,209,2.441,210,2.152,211,2.152,212,2.152,213,1.445,214,2.152,216,3.427,221,1.633,222,1.688,224,1.565,225,2.241,226,2.241,227,2.152,228,2.743,230,3.155,231,2.337,237,2.586,238,4.178,240,3.587,241,2.555,242,2.441,245,1.847,249,1.503,250,1.565,251,1.503,252,1.565,253,2.068,254,1.503,255,1.659,256,1.565,257,1.503,258,1.565,259,2.241,261,1.397,262,1.503,263,1.565,272,1.565,273,2.852,274,1.2,275,2.241,276,2.513,279,1.785,280,1.872,284,1.119,625,3.795,779,2.976,1070,5.547,1071,5.547,1167,3.929,1472,4.35,1836,3.039,1837,5.827,1838,5.827,1839,3.485,1840,4.989,1841,4.989,1842,4.989,1843,4.35,1844,4.989,1845,4.989,1846,6.361,1847,4.989,1848,4.989,1849,3.485,1850,3.485,1851,3.485,1852,3.485,1853,3.485,1854,3.485,1855,3.485,1856,3.485,1857,4.989,1858,3.485,1859,3.485]],["title/classes/SettingController.html",[25,2.934,51,0.279]],["body/classes/SettingController.html",[2,0.013,3,0.144,4,0.144,12,0.218,14,1.09,25,4.711,50,0.161,51,0.356,54,0.008,55,0.008,77,0.586,96,1.779,104,1.011,171,0.94,182,0.423,291,3.355,294,3.046,301,2.804,315,2.419,316,3.334,318,2.14,319,2.804,320,2.227,324,1.911,325,2.419,326,2.227,327,2.06,328,2.419,329,1.911,330,2.14,334,2.227,335,2.419,336,1.911,345,2.419,608,4.688,669,4.502,686,4.502,1860,4.502,1861,5.163,1862,5.163,1863,5.163,1864,5.163,1865,5.163,1866,5.163,1867,5.163]],["title/injectables/SettingService.html",[98,0.729,608,2.415]],["body/injectables/SettingService.html",[2,0.013,3,0.131,4,0.131,12,0.208,14,0.788,50,0.147,51,0.324,54,0.007,55,0.007,77,0.534,82,1.309,98,1.102,104,1.038,113,3.529,141,0.972,151,2.027,152,1.805,159,1.231,160,1.74,167,0.972,171,0.885,182,0.398,185,3.135,188,0.76,222,1.774,261,1.316,293,1.835,308,1.316,351,3.1,355,2.868,356,2.75,363,2.111,375,2.868,377,2.111,378,2.202,379,2.111,380,2.202,383,2.202,386,1.678,608,3.652,625,3.652,626,4.098,1868,4.098,1869,6.122,1870,4.7,1871,4.7,1872,6.122,1873,6.122,1874,4.7,1875,4.7,1876,4.7,1877,4.7,1878,4.7,1879,4.7,1880,4.7]],["title/classes/StatusTask.html",[51,0.279,639,2.934]],["body/classes/StatusTask.html",[2,0.013,3,0.2,4,0.097,12,0.212,15,1.243,50,0.109,51,0.24,54,0.005,55,0.005,104,0.927,159,0.911,167,1.391,171,0.919,182,0.226,188,1.088,283,3.949,284,2.042,324,2.156,422,2.076,424,4.014,437,2.347,620,3.035,621,3.035,639,3.612,682,2.347,683,3.035,710,2.076,728,2.076,768,2.973,773,2.201,774,2.741,795,4.346,808,3.035,809,4.346,906,4.255,957,4.607,1030,2.347,1146,3.361,1303,5.077,1328,2.522,1345,2.522,1673,2.741,1708,3.926,1711,5.544,1712,5.544,1714,5.544,1881,3.035,1882,5.823,1883,6.358,1884,6.358,1885,4.984,1886,3.481,1887,4.984,1888,3.481,1889,3.481,1890,3.481,1891,4.984,1892,4.984,1893,3.481,1894,3.481,1895,3.481,1896,3.481,1897,3.481,1898,3.481,1899,3.481,1900,3.481,1901,4.984,1902,4.984,1903,3.481,1904,3.481,1905,3.481,1906,4.346,1907,4.984,1908,3.481,1909,3.481,1910,3.481,1911,4.984,1912,3.481,1913,3.481,1914,3.481,1915,3.481,1916,3.481,1917,3.926,1918,3.481,1919,6.728,1920,3.481,1921,3.035,1922,5.823,1923,5.823,1924,5.823,1925,3.481,1926,4.984,1927,3.481,1928,3.481,1929,3.481,1930,4.984,1931,3.481,1932,6.358,1933,3.481,1934,3.481,1935,3.481,1936,3.481,1937,3.481,1938,4.984,1939,3.481,1940,3.481,1941,3.481,1942,3.481]],["title/classes/StorageController.html",[21,2.934,51,0.279]],["body/classes/StorageController.html",[2,0.013,3,0.113,4,0.113,12,0.222,14,0.682,15,1.452,21,4.028,50,0.127,51,0.28,54,0.006,55,0.006,77,0.462,96,1.401,104,0.946,167,1.521,171,0.588,182,0.264,204,2.397,222,1.179,231,2.604,246,1.623,261,1.907,283,3.244,299,2.397,318,1.686,319,2.397,320,1.754,323,2.615,326,1.754,327,1.623,329,1.506,330,1.686,334,1.754,336,1.506,338,2.43,339,1.558,417,3.142,418,4.028,422,2.427,424,2.427,425,3.204,449,4.028,602,4.652,689,3.547,691,3.547,768,3.316,787,2.948,788,2.573,906,3.516,1021,4.507,1026,2.948,1029,2.743,1030,4.59,1031,2.948,1056,4.847,1345,4.589,1542,2.573,1673,3.204,1678,3.547,1683,3.547,1943,3.547,1944,4.847,1945,6.807,1946,4.068,1947,4.068,1948,4.068,1949,4.068,1950,4.068,1951,5.559,1952,4.068,1953,5.522,1954,5.559,1955,4.068,1956,5.559,1957,4.068,1958,5.559,1959,5.559,1960,3.547,1961,4.068,1962,4.068,1963,4.068,1964,4.068,1965,4.068,1966,4.068,1967,3.547,1968,4.068,1969,4.068,1970,4.068,1971,4.068,1972,4.068,1973,4.068,1974,4.068,1975,4.068,1976,4.068,1977,4.068,1978,4.068,1979,4.068,1980,5.559,1981,4.068,1982,4.068,1983,4.068,1984,4.068,1985,4.068,1986,4.068,1987,4.068,1988,4.068,1989,4.068,1990,4.068,1991,4.068,1992,4.068]],["title/classes/UpdateContentDto.html",[51,0.279,973,2.934]],["body/classes/UpdateContentDto.html",[2,0.013,3,0.123,4,0.123,12,0.163,50,0.184,51,0.455,54,0.007,55,0.007,77,0.967,82,1.395,83,4.258,88,4.199,93,4.942,94,2.979,95,5.674,96,1.522,209,3.445,216,3.445,245,2.79,688,3.979,712,4.747,714,4.747,715,5.101,716,4.747,718,5.101,963,3.201,964,3.479,973,4.258,1993,4.418,1994,4.418,1995,4.418,1996,4.418,1997,4.418,1998,4.418,1999,4.418,2000,4.418]],["title/classes/User.html",[51,0.279,142,1.678]],["body/classes/User.html",[2,0.013,3,0.112,4,0.073,12,0.194,50,0.082,51,0.279,54,0.004,55,0.004,78,3.118,79,4.299,80,3.883,81,4.299,82,1.302,103,3.128,104,0.812,141,0.543,142,1.676,145,1.346,157,3.323,159,0.688,167,0.543,169,2.069,171,0.585,179,2.291,182,0.36,186,2.291,188,0.654,200,2.778,203,2.126,207,1.92,210,1.744,211,1.744,212,1.744,213,1.172,214,1.744,221,3.332,222,2.308,224,1.817,225,2.487,226,2.487,227,3.004,228,3.302,230,2.558,231,2.31,237,1.894,245,2.05,246,1.613,249,1.133,250,1.18,251,1.133,252,1.18,253,1.676,254,1.133,255,1.345,256,1.18,257,1.133,258,1.18,259,1.817,261,1.133,262,1.133,263,1.18,272,1.18,273,2.71,274,0.905,275,1.817,276,3.243,284,1.299,419,3.526,543,2.558,555,1.662,557,2.558,627,2.975,719,5.18,720,5.18,725,2.93,769,1.904,777,2.069,779,1.567,780,2.93,1146,3.324,1264,3.883,1271,2.291,1438,3.324,1439,3.118,1555,4.299,1566,2.291,1572,3.526,1574,2.069,1702,4.299,1703,4.299,2001,2.291,2002,5.505,2003,4.93,2004,4.828,2005,4.299,2006,5.505,2007,4.93,2008,4.93,2009,2.628,2010,2.628,2011,2.628,2012,2.628,2013,2.628,2014,2.628,2015,2.628,2016,2.628,2017,2.628,2018,2.628,2019,2.628,2020,2.628,2021,2.628,2022,2.628,2023,2.628,2024,2.628,2025,2.628,2026,2.628,2027,2.628,2028,2.628,2029,2.628,2030,2.628,2031,2.628,2032,2.628,2033,2.628,2034,2.628,2035,2.628,2036,2.291,2037,2.291,2038,2.628,2039,2.628,2040,2.069,2041,2.628,2042,2.628,2043,2.628,2044,2.628,2045,2.628,2046,2.628,2047,2.628,2048,4.044,2049,4.044,2050,3.526,2051,2.291,2052,2.628,2053,2.628,2054,2.291,2055,2.628,2056,2.628]],["title/classes/UserController.html",[19,2.934,51,0.279]],["body/classes/UserController.html",[2,0.013,3,0.104,4,0.104,12,0.199,14,0.627,19,3.799,50,0.117,51,0.258,54,0.006,55,0.006,77,0.424,96,1.288,104,1.068,105,4.572,142,2.721,171,1.086,182,0.488,213,1.519,292,2.456,293,1.572,294,2.456,298,1.83,299,2.612,301,3.335,303,1.83,305,1.83,306,2.566,308,1.839,312,1.83,313,2.837,315,1.751,316,2.837,318,1.55,319,2.261,320,1.612,321,1.201,322,1.751,324,1.941,325,1.751,326,1.612,327,1.491,328,1.751,329,1.384,330,1.55,334,1.612,335,2.456,336,1.384,341,1.83,343,1.83,345,1.751,348,1.83,609,4.05,1017,4.13,1384,2.944,1426,5.28,1428,3.26,1430,3.26,1433,3.26,1537,4.757,2057,3.26,2058,4.572,2059,5.243,2060,3.739,2061,3.739,2062,5.243,2063,3.739,2064,3.739,2065,3.739,2066,3.739,2067,3.739,2068,3.739,2069,3.739,2070,3.739,2071,3.739,2072,3.739,2073,3.739,2074,5.243,2075,3.739,2076,3.739,2077,3.739,2078,2.944,2079,3.739,2080,3.739,2081,3.739,2082,3.739,2083,3.739,2084,3.739,2085,3.739,2086,3.739,2087,3.739,2088,3.739,2089,3.739,2090,3.739,2091,3.739,2092,3.739,2093,5.243,2094,3.739]],["title/injectables/UserService.html",[98,0.729,609,2.288]],["body/injectables/UserService.html",[2,0.013,3,0.068,4,0.068,12,0.208,14,0.411,15,0.875,50,0.077,51,0.264,54,0.004,55,0.004,77,0.657,82,0.895,98,0.69,103,1.102,104,1.023,113,3.584,118,4.115,120,3.343,140,2.138,141,0.507,142,3.036,143,1.654,144,1.386,145,1.256,151,1.058,152,0.942,156,1.654,157,3.338,158,1.777,159,0.642,160,0.908,164,3.343,165,2.138,167,1.533,170,2.138,171,1.13,172,2.138,182,0.431,183,2.138,185,2.733,188,0.992,190,1.386,191,3.717,202,1.2,239,1.654,246,1.882,274,0.845,291,1.722,293,1.149,296,3.826,301,2.035,308,1.622,321,1.231,323,2.224,338,1.905,339,1.326,351,2.4,355,2.211,356,2.397,363,1.102,373,1.876,375,1.149,377,2.12,378,1.149,379,1.102,380,1.149,381,0.908,382,0.845,383,1.149,386,2.067,437,1.654,509,3.882,518,2.667,520,2.287,521,2.667,522,1.386,523,2.167,525,1.463,526,2.287,527,1.463,529,1.777,530,1.777,531,1.654,532,1.463,533,1.463,534,1.463,600,3.826,609,2.167,616,2.138,627,2.536,841,1.932,843,1.932,1038,1.386,1047,2.138,1241,2.138,1247,2.138,1264,3.019,1421,3.343,1438,3.904,1439,3.375,1595,4.115,1602,2.138,2004,3.343,2036,2.138,2037,2.138,2050,3.343,2051,2.138,2058,3.343,2095,2.138,2096,3.834,2097,2.452,2098,6.138,2099,4.72,2100,2.452,2101,3.834,2102,2.452,2103,3.834,2104,2.452,2105,3.834,2106,2.452,2107,2.452,2108,3.834,2109,2.452,2110,2.452,2111,4.72,2112,2.452,2113,2.452,2114,2.452,2115,2.138,2116,2.452,2117,2.452,2118,2.452,2119,2.452,2120,4.72,2121,4.72,2122,4.72,2123,3.834,2124,2.452,2125,3.834,2126,2.452,2127,3.834,2128,2.452,2129,2.452,2130,2.452,2131,2.452,2132,2.452,2133,2.452,2134,2.452,2135,2.452,2136,2.452,2137,3.834,2138,3.834,2139,2.452,2140,2.452,2141,2.452,2142,2.452,2143,5.336,2144,3.834,2145,2.452,2146,2.452,2147,2.452,2148,2.452,2149,2.452,2150,2.452,2151,2.452,2152,5.336,2153,2.452,2154,3.834,2155,3.834,2156,2.452,2157,2.452,2158,2.452,2159,2.452,2160,2.452,2161,2.452,2162,2.452,2163,2.452,2164,2.452,2165,2.452,2166,2.452,2167,2.452,2168,3.834,2169,2.452,2170,2.452]],["title/injectables/WorkOrderFlow.html",[98,0.729,611,2.73]],["body/injectables/WorkOrderFlow.html",[2,0.013,3,0.152,4,0.152,12,0.187,14,0.914,15,1.947,50,0.171,51,0.376,54,0.008,55,0.008,98,1.211,103,3.276,104,0.979,160,2.49,182,0.495,437,3.677,611,4.535,1906,6.64,2171,6.36,2172,4.755,2173,5.453,2174,5.453,2175,5.453]],["title/coverage.html",[2176,5.541]],["body/coverage.html",[2,0.013,15,1.818,17,2.006,19,2.006,21,2.006,23,2.006,25,2.006,27,2.006,29,2.006,31,2.006,33,2.006,35,2.006,37,2.006,40,2.006,42,2.006,44,2.006,47,2.006,51,0.578,54,0.004,55,0.004,60,1.867,68,1.867,74,2.181,75,2.415,76,2.415,98,1.418,99,1.867,100,2.415,101,2.415,102,2.006,103,1.244,142,1.148,147,1.488,153,1.751,157,1.355,198,1.652,199,2.415,200,1.105,240,2.156,242,2.06,246,3.421,290,2.415,296,1.652,329,1.025,339,0.634,350,2.415,351,1.148,408,2.415,417,1.565,431,2.415,438,1.652,455,2.415,463,1.867,464,2.415,477,2.415,480,1.751,504,2.415,538,1.244,539,2.415,542,1.488,560,2.415,562,1.565,576,2.415,598,1.751,599,1.751,600,1.652,601,1.751,602,1.751,603,1.751,604,1.751,605,1.751,606,1.751,607,1.751,608,1.652,609,1.565,610,1.867,611,1.867,625,1.652,627,1.488,629,1.565,632,1.751,639,2.006,656,1.867,665,2.415,682,1.867,711,4.011,773,1.751,775,2.006,776,2.006,810,2.415,826,2.415,851,2.006,852,3.434,963,2.006,964,3.316,973,2.006,974,3.837,988,2.662,991,2.006,992,1.867,1038,1.565,1039,1.867,1040,2.181,1126,2.181,1127,2.415,1176,2.415,1199,2.415,1220,2.415,1262,2.415,1263,2.415,1273,2.415,1274,2.415,1290,2.415,1291,2.415,1300,3.05,1301,4.011,1328,2.006,1336,2.415,1372,2.006,1373,2.006,1374,2.415,1382,2.415,1420,2.415,1424,2.006,1437,2.415,1450,3.05,1471,2.415,1481,2.415,1497,2.415,1514,2.415,1537,2.006,1538,2.415,1542,1.751,1543,2.415,1554,2.415,1575,2.415,1591,2.415,1607,2.181,1608,2.181,1637,2.415,1647,2.415,1658,2.415,1748,4.011,1770,2.415,1771,2.415,1787,2.415,1788,2.415,1798,2.415,1799,2.415,1807,2.415,1823,2.415,1836,2.415,1860,2.415,1868,2.415,1881,2.415,1943,2.415,2001,2.415,2040,2.181,2057,2.415,2078,2.181,2095,2.415,2171,2.415,2172,2.415,2177,7.071,2178,6.7,2179,6.446,2180,6.446,2181,6.904,2182,4.21,2183,3.316,2184,7.071,2185,8.1,2186,7.783,2187,5.69,2188,2.415,2189,6.121,2190,2.769,2191,5.69,2192,5.093,2193,2.769,2194,6.446,2195,4.21,2196,2.769,2197,2.769,2198,2.415,2199,4.441,2200,2.415,2201,2.415,2202,2.769,2203,2.415,2204,2.415,2205,5.076,2206,2.415,2207,2.415,2208,2.415,2209,2.181,2210,2.415,2211,2.769,2212,2.769]],["title/dependencies.html",[57,3.531,2213,3.374]],["body/dependencies.html",[2,0.013,54,0.01,55,0.01]],["title/miscellaneous/enumerations.html",[2214,2.657,2215,4.874]],["body/miscellaneous/enumerations.html",[2,0.013,3,0.173,12,0.173,54,0.007,55,0.007,88,3.71,144,3.515,153,3.046,154,3.933,155,3.933,253,2.578,279,3.185,418,4.506,852,3.248,868,4.898,869,4.898,870,4.506,871,4.898,872,4.898,873,4.194,874,4.898,974,3.248,989,4.506,995,4.898,996,3.793,997,3.793,998,3.793,1038,3.515,1040,3.793,1059,4.2,1060,4.2,1450,3.49,1476,5.423,1542,3.933,1608,3.793,1611,5.423,1613,5.423,1617,5.423,1917,4.898,1921,5.423,1944,5.423,1960,5.423,2002,5.423,2006,5.423,2115,5.423,2216,4.816,2217,7.958,2218,4.2,2219,4.2,2220,4.816,2221,5.423,2222,4.816,2223,6.219,2224,6.219,2225,4.816,2226,4.816,2227,6.219,2228,6.219,2229,4.816,2230,4.816,2231,6.219,2232,4.816,2233,4.816,2234,4.816,2235,4.816,2236,4.816,2237,4.816]],["title/miscellaneous/functions.html",[2214,2.657,2238,4.874]],["body/miscellaneous/functions.html",[2,0.013,15,2.366,54,0.008,55,0.008,60,4.866,329,2.454,688,3.009,775,4.803,776,4.803,793,4.194,1021,4.192,1024,4.803,1165,4.643,1953,4.643,2005,4.643,2040,5.22,2183,4.194,2188,4.643,2199,4.643,2205,4.194,2206,5.779,2207,5.779,2208,5.779,2239,4.643,2240,6.585,2241,7.217,2242,5.325,2243,5.325,2244,4.643,2245,5.325,2246,5.325,2247,5.325,2248,5.325,2249,6.628,2250,5.325,2251,5.325,2252,5.325,2253,6.628,2254,5.325]],["title/index.html",[728,2.013,1004,2.445,2255,2.942]],["body/index.html",[2,0.013,54,0.008,55,0.008,141,1.332,329,1.883,682,4.342,805,4.435,924,4.666,1057,5.615,1149,4.435,1309,4.435,1701,4.435,2054,4.435,2209,4.006,2256,5.086,2257,5.086,2258,5.086,2259,5.086,2260,5.086,2261,5.086,2262,5.086,2263,5.086,2264,5.086,2265,5.086,2266,5.086,2267,5.086,2268,5.086,2269,5.086,2270,8.121,2271,5.086,2272,5.086,2273,5.086,2274,5.086,2275,5.086,2276,5.086,2277,7.067,2278,5.615,2279,5.086,2280,6.44,2281,5.086,2282,5.086,2283,5.086,2284,5.086,2285,6.44,2286,5.086,2287,5.086,2288,5.086,2289,5.086,2290,4.435,2291,5.086]],["title/license.html",[1004,2.445,2255,2.942,2292,2.942]],["body/license.html",[2,0.011,54,0.008,55,0.008,449,3.935,656,4.524,1341,4.278,1843,6.349,1917,4.278,1967,4.736,2290,4.736,2292,4.736,2293,4.736,2294,5.431,2295,5.431,2296,5.431,2297,6.71,2298,5.431,2299,5.431,2300,5.431,2301,5.431,2302,5.431,2303,5.431,2304,6.71,2305,8.214,2306,5.431,2307,5.431,2308,5.431,2309,7.281,2310,5.431,2311,6.71,2312,5.431,2313,5.431,2314,6.71,2315,5.431,2316,5.431,2317,5.431,2318,5.431,2319,5.431,2320,5.431,2321,5.431,2322,6.71,2323,5.431,2324,5.431,2325,5.431,2326,5.431,2327,5.431,2328,5.431,2329,5.431,2330,6.71,2331,5.431,2332,5.431,2333,5.431,2334,5.431,2335,5.431,2336,5.431,2337,5.431,2338,5.431,2339,5.431,2340,5.431,2341,5.431,2342,5.431,2343,5.431,2344,5.431,2345,5.431,2346,5.431,2347,5.431,2348,5.431,2349,5.431,2350,5.431,2351,5.431,2352,5.431,2353,5.431,2354,5.431,2355,5.431,2356,5.431,2357,5.431,2358,5.431]],["title/modules.html",[2359,5.541]],["body/modules.html",[1,4.357,2,0.013,54,0.01,55,0.01,56,4.682,66,4.357,67,4.357,679,6.49]],["title/overview.html",[2360,5.541]],["body/overview.html",[0,2.219,1,4.304,2,0.013,54,0.006,55,0.006,56,5.716,57,2.992,58,3.253,59,3.253,60,2.785,61,3.253,62,3.253,63,3.601,64,3.601,65,3.601,66,5.797,67,4.304,68,4.304,99,4.304,296,4.51,480,4.781,562,4.273,595,3.601,596,3.601,597,3.601,598,4.781,599,4.781,600,4.51,601,4.781,602,4.781,603,4.781,604,4.781,605,4.781,606,4.781,607,4.781,608,4.51,609,4.273,610,4.304,611,4.304,692,3.601,1372,2.992,1629,4.07,2361,4.13,2362,4.13]],["title/miscellaneous/variables.html",[2214,2.657,2363,4.874]],["body/miscellaneous/variables.html",[2,0.013,4,0.137,15,2.255,54,0.005,55,0.005,78,3.121,82,0.575,117,2.314,153,3.654,182,0.223,207,1.855,209,2.415,216,2.415,231,1.608,237,2.427,240,3.235,241,2.527,242,3.091,243,2.314,284,1.102,322,2.312,339,1.595,417,2.789,438,2.047,522,1.94,661,2.703,682,4.26,688,2.789,703,4.303,710,3.768,711,2.703,712,3.327,714,3.327,716,3.327,717,3.886,737,2.487,773,3.654,852,2.314,870,2.487,889,2.703,924,4.577,926,2.703,927,2.703,974,2.314,988,3.995,1038,2.789,1045,2.993,1131,5.508,1142,2.993,1146,3.327,1159,2.993,1160,2.993,1167,2.703,1300,4.186,1301,2.703,1328,3.576,1329,2.993,1330,2.993,1331,2.993,1400,4.303,1439,3.121,1449,2.703,1450,2.487,1542,2.171,1629,2.487,1708,2.703,1748,2.703,2078,3.886,2183,2.703,2198,2.993,2200,2.993,2201,5.038,2203,2.993,2204,2.993,2205,2.703,2209,3.886,2210,4.303,2218,2.993,2219,2.993,2221,4.303,2239,2.993,2240,4.303,2244,2.993,2278,2.993,2293,2.993,2364,4.935,2365,4.935,2366,3.432,2367,3.432,2368,3.432,2369,4.935,2370,3.432,2371,5.778,2372,3.432,2373,3.432,2374,3.432,2375,3.432,2376,3.432,2377,3.432,2378,3.432,2379,3.432,2380,3.432,2381,3.432,2382,4.935,2383,3.432,2384,3.432,2385,3.432,2386,3.432,2387,3.432,2388,3.432,2389,4.935,2390,3.432,2391,3.432,2392,3.432,2393,3.432,2394,4.935,2395,3.432,2396,3.432,2397,3.432,2398,3.432,2399,3.432,2400,4.935,2401,5.778,2402,3.432,2403,3.432,2404,4.935,2405,3.432,2406,3.432,2407,3.432,2408,3.432,2409,3.432,2410,3.432,2411,3.432,2412,3.432,2413,4.935,2414,3.432,2415,3.432,2416,3.432,2417,3.432,2418,3.432,2419,3.432,2420,3.432,2421,3.432,2422,3.432,2423,3.432,2424,3.432,2425,3.432,2426,3.432,2427,6.968,2428,3.432,2429,3.432,2430,3.432,2431,3.432,2432,3.432,2433,3.432,2434,3.432,2435,3.432,2436,3.432,2437,3.432,2438,3.432,2439,3.432,2440,3.432,2441,3.432,2442,3.432,2443,3.432,2444,3.432,2445,3.432,2446,3.432,2447,3.432,2448,3.432,2449,3.432,2450,3.432,2451,3.432,2452,3.432]]],"invertedIndex":[["",{"_index":2,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/ApplyVolunteerDto.html":{},"injectables/ApplyVolunteerFlow.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseFlow.html":{},"classes/BaseService.html":{},"classes/Carousel.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/Engine.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"classes/Flow.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"classes/FlowTemplateController.html":{},"injectables/FlowTemplateService.html":{},"interfaces/IFlow.html":{},"classes/IO.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/MQ.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Qiniu.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/SMS.html":{},"modules/SSRModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/ServiceCategoryController.html":{},"injectables/ServiceCategoryService.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"injectables/WorkOrderFlow.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":246,"title":{},"body":{"classes/Authority.html":{},"injectables/CarouselService.html":{},"classes/Category.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"injectables/ServiceService.html":{},"classes/StorageController.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.0.0",{"_index":2374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":2185,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2182,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2194,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2192,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2195,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2190,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2202,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2187,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2196,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2193,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":2197,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2180,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2181,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2189,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2191,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2179,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2177,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2178,"title":{},"body":{"coverage.html":{}}}],["0o1i",{"_index":695,"title":{},"body":{"injectables/CommonService.html":{}}}],["0oo1i1k",{"_index":694,"title":{},"body":{"injectables/CommonService.html":{}}}],["1",{"_index":1629,"title":{},"body":{"classes/SMS.html":{},"injectables/SearchService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10",{"_index":522,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/SearchService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["10.14.5",{"_index":2260,"title":{},"body":{"index.html":{}}}],["1000",{"_index":2400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1024",{"_index":2389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.10.0",{"_index":2262,"title":{},"body":{"index.html":{}}}],["12",{"_index":1449,"title":{},"body":{"classes/LoginDto.html":{},"classes/PasswordDto.html":{},"miscellaneous/variables.html":{}}}],["120",{"_index":794,"title":{},"body":{"classes/Content.html":{},"classes/Service.html":{}}}],["123456",{"_index":2415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12345678",{"_index":2054,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["127.0.0.1",{"_index":2401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["127.0.0.1:9200",{"_index":2443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12位'})@isnotempty({message",{"_index":1443,"title":{},"body":{"classes/LoginDto.html":{},"classes/PasswordDto.html":{}}}],["19",{"_index":2361,"title":{},"body":{"overview.html":{}}}],["2",{"_index":704,"title":{},"body":{"injectables/CommonService.html":{},"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"classes/Logger.html":{}}}],["2019",{"_index":2294,"title":{},"body":{"license.html":{}}}],["3",{"_index":889,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["3.7.7",{"_index":2267,"title":{},"body":{"index.html":{}}}],["30",{"_index":1938,"title":{},"body":{"classes/StatusTask.html":{}}}],["3000",{"_index":2372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":2405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["360000",{"_index":2397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":692,"title":{},"body":{"injectables/CommonService.html":{},"overview.html":{}}}],["46",{"_index":2362,"title":{},"body":{"overview.html":{}}}],["5",{"_index":2383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.3",{"_index":2263,"title":{},"body":{"index.html":{}}}],["50",{"_index":2388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5432",{"_index":2412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60",{"_index":703,"title":{},"body":{"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["6379",{"_index":2402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["720",{"_index":739,"title":{},"body":{"classes/Content.html":{}}}],["7200",{"_index":2440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":1156,"title":{},"body":{"classes/ExceptionsFilter.html":{},"classes/LoginDto.html":{},"classes/PasswordDto.html":{},"classes/SMS.html":{}}}],["8位'})@maxlength(12",{"_index":1442,"title":{},"body":{"classes/LoginDto.html":{},"classes/PasswordDto.html":{}}}],["9.6",{"_index":2265,"title":{},"body":{"index.html":{}}}],["_",{"_index":381,"title":{},"body":{"injectables/AuthorityService.html":{},"classes/BaseFlow.html":{},"classes/Carousel.html":{},"injectables/CarouselService.html":{},"injectables/CategoryService.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"classes/Logger.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"classes/Service.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["_.isarray(obj",{"_index":1092,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["_.isempty(this.publish_at",{"_index":785,"title":{},"body":{"classes/Content.html":{},"classes/Service.html":{}}}],["_.upperfirst(_.camelcase(basename",{"_index":961,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["above",{"_index":2329,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":420,"title":{},"body":{"classes/Base.html":{},"classes/BaseFlow.html":{},"classes/BaseService.html":{}}}],["accesskey",{"_index":2432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["account",{"_index":1438,"title":{},"body":{"classes/LoginDto.html":{},"classes/SMS.html":{},"injectables/Seed.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["action",{"_index":449,"title":{},"body":{"classes/BaseFlow.html":{},"injectables/FlowService.html":{},"classes/StorageController.html":{},"license.html":{}}}],["actiontype",{"_index":2152,"title":{},"body":{"injectables/UserService.html":{}}}],["add",{"_index":1921,"title":{},"body":{"classes/StatusTask.html":{},"miscellaneous/enumerations.html":{}}}],["adddir",{"_index":1925,"title":{},"body":{"classes/StatusTask.html":{}}}],["addlink",{"_index":1166,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["address",{"_index":78,"title":{},"body":{"classes/ApplyVolunteerDto.html":{},"classes/Content.html":{},"classes/Service.html":{},"classes/Setting.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["adonis.js",{"_index":1169,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["afterinsert",{"_index":770,"title":{},"body":{"classes/Content.html":{}}}],["afterupdate",{"_index":771,"title":{},"body":{"classes/Content.html":{}}}],["amqp",{"_index":1460,"title":{},"body":{"classes/MQ.html":{}}}],["amqp.channel",{"_index":1453,"title":{},"body":{"classes/MQ.html":{}}}],["amqp.connect(config.mq.url",{"_index":1466,"title":{},"body":{"classes/MQ.html":{}}}],["amqp.connection",{"_index":1455,"title":{},"body":{"classes/MQ.html":{}}}],["amqp://localhost",{"_index":2444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amqplib",{"_index":1461,"title":{},"body":{"classes/MQ.html":{}}}],["analyzer",{"_index":731,"title":{},"body":{"classes/Content.html":{},"injectables/Seed.html":{}}}],["and/or",{"_index":2320,"title":{},"body":{"license.html":{}}}],["andwhere('t.wfresult",{"_index":1258,"title":{},"body":{"injectables/FlowService.html":{}}}],["andwhere('template.template",{"_index":1257,"title":{},"body":{"injectables/FlowService.html":{}}}],["api",{"_index":329,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/LoginController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["api('authority",{"_index":332,"title":{},"body":{"classes/AuthorityController.html":{}}}],["api('carousel",{"_index":495,"title":{},"body":{"classes/CarouselController.html":{}}}],["api('category",{"_index":570,"title":{},"body":{"classes/CategoryController.html":{}}}],["api('content",{"_index":820,"title":{},"body":{"classes/ContentController.html":{}}}],["api('flow",{"_index":1212,"title":{},"body":{"classes/FlowController.html":{}}}],["api('flow/template",{"_index":1284,"title":{},"body":{"classes/FlowTemplateController.html":{}}}],["api('login",{"_index":1431,"title":{},"body":{"classes/LoginController.html":{}}}],["api('organization",{"_index":1507,"title":{},"body":{"classes/OrganizationController.html":{}}}],["api('role",{"_index":1585,"title":{},"body":{"classes/RoleController.html":{}}}],["api('search",{"_index":1643,"title":{},"body":{"classes/SearchController.html":{}}}],["api('service",{"_index":1817,"title":{},"body":{"classes/ServiceController.html":{}}}],["api('service/category",{"_index":1796,"title":{},"body":{"classes/ServiceCategoryController.html":{}}}],["api('setting",{"_index":1865,"title":{},"body":{"classes/SettingController.html":{}}}],["api('storage",{"_index":1963,"title":{},"body":{"classes/StorageController.html":{}}}],["api('user",{"_index":2080,"title":{},"body":{"classes/UserController.html":{}}}],["api(prefix",{"_index":2243,"title":{},"body":{"miscellaneous/functions.html":{}}}],["api/api.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["apibearerauth",{"_index":319,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{}}}],["apiconsumes",{"_index":1957,"title":{},"body":{"classes/StorageController.html":{}}}],["apiconsumes('multipart/form",{"_index":1965,"title":{},"body":{"classes/StorageController.html":{}}}],["apiimplicitfile",{"_index":1958,"title":{},"body":{"classes/StorageController.html":{}}}],["apimodelproperty",{"_index":95,"title":{},"body":{"classes/ApplyVolunteerDto.html":{},"classes/CreateContentDto.html":{},"classes/LoginDto.html":{},"classes/PasswordDto.html":{},"classes/UpdateContentDto.html":{}}}],["apimodelproperty()@ismobilephone('zh",{"_index":86,"title":{},"body":{"classes/ApplyVolunteerDto.html":{}}}],["apimodelproperty()@isnotempty({message",{"_index":83,"title":{},"body":{"classes/ApplyVolunteerDto.html":{},"classes/CreateContentDto.html":{},"classes/LoginDto.html":{},"classes/UpdateContentDto.html":{}}}],["apimodelproperty()@minlength(8",{"_index":1441,"title":{},"body":{"classes/LoginDto.html":{},"classes/PasswordDto.html":{}}}],["apimodule",{"_index":1,"title":{"modules/ApiModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apiusetags",{"_index":318,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/LoginController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{}}}],["apiusetags('authority",{"_index":333,"title":{},"body":{"classes/AuthorityController.html":{}}}],["apiusetags('carousel",{"_index":496,"title":{},"body":{"classes/CarouselController.html":{}}}],["apiusetags('category",{"_index":571,"title":{},"body":{"classes/CategoryController.html":{}}}],["apiusetags('content",{"_index":821,"title":{},"body":{"classes/ContentController.html":{}}}],["apiusetags('flow",{"_index":1213,"title":{},"body":{"classes/FlowController.html":{}}}],["apiusetags('flow/template",{"_index":1285,"title":{},"body":{"classes/FlowTemplateController.html":{}}}],["apiusetags('login",{"_index":1432,"title":{},"body":{"classes/LoginController.html":{}}}],["apiusetags('organization",{"_index":1508,"title":{},"body":{"classes/OrganizationController.html":{}}}],["apiusetags('role",{"_index":1586,"title":{},"body":{"classes/RoleController.html":{}}}],["apiusetags('search",{"_index":1644,"title":{},"body":{"classes/SearchController.html":{}}}],["apiusetags('service",{"_index":1818,"title":{},"body":{"classes/ServiceController.html":{}}}],["apiusetags('service/category",{"_index":1797,"title":{},"body":{"classes/ServiceCategoryController.html":{}}}],["apiusetags('setting",{"_index":1866,"title":{},"body":{"classes/SettingController.html":{}}}],["apiusetags('storage",{"_index":1964,"title":{},"body":{"classes/StorageController.html":{}}}],["apiusetags('user",{"_index":2081,"title":{},"body":{"classes/UserController.html":{}}}],["app",{"_index":2249,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appenders",{"_index":920,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["application/json",{"_index":1154,"title":{},"body":{"classes/ExceptionsFilter.html":{},"classes/SMS.html":{}}}],["apply",{"_index":105,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/UserController.html":{}}}],["apply(@body",{"_index":2088,"title":{},"body":{"classes/UserController.html":{}}}],["apply(dto",{"_index":2061,"title":{},"body":{"classes/UserController.html":{}}}],["apply(flow",{"_index":116,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["apply_vr",{"_index":2224,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["applyvolunteer",{"_index":2096,"title":{},"body":{"injectables/UserService.html":{}}}],["applyvolunteer(payload",{"_index":2101,"title":{},"body":{"injectables/UserService.html":{}}}],["applyvolunteerdto",{"_index":74,"title":{"classes/ApplyVolunteerDto.html":{}},"body":{"classes/ApplyVolunteerDto.html":{},"coverage.html":{}}}],["applyvolunteerflow",{"_index":99,"title":{"injectables/ApplyVolunteerFlow.html":{}},"body":{"injectables/ApplyVolunteerFlow.html":{},"modules/CommonModule.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":56,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":932,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["argumentshost",{"_index":1132,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["arising",{"_index":2356,"title":{},"body":{"license.html":{}}}],["arr",{"_index":1736,"title":{},"body":{"injectables/Seed.html":{}}}],["arr.find((auth",{"_index":1737,"title":{},"body":{"injectables/Seed.html":{}}}],["arr.push(authority.create(item",{"_index":1739,"title":{},"body":{"injectables/Seed.html":{}}}],["array",{"_index":1060,"title":{},"body":{"classes/ExcelHelper.html":{},"miscellaneous/enumerations.html":{}}}],["aspects/enum",{"_index":145,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/Base.html":{},"classes/BaseFlow.html":{},"classes/Engine.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"interfaces/IFlow.html":{},"classes/Notice.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["associated",{"_index":2306,"title":{},"body":{"license.html":{}}}],["async",{"_index":104,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/BaseFlow.html":{},"classes/BaseService.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/Engine.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"classes/FlowTemplateController.html":{},"injectables/FlowTemplateService.html":{},"interfaces/IFlow.html":{},"classes/IO.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginController.html":{},"classes/MQ.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/SMS.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"classes/ServiceCategoryController.html":{},"injectables/ServiceCategoryService.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"injectables/WorkOrderFlow.html":{}}}],["auth.id",{"_index":1738,"title":{},"body":{"injectables/Seed.html":{}}}],["authguard",{"_index":326,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{}}}],["author",{"_index":712,"title":{},"body":{"classes/Content.html":{},"classes/CreateContentDto.html":{},"classes/Service.html":{},"classes/UpdateContentDto.html":{},"miscellaneous/variables.html":{}}}],["authorities",{"_index":239,"title":{},"body":{"classes/Authority.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"injectables/Seed.html":{},"injectables/UserService.html":{}}}],["authority",{"_index":198,"title":{"classes/Authority.html":{}},"body":{"classes/Authority.html":{},"injectables/AuthorityService.html":{},"modules/CommonModule.html":{},"classes/Role.html":{},"injectables/Seed.html":{},"coverage.html":{}}}],["authority.create(payload",{"_index":397,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["authority.entity",{"_index":1569,"title":{},"body":{"classes/Role.html":{}}}],["authority.roles",{"_index":1570,"title":{},"body":{"classes/Role.html":{}}}],["authority.service",{"_index":2114,"title":{},"body":{"injectables/UserService.html":{}}}],["authority.sheetsmap",{"_index":1734,"title":{},"body":{"injectables/Seed.html":{}}}],["authoritycontroller",{"_index":33,"title":{"classes/AuthorityController.html":{}},"body":{"modules/ApiModule.html":{},"classes/AuthorityController.html":{},"coverage.html":{}}}],["authorityrepository",{"_index":360,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["authorityservice",{"_index":296,"title":{"injectables/AuthorityService.html":{}},"body":{"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"modules/CommonModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["authors",{"_index":2346,"title":{},"body":{"license.html":{}}}],["avatar",{"_index":1703,"title":{},"body":{"injectables/Seed.html":{},"classes/User.html":{}}}],["avatarpath",{"_index":2007,"title":{},"body":{"classes/User.html":{}}}],["await",{"_index":171,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/BaseFlow.html":{},"classes/BaseService.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/Engine.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"classes/FlowTemplateController.html":{},"injectables/FlowTemplateService.html":{},"interfaces/IFlow.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginController.html":{},"classes/MQ.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/SMS.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/ServiceCategoryController.html":{},"injectables/ServiceCategoryService.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{}}}],["background",{"_index":698,"title":{},"body":{"injectables/CommonService.html":{}}}],["badrequestexception",{"_index":323,"title":{},"body":{"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/StorageController.html":{},"injectables/UserService.html":{}}}],["base",{"_index":200,"title":{"classes/Base.html":{}},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{},"coverage.html":{}}}],["base.flow",{"_index":150,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["base.getfullpath(item.image",{"_index":476,"title":{},"body":{"classes/Carousel.html":{}}}],["base.getfullpath(this.avatar",{"_index":2047,"title":{},"body":{"classes/User.html":{}}}],["base.getfullpath(this.ex_info.setting",{"_index":1857,"title":{},"body":{"classes/Setting.html":{}}}],["base.getfullpath(this.thumbnail",{"_index":783,"title":{},"body":{"classes/Content.html":{},"classes/Service.html":{}}}],["base.getfullpath(this.video",{"_index":784,"title":{},"body":{"classes/Content.html":{},"classes/Service.html":{}}}],["base.service",{"_index":383,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CarouselService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["base:16",{"_index":256,"title":{},"body":{"classes/Authority.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["base:21",{"_index":250,"title":{},"body":{"classes/Authority.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["base:26",{"_index":258,"title":{},"body":{"classes/Authority.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["base:28",{"_index":263,"title":{},"body":{"classes/Authority.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["base:7",{"_index":252,"title":{},"body":{"classes/Authority.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["baseflow",{"_index":102,"title":{"classes/BaseFlow.html":{}},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/BaseFlow.html":{},"coverage.html":{}}}],["baseflow:10",{"_index":139,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["baseflow:18",{"_index":131,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["baseflow:22",{"_index":132,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["basename",{"_index":957,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"injectables/Seed.html":{},"classes/StatusTask.html":{}}}],["basename(path",{"_index":1922,"title":{},"body":{"classes/StatusTask.html":{}}}],["basename.length",{"_index":960,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["basename.substr(0",{"_index":959,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["baseservice",{"_index":351,"title":{"classes/BaseService.html":{}},"body":{"injectables/AuthorityService.html":{},"classes/BaseService.html":{},"injectables/CarouselService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["baseservice:10",{"_index":380,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CarouselService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["baseservice:6",{"_index":378,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CarouselService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["bcrypt",{"_index":2036,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["bcrypt.compare(dto.oldpassword",{"_index":2148,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.compare(password",{"_index":2145,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.gensalt(10",{"_index":2051,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["bcrypt.hash(dto.password",{"_index":2149,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(this.password",{"_index":2053,"title":{},"body":{"classes/User.html":{}}}],["bcryptjs",{"_index":2037,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["beforeinsert",{"_index":719,"title":{},"body":{"classes/Content.html":{},"classes/Service.html":{},"classes/User.html":{}}}],["beforeremove",{"_index":772,"title":{},"body":{"classes/Content.html":{}}}],["beforeupdate",{"_index":720,"title":{},"body":{"classes/Content.html":{},"classes/Service.html":{},"classes/User.html":{}}}],["between",{"_index":843,"title":{},"body":{"injectables/ContentService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["bigint",{"_index":759,"title":{},"body":{"classes/Content.html":{},"classes/Service.html":{}}}],["bing",{"_index":1171,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["body",{"_index":324,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/LoginController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"classes/StatusTask.html":{},"classes/UserController.html":{}}}],["boolean",{"_index":1572,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":906,"title":{},"body":{"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"injectables/ImportService.html":{},"classes/Logger.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{}}}],["buffer",{"_index":1053,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["buffer.from(json.stringify",{"_index":1008,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["c",{"_index":2293,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["cache",{"_index":2398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancel",{"_index":106,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["cancel(flow",{"_index":122,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["canceled",{"_index":996,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{},"miscellaneous/enumerations.html":{}}}],["captcha",{"_index":680,"title":{},"body":{"injectables/CommonService.html":{}}}],["carousel",{"_index":463,"title":{"classes/Carousel.html":{}},"body":{"classes/Carousel.html":{},"injectables/CarouselService.html":{},"modules/CommonModule.html":{},"coverage.html":{}}}],["carousel.create(payload",{"_index":536,"title":{},"body":{"injectables/CarouselService.html":{}}}],["carouselcontroller",{"_index":42,"title":{"classes/CarouselController.html":{}},"body":{"modules/ApiModule.html":{},"classes/CarouselController.html":{},"coverage.html":{}}}],["carouselrepository",{"_index":508,"title":{},"body":{"injectables/CarouselService.html":{}}}],["carousels",{"_index":465,"title":{},"body":{"classes/Carousel.html":{}}}],["carouselservice",{"_index":480,"title":{"injectables/CarouselService.html":{}},"body":{"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"modules/CommonModule.html":{},"coverage.html":{},"overview.html":{}}}],["carouseservice",{"_index":482,"title":{},"body":{"classes/CarouselController.html":{}}}],["case",{"_index":424,"title":{},"body":{"classes/Base.html":{},"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"injectables/ImportService.html":{},"classes/Logger.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{}}}],["catch",{"_index":1029,"title":{},"body":{"classes/Engine.html":{},"classes/ExceptionsFilter.html":{},"interfaces/IFlow.html":{},"classes/SMS.html":{},"classes/StorageController.html":{}}}],["catch(exception",{"_index":1129,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["cate.id",{"_index":1723,"title":{},"body":{"injectables/Seed.html":{}}}],["categories",{"_index":925,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["category",{"_index":538,"title":{"classes/Category.html":{}},"body":{"classes/Category.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"injectables/ImportService.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"coverage.html":{}}}],["category.contents",{"_index":781,"title":{},"body":{"classes/Content.html":{}}}],["category.controller",{"_index":39,"title":{},"body":{"modules/ApiModule.html":{}}}],["category.controller.ts",{"_index":1788,"title":{},"body":{"classes/ServiceCategoryController.html":{},"coverage.html":{}}}],["category.controller.ts:24",{"_index":1789,"title":{},"body":{"classes/ServiceCategoryController.html":{}}}],["category.controller.ts:28",{"_index":1791,"title":{},"body":{"classes/ServiceCategoryController.html":{}}}],["category.controller.ts:35",{"_index":1792,"title":{},"body":{"classes/ServiceCategoryController.html":{}}}],["category.controller.ts:40",{"_index":1790,"title":{},"body":{"classes/ServiceCategoryController.html":{}}}],["category.controller.ts:45",{"_index":1794,"title":{},"body":{"classes/ServiceCategoryController.html":{}}}],["category.controller.ts:50",{"_index":1793,"title":{},"body":{"classes/ServiceCategoryController.html":{}}}],["category.create(payload",{"_index":592,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.entity",{"_index":631,"title":{},"body":{"modules/CommonModule.html":{},"classes/Content.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{}}}],["category.entity.ts",{"_index":1771,"title":{},"body":{"classes/ServiceCategory.html":{},"coverage.html":{}}}],["category.entity.ts:11",{"_index":1775,"title":{},"body":{"classes/ServiceCategory.html":{}}}],["category.entity.ts:14",{"_index":1779,"title":{},"body":{"classes/ServiceCategory.html":{}}}],["category.entity.ts:17",{"_index":1774,"title":{},"body":{"classes/ServiceCategory.html":{}}}],["category.entity.ts:20",{"_index":1777,"title":{},"body":{"classes/ServiceCategory.html":{}}}],["category.entity.ts:22",{"_index":1773,"title":{},"body":{"classes/ServiceCategory.html":{}}}],["category.entity.ts:24",{"_index":1776,"title":{},"body":{"classes/ServiceCategory.html":{}}}],["category.entity.ts:27",{"_index":1781,"title":{},"body":{"classes/ServiceCategory.html":{}}}],["category.entity.ts:32",{"_index":1782,"title":{},"body":{"classes/ServiceCategory.html":{}}}],["category.entity.ts:37",{"_index":1783,"title":{},"body":{"classes/ServiceCategory.html":{}}}],["category.entity.ts:41",{"_index":1778,"title":{},"body":{"classes/ServiceCategory.html":{}}}],["category.entity.ts:49",{"_index":1780,"title":{},"body":{"classes/ServiceCategory.html":{}}}],["category.service",{"_index":649,"title":{},"body":{"modules/CommonModule.html":{},"injectables/ImportService.html":{},"classes/ServiceCategoryController.html":{}}}],["category.service.ts",{"_index":1799,"title":{},"body":{"injectables/ServiceCategoryService.html":{},"coverage.html":{}}}],["category.service.ts:17",{"_index":1803,"title":{},"body":{"injectables/ServiceCategoryService.html":{}}}],["category.service.ts:21",{"_index":1801,"title":{},"body":{"injectables/ServiceCategoryService.html":{}}}],["category.service.ts:25",{"_index":1802,"title":{},"body":{"injectables/ServiceCategoryService.html":{}}}],["category.service.ts:29",{"_index":1804,"title":{},"body":{"injectables/ServiceCategoryService.html":{}}}],["category.service.ts:9",{"_index":1800,"title":{},"body":{"injectables/ServiceCategoryService.html":{}}}],["category.services",{"_index":1768,"title":{},"body":{"classes/Service.html":{}}}],["category.sheetsmap",{"_index":1718,"title":{},"body":{"injectables/Seed.html":{}}}],["categoryarr",{"_index":1720,"title":{},"body":{"injectables/Seed.html":{}}}],["categoryarr.find((cate",{"_index":1722,"title":{},"body":{"injectables/Seed.html":{}}}],["categoryarr.push(category.create(item",{"_index":1724,"title":{},"body":{"injectables/Seed.html":{}}}],["categorycontroller",{"_index":27,"title":{"classes/CategoryController.html":{}},"body":{"modules/ApiModule.html":{},"classes/CategoryController.html":{},"coverage.html":{}}}],["categoryrepository",{"_index":580,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{}}}],["categorys",{"_index":548,"title":{},"body":{"classes/Category.html":{},"injectables/Seed.html":{},"classes/ServiceCategory.html":{}}}],["categorys.foreach((item",{"_index":1721,"title":{},"body":{"injectables/Seed.html":{}}}],["categorys.xlsx",{"_index":1727,"title":{},"body":{"injectables/Seed.html":{}}}],["categoryservice",{"_index":562,"title":{"injectables/CategoryService.html":{}},"body":{"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/ImportService.html":{},"classes/ServiceCategoryController.html":{},"coverage.html":{},"overview.html":{}}}],["categorysresult",{"_index":1716,"title":{},"body":{"injectables/Seed.html":{}}}],["categorysresult['categorys",{"_index":1719,"title":{},"body":{"injectables/Seed.html":{}}}],["cc9966",{"_index":699,"title":{},"body":{"injectables/CommonService.html":{}}}],["cell.value",{"_index":1096,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["cellkey",{"_index":1076,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["cellnumber",{"_index":1087,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["cellobj[obj[0",{"_index":1094,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["cellobj[obj[0]][obj[1",{"_index":1095,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["cellobj[titlearr[cellnumber",{"_index":1097,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["cellsmap",{"_index":242,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/ExcelHelper.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cellsmap[cell.value.tostring",{"_index":1088,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["chalk",{"_index":867,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.cyan(leveloutput",{"_index":908,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.green(leveloutput",{"_index":905,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.green(typeoutput)}${dateoutput",{"_index":916,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.grey(leveloutput",{"_index":915,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.hex('#dd4c35')(leveloutput",{"_index":914,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.red(leveloutput",{"_index":912,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.yellow",{"_index":917,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.yellow(leveloutput",{"_index":910,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["change",{"_index":1927,"title":{},"body":{"classes/StatusTask.html":{}}}],["changepassword",{"_index":2058,"title":{},"body":{"classes/UserController.html":{},"injectables/UserService.html":{}}}],["changepassword(@currentuser",{"_index":2091,"title":{},"body":{"classes/UserController.html":{}}}],["changepassword(id",{"_index":2103,"title":{},"body":{"injectables/UserService.html":{}}}],["changepassword(user",{"_index":2064,"title":{},"body":{"classes/UserController.html":{}}}],["channel",{"_index":1451,"title":{},"body":{"classes/MQ.html":{}}}],["characters",{"_index":2406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["charge",{"_index":2301,"title":{},"body":{"license.html":{}}}],["charset=utf",{"_index":1155,"title":{},"body":{"classes/ExceptionsFilter.html":{},"classes/SMS.html":{}}}],["checksvgcode",{"_index":666,"title":{},"body":{"injectables/CommonService.html":{}}}],["checksvgcode(svg_hash",{"_index":671,"title":{},"body":{"injectables/CommonService.html":{}}}],["children",{"_index":201,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Organization.html":{},"classes/ServiceCategory.html":{}}}],["chokidar",{"_index":1892,"title":{},"body":{"classes/StatusTask.html":{}}}],["chokidar.watch(uploaddirpath",{"_index":1914,"title":{},"body":{"classes/StatusTask.html":{}}}],["claim",{"_index":2349,"title":{},"body":{"license.html":{}}}],["class",{"_index":51,"title":{"classes/ApplyVolunteerDto.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"classes/Base.html":{},"classes/BaseFlow.html":{},"classes/BaseService.html":{},"classes/Carousel.html":{},"classes/CarouselController.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/Engine.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"classes/Flow.html":{},"classes/FlowController.html":{},"classes/FlowTemplate.html":{},"classes/FlowTemplateController.html":{},"classes/IO.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/MQ.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"classes/PasswordDto.html":{},"classes/Qiniu.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"classes/SMS.html":{},"classes/SearchController.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"classes/UserController.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/ApplyVolunteerDto.html":{},"injectables/ApplyVolunteerFlow.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseFlow.html":{},"classes/BaseService.html":{},"classes/Carousel.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/Engine.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"classes/Flow.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"classes/FlowTemplateController.html":{},"injectables/FlowTemplateService.html":{},"interfaces/IFlow.html":{},"classes/IO.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/MQ.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Qiniu.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/SMS.html":{},"modules/SSRModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/ServiceCategoryController.html":{},"injectables/ServiceCategoryService.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"injectables/WorkOrderFlow.html":{},"coverage.html":{}}}],["classdecorator",{"_index":2245,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classserializerinterceptor",{"_index":328,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"classes/UserController.html":{}}}],["cli",{"_index":2279,"title":{},"body":{"index.html":{}}}],["client",{"_index":1452,"title":{},"body":{"classes/MQ.html":{}}}],["clone",{"_index":2269,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":595,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":596,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":597,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cn",{"_index":87,"title":{},"body":{"classes/ApplyVolunteerDto.html":{},"classes/LoginDto.html":{}}}],["code(httpstatus.internal_server_error",{"_index":1175,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["code(status",{"_index":1152,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["color",{"_index":697,"title":{},"body":{"injectables/CommonService.html":{}}}],["column",{"_index":276,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["column({comment",{"_index":221,"title":{},"body":{"classes/Authority.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["column({type",{"_index":224,"title":{},"body":{"classes/Authority.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["column({unique",{"_index":1267,"title":{},"body":{"classes/FlowTemplate.html":{}}}],["columnnumber",{"_index":854,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["columns",{"_index":1103,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["comment",{"_index":228,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["common/aspects/decorator",{"_index":330,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/LoginController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{}}}],["common/aspects/enum",{"_index":1683,"title":{},"body":{"injectables/Seed.html":{},"classes/StorageController.html":{}}}],["common/aspects/middlewares",{"_index":16,"title":{},"body":{"modules/ApiModule.html":{}}}],["common/common.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["common/dtos/login.dto",{"_index":1429,"title":{},"body":{"classes/LoginController.html":{}}}],["common/dtos/password.dto",{"_index":2079,"title":{},"body":{"classes/UserController.html":{}}}],["common/entities/authority.entity",{"_index":1681,"title":{},"body":{"injectables/Seed.html":{}}}],["common/entities/category.entity",{"_index":1675,"title":{},"body":{"injectables/Seed.html":{}}}],["common/entities/content.entity",{"_index":1682,"title":{},"body":{"injectables/Seed.html":{}}}],["common/entities/organization.entity",{"_index":1680,"title":{},"body":{"injectables/Seed.html":{}}}],["common/entities/role.entity",{"_index":281,"title":{},"body":{"classes/Authority.html":{},"injectables/Seed.html":{}}}],["common/entities/service",{"_index":1684,"title":{},"body":{"injectables/Seed.html":{}}}],["common/entities/setting.entity",{"_index":1676,"title":{},"body":{"injectables/Seed.html":{}}}],["common/entities/user.entity",{"_index":1674,"title":{},"body":{"injectables/Seed.html":{}}}],["common/lib/es",{"_index":1679,"title":{},"body":{"injectables/Seed.html":{}}}],["common/lib/excel",{"_index":1677,"title":{},"body":{"injectables/Seed.html":{}}}],["common/lib/logger",{"_index":1678,"title":{},"body":{"injectables/Seed.html":{},"classes/StorageController.html":{}}}],["common/lib/qiniu",{"_index":1962,"title":{},"body":{"classes/StorageController.html":{}}}],["common/services/authority.service",{"_index":331,"title":{},"body":{"classes/AuthorityController.html":{}}}],["common/services/carousel.service",{"_index":494,"title":{},"body":{"classes/CarouselController.html":{}}}],["common/services/category.service",{"_index":569,"title":{},"body":{"classes/CategoryController.html":{}}}],["common/services/common.service",{"_index":1377,"title":{},"body":{"controllers/IndexController.html":{}}}],["common/services/content.service",{"_index":819,"title":{},"body":{"classes/ContentController.html":{}}}],["common/services/flow",{"_index":1283,"title":{},"body":{"classes/FlowTemplateController.html":{}}}],["common/services/flow.service",{"_index":1211,"title":{},"body":{"classes/FlowController.html":{}}}],["common/services/import.service",{"_index":1961,"title":{},"body":{"classes/StorageController.html":{}}}],["common/services/organization.service",{"_index":1506,"title":{},"body":{"classes/OrganizationController.html":{}}}],["common/services/role.service",{"_index":1584,"title":{},"body":{"classes/RoleController.html":{}}}],["common/services/search.service",{"_index":1642,"title":{},"body":{"classes/SearchController.html":{}}}],["common/services/service",{"_index":1795,"title":{},"body":{"classes/ServiceCategoryController.html":{}}}],["common/services/service.service",{"_index":1816,"title":{},"body":{"classes/ServiceController.html":{}}}],["common/services/setting.service",{"_index":1864,"title":{},"body":{"classes/SettingController.html":{}}}],["common/services/user.service",{"_index":1430,"title":{},"body":{"classes/LoginController.html":{},"classes/UserController.html":{}}}],["commonmodule",{"_index":66,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["commonservice",{"_index":598,"title":{"injectables/CommonService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{},"controllers/IndexController.html":{},"coverage.html":{},"overview.html":{}}}],["complete",{"_index":107,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["complete(flow",{"_index":124,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["conditions",{"_index":2328,"title":{},"body":{"license.html":{}}}],["config",{"_index":417,"title":{},"body":{"classes/Base.html":{},"modules/CommonModule.html":{},"injectables/JwtStrategy.html":{},"classes/MQ.html":{},"classes/Qiniu.html":{},"classes/StorageController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.es",{"_index":2450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.jwt.secretorprivatekey",{"_index":1397,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.mq.options",{"_index":1467,"title":{},"body":{"classes/MQ.html":{}}}],["config.qiniu.domain}/${info.path",{"_index":430,"title":{},"body":{"classes/Base.html":{}}}],["config.qiniu.secretkey",{"_index":1548,"title":{},"body":{"classes/Qiniu.html":{}}}],["config.redis",{"_index":2452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.serverurl}/${config.static.root}${info.path",{"_index":427,"title":{},"body":{"classes/Base.html":{}}}],["config.static.uploadpath}/${path",{"_index":1986,"title":{},"body":{"classes/StorageController.html":{}}}],["configure",{"_index":6,"title":{},"body":{"modules/ApiModule.html":{}}}],["configure(consumer",{"_index":7,"title":{},"body":{"modules/ApiModule.html":{}}}],["connected",{"_index":1470,"title":{},"body":{"classes/MQ.html":{}}}],["connecting",{"_index":1464,"title":{},"body":{"classes/MQ.html":{}}}],["connection",{"_index":1341,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{},"license.html":{}}}],["console",{"_index":921,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["console.error(`${worksheet.name",{"_index":1068,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["const",{"_index":167,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/AuthorityService.html":{},"classes/BaseFlow.html":{},"classes/Carousel.html":{},"injectables/CarouselService.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/Engine.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"classes/Flow.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"interfaces/IFlow.html":{},"classes/IO.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/MQ.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":160,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/AuthorityService.html":{},"classes/BaseFlow.html":{},"injectables/CarouselService.html":{},"injectables/CommonService.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"classes/IO.html":{},"injectables/ImportService.html":{},"classes/Logger.html":{},"injectables/OrganizationService.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{},"injectables/WorkOrderFlow.html":{}}}],["constructor(@injectconnection",{"_index":1685,"title":{},"body":{"injectables/Seed.html":{}}}],["constructor(@injectrepository(category",{"_index":587,"title":{},"body":{"injectables/CategoryService.html":{}}}],["constructor(@injectrepository(role",{"_index":1600,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(authorityrepository",{"_index":357,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["constructor(authorityservice",{"_index":295,"title":{},"body":{"classes/AuthorityController.html":{}}}],["constructor(carouselrepository",{"_index":506,"title":{},"body":{"injectables/CarouselService.html":{}}}],["constructor(carouseservice",{"_index":479,"title":{},"body":{"classes/CarouselController.html":{}}}],["constructor(categoryrepository",{"_index":578,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ServiceCategoryService.html":{}}}],["constructor(categoryservice",{"_index":561,"title":{},"body":{"classes/CategoryController.html":{},"classes/ServiceCategoryController.html":{}}}],["constructor(connection",{"_index":1340,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["constructor(contentrepository",{"_index":827,"title":{},"body":{"injectables/ContentService.html":{}}}],["constructor(contentservice",{"_index":811,"title":{},"body":{"classes/ContentController.html":{}}}],["constructor(context",{"_index":857,"title":{},"body":{"classes/ContextTrace.html":{}}}],["constructor(flowrepository",{"_index":1223,"title":{},"body":{"injectables/FlowService.html":{}}}],["constructor(flowservice",{"_index":1200,"title":{},"body":{"classes/FlowController.html":{}}}],["constructor(flowtemplaterepository",{"_index":112,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/FlowTemplateService.html":{}}}],["constructor(flowtemplateservice",{"_index":1275,"title":{},"body":{"classes/FlowTemplateController.html":{}}}],["constructor(importservice",{"_index":1946,"title":{},"body":{"classes/StorageController.html":{}}}],["constructor(jwtservice",{"_index":2097,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(name",{"_index":432,"title":{},"body":{"classes/BaseFlow.html":{}}}],["constructor(organizationrepository",{"_index":1515,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["constructor(organizationservice",{"_index":1498,"title":{},"body":{"classes/OrganizationController.html":{}}}],["constructor(private",{"_index":336,"title":{},"body":{"classes/AuthorityController.html":{},"classes/BaseService.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{}}}],["constructor(repository",{"_index":456,"title":{},"body":{"classes/BaseService.html":{}}}],["constructor(rolerepository",{"_index":1593,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(roleservice",{"_index":1576,"title":{},"body":{"classes/RoleController.html":{}}}],["constructor(searchservice",{"_index":1638,"title":{},"body":{"classes/SearchController.html":{}}}],["constructor(servicerepository",{"_index":1824,"title":{},"body":{"injectables/ServiceService.html":{}}}],["constructor(serviceservice",{"_index":1808,"title":{},"body":{"classes/ServiceController.html":{}}}],["constructor(settingrepository",{"_index":1870,"title":{},"body":{"injectables/SettingService.html":{}}}],["constructor(settingservice",{"_index":669,"title":{},"body":{"injectables/CommonService.html":{},"classes/SettingController.html":{}}}],["constructor(userservice",{"_index":1384,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/LoginController.html":{},"classes/UserController.html":{}}}],["consume",{"_index":976,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["consumer",{"_index":10,"title":{},"body":{"modules/ApiModule.html":{}}}],["consumer.apply(logger).forroutes",{"_index":53,"title":{},"body":{"modules/ApiModule.html":{}}}],["content",{"_index":542,"title":{"classes/Content.html":{}},"body":{"classes/Category.html":{},"modules/CommonModule.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"injectables/ImportService.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"coverage.html":{}}}],["content.category",{"_index":558,"title":{},"body":{"classes/Category.html":{}}}],["content.create(payload",{"_index":849,"title":{},"body":{"injectables/ContentService.html":{}}}],["content.create(res[key",{"_index":1359,"title":{},"body":{"injectables/ImportService.html":{}}}],["content.entity",{"_index":556,"title":{},"body":{"classes/Category.html":{}}}],["content.esindex.body.type",{"_index":797,"title":{},"body":{"classes/Content.html":{},"injectables/SearchService.html":{}}}],["content.esindex.index",{"_index":796,"title":{},"body":{"classes/Content.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{}}}],["content.sheetsmap",{"_index":1355,"title":{},"body":{"injectables/ImportService.html":{}}}],["content.sheetsmap[payload.category",{"_index":2133,"title":{},"body":{"injectables/UserService.html":{}}}],["contentcontroller",{"_index":23,"title":{"classes/ContentController.html":{}},"body":{"modules/ApiModule.html":{},"classes/ContentController.html":{},"coverage.html":{}}}],["contentrepository",{"_index":829,"title":{},"body":{"injectables/ContentService.html":{}}}],["contents",{"_index":540,"title":{},"body":{"classes/Category.html":{},"classes/Content.html":{},"injectables/ImportService.html":{}}}],["contentservice",{"_index":599,"title":{"injectables/ContentService.html":{}},"body":{"modules/CommonModule.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"coverage.html":{},"overview.html":{}}}],["context",{"_index":855,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["contexttrace",{"_index":851,"title":{"classes/ContextTrace.html":{}},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"coverage.html":{}}}],["contexttrace(context",{"_index":962,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["contract",{"_index":2353,"title":{},"body":{"license.html":{}}}],["controller",{"_index":1372,"title":{"controllers/IndexController.html":{}},"body":{"controllers/IndexController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":49,"title":{},"body":{"modules/ApiModule.html":{},"controllers/IndexController.html":{},"modules/SSRModule.html":{}}}],["controllers/authority.controller",{"_index":34,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/carousel.controller",{"_index":43,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/category.controller",{"_index":28,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/content.controller",{"_index":24,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/flow",{"_index":45,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/flow.controller",{"_index":48,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/index.controller",{"_index":1636,"title":{},"body":{"modules/SSRModule.html":{}}}],["controllers/login.controller",{"_index":18,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/organization.controller",{"_index":30,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/role.controller",{"_index":32,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/search.controller",{"_index":36,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/service",{"_index":38,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/service.controller",{"_index":41,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/setting.controller",{"_index":26,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/storage.controller",{"_index":22,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/user.controller",{"_index":20,"title":{},"body":{"modules/ApiModule.html":{}}}],["cookie",{"_index":2408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copies",{"_index":2322,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2304,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1843,"title":{},"body":{"classes/Setting.html":{},"license.html":{}}}],["coverage",{"_index":2176,"title":{"coverage.html":{}},"body":{}}],["cpu",{"_index":2424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create",{"_index":213,"title":{},"body":{"classes/Authority.html":{},"classes/AuthorityController.html":{},"classes/Carousel.html":{},"classes/CarouselController.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"classes/Flow.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"classes/FlowTemplateController.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/Setting.html":{},"classes/User.html":{},"classes/UserController.html":{}}}],["create(@body",{"_index":343,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/UserController.html":{}}}],["create(dto",{"_index":298,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/UserController.html":{}}}],["create(target",{"_index":259,"title":{},"body":{"classes/Authority.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["create(user",{"_index":1226,"title":{},"body":{"injectables/FlowService.html":{}}}],["create_at",{"_index":210,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["createcontentdto",{"_index":963,"title":{"classes/CreateContentDto.html":{}},"body":{"classes/CreateContentDto.html":{},"classes/UpdateContentDto.html":{},"coverage.html":{}}}],["createdatecolumn",{"_index":415,"title":{},"body":{"classes/Base.html":{}}}],["createdatecolumn({comment",{"_index":249,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["createparamdecorator(async",{"_index":2445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createparentpath",{"_index":2385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder('t",{"_index":390,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/FlowService.html":{}}}],["createuploadtoken",{"_index":1546,"title":{},"body":{"classes/Qiniu.html":{}}}],["cron",{"_index":1893,"title":{},"body":{"classes/StatusTask.html":{}}}],["cron('2",{"_index":1904,"title":{},"body":{"classes/StatusTask.html":{}}}],["cronjob",{"_index":1905,"title":{},"body":{"classes/StatusTask.html":{}}}],["crypto",{"_index":677,"title":{},"body":{"injectables/CommonService.html":{}}}],["crypto.createhash('md5').update(data).digest('hex",{"_index":700,"title":{},"body":{"injectables/CommonService.html":{}}}],["ctime",{"_index":2429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx",{"_index":1138,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["ctx.getrequest",{"_index":1143,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":1141,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["current",{"_index":1017,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{},"classes/UserController.html":{}}}],["current(@currentuser",{"_index":2086,"title":{},"body":{"classes/UserController.html":{}}}],["current(user",{"_index":2068,"title":{},"body":{"classes/UserController.html":{}}}],["currentuser",{"_index":2078,"title":{},"body":{"classes/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":2350,"title":{},"body":{"license.html":{}}}],["data",{"_index":689,"title":{},"body":{"injectables/CommonService.html":{},"classes/StorageController.html":{}}}],["data')@apiimplicitfile({name",{"_index":1950,"title":{},"body":{"classes/StorageController.html":{}}}],["database",{"_index":2413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource",{"_index":1047,"title":{},"body":{"classes/ExcelHelper.html":{},"injectables/UserService.html":{}}}],["datasource.map((item",{"_index":1109,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["dateoutput",{"_index":897,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["day",{"_index":1901,"title":{},"body":{"classes/StatusTask.html":{}}}],["db:create",{"_index":2276,"title":{},"body":{"index.html":{}}}],["db:init",{"_index":2277,"title":{},"body":{"index.html":{}}}],["dd",{"_index":789,"title":{},"body":{"classes/Content.html":{},"classes/ContextTrace.html":{},"classes/ExceptionsFilter.html":{},"classes/Logger.html":{},"classes/Service.html":{}}}],["dd')}/${uuid.v4",{"_index":1979,"title":{},"body":{"classes/StorageController.html":{}}}],["deal",{"_index":2308,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2358,"title":{},"body":{"license.html":{}}}],["debug",{"_index":871,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["debug(...args",{"_index":933,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["declarations",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"overview.html":{}}}],["deep",{"_index":1409,"title":{},"body":{"classes/Logger.html":{}}}],["default",{"_index":222,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/ContextTrace.html":{},"classes/Engine.html":{},"classes/ExcelHelper.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"interfaces/IFlow.html":{},"classes/IO.html":{},"injectables/ImportService.html":{},"classes/Logger.html":{},"classes/MQ.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"injectables/SettingService.html":{},"classes/StorageController.html":{},"classes/User.html":{}}}],["defaultstrategy",{"_index":660,"title":{},"body":{"modules/CommonModule.html":{}}}],["delete",{"_index":313,"title":{},"body":{"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/UserController.html":{}}}],["delete(ids",{"_index":361,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["deleted",{"_index":2230,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":57,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"overview.html":{}}}],["desc",{"_index":202,"title":{},"body":{"classes/Authority.html":{},"injectables/CarouselService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"classes/Organization.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"injectables/ServiceService.html":{},"classes/Setting.html":{},"injectables/UserService.html":{}}}],["description",{"_index":1472,"title":{},"body":{"classes/Notice.html":{},"classes/Setting.html":{}}}],["design",{"_index":2257,"title":{},"body":{"index.html":{}}}],["detail",{"_index":478,"title":{},"body":{"classes/CarouselController.html":{}}}],["detail(@param('token",{"_index":498,"title":{},"body":{"classes/CarouselController.html":{}}}],["detail(token",{"_index":484,"title":{},"body":{"classes/CarouselController.html":{}}}],["dev",{"_index":2209,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dir",{"_index":1926,"title":{},"body":{"classes/StatusTask.html":{}}}],["dirname",{"_index":1711,"title":{},"body":{"injectables/Seed.html":{},"classes/StatusTask.html":{}}}],["dirname(path",{"_index":1923,"title":{},"body":{"classes/StatusTask.html":{}}}],["dispatch",{"_index":977,"title":{},"body":{"classes/Engine.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"interfaces/IFlow.html":{}}}],["dispatch(@body",{"_index":1216,"title":{},"body":{"classes/FlowController.html":{}}}],["dispatch(id",{"_index":981,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["dispatch(payload",{"_index":1203,"title":{},"body":{"classes/FlowController.html":{},"injectables/FlowService.html":{}}}],["distribute",{"_index":2318,"title":{},"body":{"license.html":{}}}],["doc",{"_index":805,"title":{},"body":{"classes/Content.html":{},"index.html":{}}}],["doc['category",{"_index":807,"title":{},"body":{"classes/Content.html":{}}}],["documentation",{"_index":2307,"title":{},"body":{"license.html":{}}}],["domain",{"_index":2435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dropschema",{"_index":2416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto",{"_index":301,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/LoginController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"classes/UserController.html":{},"injectables/UserService.html":{}}}],["dto.password",{"_index":1436,"title":{},"body":{"classes/LoginController.html":{}}}],["elapsed",{"_index":2430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elasticsearch",{"_index":778,"title":{},"body":{"classes/Content.html":{}}}],["elasticsearch.client",{"_index":2449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":1841,"title":{},"body":{"classes/Setting.html":{}}}],["engine",{"_index":438,"title":{"classes/Engine.html":{}},"body":{"classes/BaseFlow.html":{},"classes/Engine.html":{},"injectables/FlowService.html":{},"interfaces/IFlow.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["engine.flowtemplates[flow.template.template",{"_index":1020,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["engine.flowtemplates[template",{"_index":999,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["engine.register(flowtemplateenum.apply_vr",{"_index":440,"title":{},"body":{"classes/BaseFlow.html":{}}}],["entities",{"_index":2419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities/authority.entity",{"_index":384,"title":{},"body":{"injectables/AuthorityService.html":{},"modules/CommonModule.html":{}}}],["entities/carousel.entity",{"_index":515,"title":{},"body":{"injectables/CarouselService.html":{},"modules/CommonModule.html":{}}}],["entities/category.entity",{"_index":586,"title":{},"body":{"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{}}}],["entities/content.entity",{"_index":624,"title":{},"body":{"modules/CommonModule.html":{},"injectables/ContentService.html":{},"injectables/ImportService.html":{},"injectables/SearchService.html":{}}}],["entities/flow",{"_index":148,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/BaseFlow.html":{},"modules/CommonModule.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{}}}],["entities/flow.entity",{"_index":146,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"modules/CommonModule.html":{},"classes/Engine.html":{},"injectables/FlowService.html":{},"interfaces/IFlow.html":{}}}],["entities/notice.entity",{"_index":657,"title":{},"body":{"modules/CommonModule.html":{}}}],["entities/organization.entity",{"_index":628,"title":{},"body":{"modules/CommonModule.html":{},"injectables/ImportService.html":{},"injectables/OrganizationService.html":{}}}],["entities/role.entity",{"_index":158,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"modules/CommonModule.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["entities/service",{"_index":630,"title":{},"body":{"modules/CommonModule.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{}}}],["entities/service.entity",{"_index":633,"title":{},"body":{"modules/CommonModule.html":{},"injectables/ServiceService.html":{}}}],["entities/setting.entity",{"_index":626,"title":{},"body":{"modules/CommonModule.html":{},"injectables/SettingService.html":{}}}],["entities/user.entity",{"_index":143,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"modules/CommonModule.html":{},"injectables/FlowService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":275,"title":{},"body":{"classes/Authority.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["enum",{"_index":255,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/ContextTrace.html":{},"classes/Engine.html":{},"classes/ExcelHelper.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"interfaces/IFlow.html":{},"classes/Logger.html":{},"classes/MQ.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/SMS.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["enumerations",{"_index":2215,"title":{"miscellaneous/enumerations.html":{}},"body":{}}],["err",{"_index":1030,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{},"classes/SMS.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{}}}],["error",{"_index":873,"title":{},"body":{"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"classes/IO.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["error(...args",{"_index":941,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["error(`${worksheet.name",{"_index":1073,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["es",{"_index":773,"title":{},"body":{"classes/Content.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/StatusTask.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["es.delete",{"_index":809,"title":{},"body":{"classes/Content.html":{},"classes/StatusTask.html":{}}}],["es.index",{"_index":795,"title":{},"body":{"classes/Content.html":{},"classes/StatusTask.html":{}}}],["es.indices.create",{"_index":1710,"title":{},"body":{"injectables/Seed.html":{}}}],["es.indices.create(content.esindex",{"_index":1715,"title":{},"body":{"injectables/Seed.html":{}}}],["es.indices.delete",{"_index":1709,"title":{},"body":{"injectables/Seed.html":{}}}],["es.indices.exists",{"_index":1707,"title":{},"body":{"injectables/Seed.html":{}}}],["es.search",{"_index":1654,"title":{},"body":{"injectables/SearchService.html":{}}}],["es.update",{"_index":808,"title":{},"body":{"classes/Content.html":{},"classes/StatusTask.html":{}}}],["esb",{"_index":1649,"title":{},"body":{"injectables/SearchService.html":{}}}],["esb.matchquery(payload.field",{"_index":1652,"title":{},"body":{"injectables/SearchService.html":{}}}],["esb.requestbodysearch",{"_index":1650,"title":{},"body":{"injectables/SearchService.html":{}}}],["esindex",{"_index":713,"title":{},"body":{"classes/Content.html":{}}}],["event",{"_index":1917,"title":{},"body":{"classes/StatusTask.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["ex",{"_index":702,"title":{},"body":{"injectables/CommonService.html":{}}}],["ex_info",{"_index":203,"title":{},"body":{"classes/Authority.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["ex_info.address",{"_index":744,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.company",{"_index":740,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.content",{"_index":750,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.fax",{"_index":742,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.nickname",{"_index":748,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.phone",{"_index":741,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.postcode",{"_index":745,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.question",{"_index":746,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.reply",{"_index":747,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.sale",{"_index":743,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.title",{"_index":749,"title":{},"body":{"classes/Content.html":{}}}],["excel",{"_index":1057,"title":{},"body":{"classes/ExcelHelper.html":{},"index.html":{}}}],["excel.workbook",{"_index":1061,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["excelhandletype",{"_index":279,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/ExcelHelper.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"miscellaneous/enumerations.html":{}}}],["excelhandletype.array",{"_index":241,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/ExcelHelper.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"miscellaneous/variables.html":{}}}],["excelhandletype.kv",{"_index":1070,"title":{},"body":{"classes/ExcelHelper.html":{},"classes/Setting.html":{}}}],["excelhelper",{"_index":1039,"title":{"classes/ExcelHelper.html":{}},"body":{"classes/ExcelHelper.html":{},"injectables/ImportService.html":{},"injectables/Seed.html":{},"coverage.html":{}}}],["excelhelper.export(datasource",{"_index":2132,"title":{},"body":{"injectables/UserService.html":{}}}],["excelhelper.load(workbook",{"_index":1063,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["excelhelper.loadfrombuffer(file.data",{"_index":1354,"title":{},"body":{"injectables/ImportService.html":{}}}],["excelhelper.loadfromfile",{"_index":1689,"title":{},"body":{"injectables/Seed.html":{}}}],["exceljs",{"_index":1058,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["exception",{"_index":1134,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":1147,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":1128,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exceptionsfilter",{"_index":1126,"title":{"classes/ExceptionsFilter.html":{}},"body":{"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["exclude",{"_index":419,"title":{},"body":{"classes/Base.html":{},"classes/User.html":{}}}],["exclude()@column({type",{"_index":254,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["exclude({toplainonly",{"_index":2019,"title":{},"body":{"classes/User.html":{}}}],["executabletasks",{"_index":994,"title":{},"body":{"classes/Engine.html":{},"classes/Flow.html":{},"interfaces/IFlow.html":{}}}],["expires",{"_index":2439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiresin",{"_index":2396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":50,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/ApplyVolunteerDto.html":{},"injectables/ApplyVolunteerFlow.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseFlow.html":{},"classes/BaseService.html":{},"classes/Carousel.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/Engine.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"classes/Flow.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"classes/FlowTemplateController.html":{},"injectables/FlowTemplateService.html":{},"interfaces/IFlow.html":{},"classes/IO.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/MQ.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Qiniu.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/SMS.html":{},"modules/SSRModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/ServiceCategoryController.html":{},"injectables/ServiceCategoryService.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"injectables/WorkOrderFlow.html":{}}}],["export(@query",{"_index":501,"title":{},"body":{"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/RoleController.html":{},"classes/ServiceController.html":{}}}],["export(datasource",{"_index":1044,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["export(payload",{"_index":487,"title":{},"body":{"classes/CarouselController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/RoleController.html":{},"classes/ServiceController.html":{}}}],["exports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"overview.html":{}}}],["expose",{"_index":273,"title":{},"body":{"classes/Authority.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["express",{"_index":2337,"title":{},"body":{"license.html":{}}}],["extends",{"_index":159,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/Authority.html":{},"injectables/AuthorityService.html":{},"classes/Carousel.html":{},"injectables/CarouselService.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/Flow.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"injectables/FlowTemplateService.html":{},"injectables/JwtStrategy.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"injectables/OrganizationService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"classes/Setting.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["extname",{"_index":1712,"title":{},"body":{"injectables/Seed.html":{},"classes/StatusTask.html":{}}}],["extname(path",{"_index":1924,"title":{},"body":{"classes/StatusTask.html":{}}}],["extnamelength",{"_index":955,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["extractiontextinhtml",{"_index":776,"title":{},"body":{"classes/Content.html":{},"classes/Service.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["extractiontextinhtml(html",{"_index":2251,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractiontextinhtml(this.text",{"_index":791,"title":{},"body":{"classes/Content.html":{},"classes/Service.html":{}}}],["extractjwt",{"_index":1388,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1395,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failure",{"_index":998,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{},"miscellaneous/enumerations.html":{}}}],["false",{"_index":710,"title":{},"body":{"injectables/CommonService.html":{},"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"injectables/ImportService.html":{},"classes/Logger.html":{},"classes/StatusTask.html":{},"miscellaneous/variables.html":{}}}],["fastify",{"_index":2284,"title":{},"body":{"index.html":{}}}],["fatal",{"_index":874,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["fatal(...args",{"_index":943,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["female",{"_index":2226,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fetch",{"_index":2059,"title":{},"body":{"classes/UserController.html":{}}}],["fetch(@param",{"_index":2082,"title":{},"body":{"classes/UserController.html":{}}}],["fetch(params",{"_index":2071,"title":{},"body":{"classes/UserController.html":{}}}],["fields",{"_index":1045,"title":{},"body":{"classes/ExcelHelper.html":{},"miscellaneous/variables.html":{}}}],["fields.includes(key",{"_index":1112,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["file",{"_index":1345,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{}}}],["file.md5",{"_index":1989,"title":{},"body":{"classes/StorageController.html":{}}}],["file.mimetype",{"_index":1991,"title":{},"body":{"classes/StorageController.html":{}}}],["file.mv(filepath",{"_index":1984,"title":{},"body":{"classes/StorageController.html":{}}}],["file.name",{"_index":1980,"title":{},"body":{"classes/StorageController.html":{}}}],["file.size",{"_index":1987,"title":{},"body":{"classes/StorageController.html":{}}}],["filename",{"_index":953,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["filepath",{"_index":1056,"title":{},"body":{"classes/ExcelHelper.html":{},"classes/StorageController.html":{}}}],["files",{"_index":1967,"title":{},"body":{"classes/StorageController.html":{},"license.html":{}}}],["files.file",{"_index":1970,"title":{},"body":{"classes/StorageController.html":{}}}],["filesize",{"_index":2387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fileupload",{"_index":2384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter((item",{"_index":1107,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["findall",{"_index":1221,"title":{},"body":{"injectables/FlowService.html":{}}}],["findbyroleid",{"_index":352,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["findbyroleid(roleid",{"_index":364,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["findbyroles",{"_index":353,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["findbyroles(roles",{"_index":367,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["findone",{"_index":291,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"injectables/Seed.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":337,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{}}}],["findone(id",{"_index":302,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{}}}],["findone(where",{"_index":2105,"title":{},"body":{"injectables/UserService.html":{}}}],["findoneandrelations",{"_index":1592,"title":{},"body":{"injectables/RoleService.html":{}}}],["findoneandrelations(id",{"_index":1596,"title":{},"body":{"injectables/RoleService.html":{}}}],["findonebyid",{"_index":356,"title":{},"body":{"injectables/AuthorityService.html":{},"classes/BaseService.html":{},"injectables/CarouselService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["findonebyid(id",{"_index":377,"title":{},"body":{"injectables/AuthorityService.html":{},"classes/BaseService.html":{},"injectables/CarouselService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["findonebyname",{"_index":354,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"injectables/OrganizationService.html":{},"injectables/ServiceCategoryService.html":{}}}],["findonebyname(name",{"_index":369,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"injectables/OrganizationService.html":{},"injectables/ServiceCategoryService.html":{}}}],["findonebytoken",{"_index":505,"title":{},"body":{"injectables/CarouselService.html":{}}}],["findonebytoken(token",{"_index":511,"title":{},"body":{"injectables/CarouselService.html":{}}}],["findonebyuser",{"_index":1222,"title":{},"body":{"injectables/FlowService.html":{}}}],["findonebyuser(user",{"_index":1232,"title":{},"body":{"injectables/FlowService.html":{}}}],["findparentstree",{"_index":577,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ServiceCategoryService.html":{}}}],["findparentstree(category",{"_index":582,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ServiceCategoryService.html":{}}}],["fitness",{"_index":2342,"title":{},"body":{"license.html":{}}}],["flow",{"_index":103,"title":{"classes/Flow.html":{}},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/BaseFlow.html":{},"modules/CommonModule.html":{},"classes/Engine.html":{},"classes/Flow.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"interfaces/IFlow.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WorkOrderFlow.html":{},"coverage.html":{}}}],["flow.create(flow",{"_index":173,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["flow.create(payload",{"_index":1260,"title":{},"body":{"injectables/FlowService.html":{}}}],["flow.entity",{"_index":1271,"title":{},"body":{"classes/FlowTemplate.html":{},"classes/User.html":{}}}],["flow.executabletasks",{"_index":1018,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["flow.executabletasks.includes(task.name",{"_index":1019,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["flow.id",{"_index":1034,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["flow.operator",{"_index":179,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/User.html":{}}}],["flow.service",{"_index":2116,"title":{},"body":{"injectables/UserService.html":{}}}],["flow.state",{"_index":178,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/Engine.html":{},"injectables/FlowService.html":{},"interfaces/IFlow.html":{}}}],["flow.steps.map((item",{"_index":1198,"title":{},"body":{"classes/Flow.html":{}}}],["flow.template",{"_index":1239,"title":{},"body":{"injectables/FlowService.html":{},"classes/FlowTemplate.html":{}}}],["flow.user",{"_index":169,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/FlowService.html":{},"classes/User.html":{}}}],["flow.user.id",{"_index":189,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["flow.wfresult",{"_index":174,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/FlowService.html":{}}}],["flow.wfstatus",{"_index":176,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/FlowService.html":{}}}],["flowcontroller",{"_index":47,"title":{"classes/FlowController.html":{}},"body":{"modules/ApiModule.html":{},"classes/FlowController.html":{},"coverage.html":{}}}],["flowrepos",{"_index":119,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["flowrepos.delete(flow.id",{"_index":195,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["flowrepos.save(flow",{"_index":181,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["flowrepository",{"_index":1225,"title":{},"body":{"injectables/FlowService.html":{}}}],["flows",{"_index":1264,"title":{},"body":{"classes/FlowTemplate.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["flows/apply",{"_index":652,"title":{},"body":{"modules/CommonModule.html":{}}}],["flows/work",{"_index":646,"title":{},"body":{"modules/CommonModule.html":{}}}],["flowservice",{"_index":600,"title":{"injectables/FlowService.html":{}},"body":{"modules/CommonModule.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["flowsteps",{"_index":444,"title":{},"body":{"classes/BaseFlow.html":{},"classes/Flow.html":{}}}],["flowsteps.find((item",{"_index":1196,"title":{},"body":{"classes/Flow.html":{}}}],["flowtemplate",{"_index":147,"title":{"classes/FlowTemplate.html":{}},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/BaseFlow.html":{},"modules/CommonModule.html":{},"classes/Flow.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"injectables/FlowTemplateService.html":{},"coverage.html":{}}}],["flowtemplate.create(payload",{"_index":1299,"title":{},"body":{"injectables/FlowTemplateService.html":{}}}],["flowtemplatecontroller",{"_index":44,"title":{"classes/FlowTemplateController.html":{}},"body":{"modules/ApiModule.html":{},"classes/FlowTemplateController.html":{},"coverage.html":{}}}],["flowtemplateenum",{"_index":144,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/BaseFlow.html":{},"classes/Engine.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"interfaces/IFlow.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["flowtemplateenum.apply_vr",{"_index":164,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/UserService.html":{}}}],["flowtemplaterepository",{"_index":115,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/BaseFlow.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{}}}],["flowtemplates",{"_index":975,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["flowtemplateservice",{"_index":601,"title":{"injectables/FlowTemplateService.html":{}},"body":{"modules/CommonModule.html":{},"classes/FlowTemplateController.html":{},"injectables/FlowTemplateService.html":{},"coverage.html":{},"overview.html":{}}}],["following",{"_index":2327,"title":{},"body":{"license.html":{}}}],["free",{"_index":2300,"title":{},"body":{"license.html":{}}}],["fs",{"_index":1890,"title":{},"body":{"classes/StatusTask.html":{}}}],["function",{"_index":2184,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":2238,"title":{"miscellaneous/functions.html":{}},"body":{}}],["furnished",{"_index":2325,"title":{},"body":{"license.html":{}}}],["gcpszaprn8yqwbkzmsvgcebsqk63aev9qx2vn_ev",{"_index":2434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gender",{"_index":2002,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["gender.male",{"_index":2042,"title":{},"body":{"classes/User.html":{}}}],["get(':id",{"_index":303,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/UserController.html":{}}}],["get(':id')@useinterceptors(classserializerinterceptor",{"_index":2072,"title":{},"body":{"classes/UserController.html":{}}}],["get('current",{"_index":2085,"title":{},"body":{"classes/UserController.html":{}}}],["get('current')@useinterceptors(classserializerinterceptor",{"_index":2069,"title":{},"body":{"classes/UserController.html":{}}}],["get('detail/:token",{"_index":485,"title":{},"body":{"classes/CarouselController.html":{}}}],["get('export",{"_index":488,"title":{},"body":{"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/RoleController.html":{},"classes/ServiceController.html":{}}}],["get('list",{"_index":306,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/UserController.html":{}}}],["get('qiniu/uploadtoken",{"_index":1954,"title":{},"body":{"classes/StorageController.html":{}}}],["getavatarpath",{"_index":2031,"title":{},"body":{"classes/User.html":{}}}],["getcarousels",{"_index":469,"title":{},"body":{"classes/Carousel.html":{}}}],["getchannel",{"_index":1458,"title":{},"body":{"classes/MQ.html":{}}}],["getexecutabletasks",{"_index":1187,"title":{},"body":{"classes/Flow.html":{}}}],["getflow",{"_index":2174,"title":{},"body":{"injectables/WorkOrderFlow.html":{}}}],["getfullpath",{"_index":214,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["getfullpath(info",{"_index":262,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["getissuperadmin",{"_index":1566,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["getisvolunteer",{"_index":2034,"title":{},"body":{"classes/User.html":{}}}],["getkey",{"_index":268,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Organization.html":{},"classes/ServiceCategory.html":{}}}],["getlabel",{"_index":264,"title":{},"body":{"classes/Authority.html":{}}}],["getlogodarkimg",{"_index":1854,"title":{},"body":{"classes/Setting.html":{}}}],["getlogolightimg",{"_index":1852,"title":{},"body":{"classes/Setting.html":{}}}],["getmany",{"_index":394,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["getone",{"_index":1259,"title":{},"body":{"injectables/FlowService.html":{}}}],["getrepository",{"_index":990,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["getrepository(flow).findone",{"_index":1013,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["getrepository(role",{"_index":1699,"title":{},"body":{"injectables/Seed.html":{}}}],["getserver",{"_index":1307,"title":{},"body":{"classes/IO.html":{}}}],["getsettingbytoken",{"_index":1869,"title":{},"body":{"injectables/SettingService.html":{}}}],["getsettingbytoken(token",{"_index":1873,"title":{},"body":{"injectables/SettingService.html":{}}}],["getsiteinfo",{"_index":667,"title":{},"body":{"injectables/CommonService.html":{}}}],["getstacktrace",{"_index":1399,"title":{},"body":{"classes/Logger.html":{}}}],["getstacktrace(deep",{"_index":945,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["getstate",{"_index":1185,"title":{},"body":{"classes/Flow.html":{}}}],["getsvgcode",{"_index":668,"title":{},"body":{"injectables/CommonService.html":{}}}],["getthumbnailpath",{"_index":764,"title":{},"body":{"classes/Content.html":{},"classes/Service.html":{}}}],["getting",{"_index":2255,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettitle",{"_index":266,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Organization.html":{},"classes/ServiceCategory.html":{}}}],["getvalue",{"_index":270,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Organization.html":{},"classes/ServiceCategory.html":{}}}],["getvideopath",{"_index":766,"title":{},"body":{"classes/Content.html":{},"classes/Service.html":{}}}],["getvip",{"_index":2040,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getvip(points",{"_index":2252,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getvip(this.points",{"_index":2056,"title":{},"body":{"classes/User.html":{}}}],["git",{"_index":2268,"title":{},"body":{"index.html":{}}}],["global",{"_index":613,"title":{},"body":{"modules/CommonModule.html":{}}}],["granted",{"_index":2299,"title":{},"body":{"license.html":{}}}],["handlefile",{"_index":1337,"title":{},"body":{"injectables/ImportService.html":{}}}],["handlefile(file",{"_index":1343,"title":{},"body":{"injectables/ImportService.html":{}}}],["handler",{"_index":1113,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["handler(item[headerkey",{"_index":1122,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["handler(item[obj[0",{"_index":1120,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["handletype",{"_index":240,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["header('content",{"_index":1153,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["headerkey",{"_index":1116,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["helmet",{"_index":2377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hereby",{"_index":2298,"title":{},"body":{"license.html":{}}}],["hh:mm:ss",{"_index":790,"title":{},"body":{"classes/Content.html":{},"classes/ContextTrace.html":{},"classes/ExceptionsFilter.html":{},"classes/Logger.html":{},"classes/Service.html":{}}}],["hidepoweredby",{"_index":2378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holders",{"_index":2347,"title":{},"body":{"license.html":{}}}],["host",{"_index":1131,"title":{},"body":{"classes/ExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":1139,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["hostname",{"_index":2373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hour",{"_index":1900,"title":{},"body":{"classes/StatusTask.html":{}}}],["html",{"_index":1165,"title":{},"body":{"classes/ExceptionsFilter.html":{},"miscellaneous/functions.html":{}}}],["http",{"_index":1149,"title":{},"body":{"classes/ExceptionsFilter.html":{},"index.html":{}}}],["http://127.0.0.0:3000/docs",{"_index":2282,"title":{},"body":{"index.html":{}}}],["http://127.0.0.0:8080",{"_index":2283,"title":{},"body":{"index.html":{}}}],["http://127.0.0.1:3000",{"_index":2376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://img.nestify.cn",{"_index":2436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpexception",{"_index":1136,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["https://cn.bing.com/search?q=${encodeuricomponent",{"_index":1168,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["https://nodejs.org/api/fs.html#fs_stats_dev",{"_index":1713,"title":{},"body":{"injectables/Seed.html":{}}}],["httpstatus",{"_index":1137,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["icp",{"_index":1844,"title":{},"body":{"classes/Setting.html":{}}}],["id",{"_index":188,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseService.html":{},"classes/Carousel.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/Engine.html":{},"classes/Flow.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"classes/FlowTemplateController.html":{},"injectables/FlowTemplateService.html":{},"interfaces/IFlow.html":{},"classes/IO.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/ServiceCategoryController.html":{},"injectables/ServiceCategoryService.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/Setting.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["idcard",{"_index":79,"title":{},"body":{"classes/ApplyVolunteerDto.html":{},"classes/User.html":{}}}],["ids",{"_index":363,"title":{},"body":{"injectables/AuthorityService.html":{},"classes/BaseService.html":{},"injectables/CarouselService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["ids.includes(root.id",{"_index":406,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/OrganizationService.html":{}}}],["iflow",{"_index":992,"title":{"interfaces/IFlow.html":{}},"body":{"classes/Engine.html":{},"classes/Flow.html":{},"interfaces/IFlow.html":{},"coverage.html":{}}}],["ignorechars",{"_index":693,"title":{},"body":{"injectables/CommonService.html":{}}}],["ignored",{"_index":1915,"title":{},"body":{"classes/StatusTask.html":{}}}],["ik_max_word",{"_index":732,"title":{},"body":{"classes/Content.html":{},"injectables/Seed.html":{}}}],["images/superadmin.png",{"_index":1704,"title":{},"body":{"injectables/Seed.html":{}}}],["implements",{"_index":52,"title":{},"body":{"modules/ApiModule.html":{},"classes/BaseFlow.html":{},"classes/ExceptionsFilter.html":{},"classes/Flow.html":{}}}],["implied",{"_index":2338,"title":{},"body":{"license.html":{}}}],["import",{"_index":12,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/ApplyVolunteerDto.html":{},"injectables/ApplyVolunteerFlow.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseFlow.html":{},"classes/BaseService.html":{},"classes/Carousel.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/Engine.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"classes/Flow.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"classes/FlowTemplateController.html":{},"injectables/FlowTemplateService.html":{},"interfaces/IFlow.html":{},"classes/IO.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/MQ.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Qiniu.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/SMS.html":{},"modules/SSRModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/ServiceCategoryController.html":{},"injectables/ServiceCategoryService.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"injectables/WorkOrderFlow.html":{},"miscellaneous/enumerations.html":{}}}],["importauthorities",{"_index":1659,"title":{},"body":{"injectables/Seed.html":{}}}],["importcategorys",{"_index":1660,"title":{},"body":{"injectables/Seed.html":{}}}],["importcontents",{"_index":1338,"title":{},"body":{"injectables/ImportService.html":{}}}],["importcontents(file",{"_index":1346,"title":{},"body":{"injectables/ImportService.html":{}}}],["importorganizations",{"_index":1339,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["importorganizations(file",{"_index":1348,"title":{},"body":{"injectables/ImportService.html":{}}}],["importroles",{"_index":1661,"title":{},"body":{"injectables/Seed.html":{}}}],["imports",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{}}}],["importservice",{"_index":602,"title":{"injectables/ImportService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/ImportService.html":{},"classes/StorageController.html":{},"coverage.html":{},"overview.html":{}}}],["importservicecategorys",{"_index":1662,"title":{},"body":{"injectables/Seed.html":{}}}],["in(${roles.join",{"_index":393,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["included",{"_index":2331,"title":{},"body":{"license.html":{}}}],["including",{"_index":2311,"title":{},"body":{"license.html":{}}}],["index",{"_index":728,"title":{"index.html":{}},"body":{"classes/Content.html":{},"controllers/IndexController.html":{},"classes/SMS.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/StatusTask.html":{}}}],["index(@res",{"_index":1378,"title":{},"body":{"controllers/IndexController.html":{}}}],["index(res",{"_index":1375,"title":{},"body":{"controllers/IndexController.html":{}}}],["indexcontroller",{"_index":1373,"title":{"controllers/IndexController.html":{}},"body":{"controllers/IndexController.html":{},"modules/SSRModule.html":{},"coverage.html":{}}}],["indicescreateparams",{"_index":727,"title":{},"body":{"classes/Content.html":{}}}],["influx",{"_index":2201,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["influx.fieldtype.float",{"_index":2425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["influx.fieldtype.integer",{"_index":2427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["influx.influxdb(config.influx",{"_index":2451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/ApplyVolunteerDto.html":{},"injectables/ApplyVolunteerFlow.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseFlow.html":{},"classes/BaseService.html":{},"classes/Carousel.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/Engine.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"classes/Flow.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"classes/FlowTemplateController.html":{},"injectables/FlowTemplateService.html":{},"interfaces/IFlow.html":{},"classes/IO.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/MQ.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Qiniu.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/SMS.html":{},"modules/SSRModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/ServiceCategoryController.html":{},"injectables/ServiceCategoryService.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"injectables/WorkOrderFlow.html":{},"miscellaneous/enumerations.html":{}}}],["info(...args",{"_index":937,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["info.path",{"_index":428,"title":{},"body":{"classes/Base.html":{}}}],["info.path.startswith",{"_index":426,"title":{},"body":{"classes/Base.html":{}}}],["info.storagetype",{"_index":423,"title":{},"body":{"classes/Base.html":{}}}],["info[sheetmap.map",{"_index":1099,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["init",{"_index":978,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{},"classes/IO.html":{},"classes/MQ.html":{}}}],["initelasticsearchindices",{"_index":1663,"title":{},"body":{"injectables/Seed.html":{}}}],["initfastify",{"_index":2206,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["initfastify(nextjs",{"_index":2246,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initscripts",{"_index":2207,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["initscripts(app",{"_index":2248,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initstate",{"_index":1227,"title":{},"body":{"injectables/FlowService.html":{}}}],["initswagger",{"_index":2208,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["initswagger(app",{"_index":2250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":98,"title":{"injectables/ApplyVolunteerFlow.html":{},"injectables/AuthorityService.html":{},"injectables/CarouselService.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/ImportService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{},"injectables/WorkOrderFlow.html":{}},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/AuthorityService.html":{},"injectables/CarouselService.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/ImportService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{},"injectables/WorkOrderFlow.html":{},"coverage.html":{}}}],["injectconnection",{"_index":1350,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["injectrepository",{"_index":151,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/AuthorityService.html":{},"injectables/CarouselService.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["injectrepository(authority",{"_index":385,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["injectrepository(carousel",{"_index":516,"title":{},"body":{"injectables/CarouselService.html":{}}}],["injectrepository(category",{"_index":684,"title":{},"body":{"injectables/CommonService.html":{}}}],["injectrepository(content",{"_index":833,"title":{},"body":{"injectables/ContentService.html":{}}}],["injectrepository(flow",{"_index":1236,"title":{},"body":{"injectables/FlowService.html":{}}}],["injectrepository(flowtemplate",{"_index":161,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{}}}],["injectrepository(organization",{"_index":1523,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["injectrepository(role",{"_index":2118,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(service",{"_index":1830,"title":{},"body":{"injectables/ServiceService.html":{}}}],["injectrepository(servicecategory",{"_index":1805,"title":{},"body":{"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{}}}],["injectrepository(setting",{"_index":1876,"title":{},"body":{"injectables/SettingService.html":{}}}],["injectrepository(user",{"_index":2117,"title":{},"body":{"injectables/UserService.html":{}}}],["instanceof",{"_index":883,"title":{},"body":{"classes/ContextTrace.html":{},"classes/ExceptionsFilter.html":{},"classes/Logger.html":{}}}],["integer",{"_index":734,"title":{},"body":{"classes/Content.html":{}}}],["interface",{"_index":991,"title":{"interfaces/IFlow.html":{}},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{},"coverage.html":{}}}],["internalservererrorexception",{"_index":1959,"title":{},"body":{"classes/StorageController.html":{}}}],["interval",{"_index":1894,"title":{},"body":{"classes/StatusTask.html":{}}}],["interval(2000",{"_index":1887,"title":{},"body":{"classes/StatusTask.html":{}}}],["io",{"_index":1300,"title":{"classes/IO.html":{}},"body":{"classes/IO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["io.server.of('/notices",{"_index":1331,"title":{},"body":{"classes/IO.html":{},"miscellaneous/variables.html":{}}}],["io.server.of('/status",{"_index":1329,"title":{},"body":{"classes/IO.html":{},"miscellaneous/variables.html":{}}}],["ioserver",{"_index":1328,"title":{},"body":{"classes/IO.html":{},"classes/StatusTask.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ioserver.notices.use((socket",{"_index":1334,"title":{},"body":{"classes/IO.html":{}}}],["ioserver.status",{"_index":1885,"title":{},"body":{"classes/StatusTask.html":{}}}],["ioserver.status.use((socket",{"_index":1332,"title":{},"body":{"classes/IO.html":{}}}],["isarray",{"_index":987,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["isarray(res",{"_index":1025,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["isexist",{"_index":2168,"title":{},"body":{"injectables/UserService.html":{}}}],["ismobilephone",{"_index":92,"title":{},"body":{"classes/ApplyVolunteerDto.html":{},"classes/LoginDto.html":{}}}],["ismobilephone('zh",{"_index":97,"title":{},"body":{"classes/ApplyVolunteerDto.html":{},"classes/LoginDto.html":{}}}],["isnotempty",{"_index":93,"title":{},"body":{"classes/ApplyVolunteerDto.html":{},"classes/CreateContentDto.html":{},"classes/LoginDto.html":{},"classes/PasswordDto.html":{},"classes/UpdateContentDto.html":{}}}],["isnotempty({message",{"_index":89,"title":{},"body":{"classes/ApplyVolunteerDto.html":{}}}],["issuperadmin",{"_index":1555,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["isvolunteer",{"_index":2008,"title":{},"body":{"classes/User.html":{}}}],["item",{"_index":446,"title":{},"body":{"classes/BaseFlow.html":{},"classes/Carousel.html":{},"classes/ExcelHelper.html":{},"injectables/ImportService.html":{},"classes/SMS.html":{},"injectables/Seed.html":{}}}],["item.category",{"_index":1361,"title":{},"body":{"injectables/ImportService.html":{}}}],["item.name",{"_index":1197,"title":{},"body":{"classes/Flow.html":{}}}],["item.parent",{"_index":1367,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["item.push(cellobj",{"_index":1098,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["item[mapkey",{"_index":1082,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["jointable",{"_index":1568,"title":{},"body":{"classes/Role.html":{}}}],["js",{"_index":866,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["json",{"_index":226,"title":{},"body":{"classes/Authority.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["json.parse(msg.content.tostring",{"_index":1012,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["json.parse(statusjson",{"_index":1933,"title":{},"body":{"classes/StatusTask.html":{}}}],["json.stringify(statusarr",{"_index":1941,"title":{},"body":{"classes/StatusTask.html":{}}}],["jwt",{"_index":661,"title":{},"body":{"modules/CommonModule.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":1394,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":615,"title":{},"body":{"modules/CommonModule.html":{}}}],["jwtmodule.register(config.jwt",{"_index":662,"title":{},"body":{"modules/CommonModule.html":{}}}],["jwtservice",{"_index":2098,"title":{},"body":{"injectables/UserService.html":{}}}],["jwtstrategy",{"_index":610,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/CommonModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":217,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/ExcelHelper.html":{},"injectables/ImportService.html":{},"classes/Organization.html":{},"classes/ServiceCategory.html":{}}}],["key\":\"$(key)\",\"hash\":\"$(etag)\",\"fsize\":$(fsize),\"bucket\":\"$(bucket)\",\"name\":\"$(x:name",{"_index":2442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key.split",{"_index":1118,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["keywords",{"_index":1847,"title":{},"body":{"classes/Setting.html":{}}}],["kind",{"_index":2336,"title":{},"body":{"license.html":{}}}],["kv",{"_index":1059,"title":{},"body":{"classes/ExcelHelper.html":{},"miscellaneous/enumerations.html":{}}}],["label",{"_index":215,"title":{},"body":{"classes/Authority.html":{}}}],["layout",{"_index":923,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["leftjoin('t.roles",{"_index":391,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["leftjoinandselect('t.operator",{"_index":1253,"title":{},"body":{"injectables/FlowService.html":{}}}],["leftjoinandselect('t.template",{"_index":1251,"title":{},"body":{"injectables/FlowService.html":{}}}],["leftjoinandselect('t.user",{"_index":1252,"title":{},"body":{"injectables/FlowService.html":{}}}],["legend",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"overview.html":{}}}],["length",{"_index":2253,"title":{},"body":{"miscellaneous/functions.html":{}}}],["level",{"_index":926,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["leveloutput",{"_index":901,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["leveloutput}${positionoutput",{"_index":918,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["liability",{"_index":2351,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2348,"title":{},"body":{"license.html":{}}}],["lib/es",{"_index":774,"title":{},"body":{"classes/Content.html":{},"injectables/SearchService.html":{},"classes/StatusTask.html":{}}}],["lib/excel",{"_index":280,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"injectables/ImportService.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{}}}],["lib/helper",{"_index":777,"title":{},"body":{"classes/Content.html":{},"classes/Service.html":{},"classes/User.html":{}}}],["lib/io",{"_index":1896,"title":{},"body":{"classes/StatusTask.html":{}}}],["lib/logger",{"_index":437,"title":{},"body":{"classes/BaseFlow.html":{},"classes/ExceptionsFilter.html":{},"classes/StatusTask.html":{},"injectables/UserService.html":{},"injectables/WorkOrderFlow.html":{}}}],["lib/redis",{"_index":683,"title":{},"body":{"injectables/CommonService.html":{},"classes/StatusTask.html":{}}}],["lib/wf",{"_index":156,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/BaseFlow.html":{},"classes/Flow.html":{},"injectables/FlowService.html":{},"injectables/UserService.html":{}}}],["license",{"_index":2292,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":2291,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":2312,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2339,"title":{},"body":{"license.html":{}}}],["limits",{"_index":2386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lin",{"_index":2296,"title":{},"body":{"license.html":{}}}],["linenumber",{"_index":856,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["links",{"_index":1848,"title":{},"body":{"classes/Setting.html":{}}}],["list",{"_index":292,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"injectables/ImportService.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/UserController.html":{}}}],["list(@query",{"_index":341,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/UserController.html":{}}}],["list(payload",{"_index":305,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/UserController.html":{}}}],["load",{"_index":1041,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["load(workbook",{"_index":1048,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["loadfrombuffer",{"_index":1042,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["loadfrombuffer(buffer",{"_index":1051,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["loadfromfile",{"_index":1043,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["loadfromfile(filepath",{"_index":1054,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["local",{"_index":2231,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lodash",{"_index":382,"title":{},"body":{"injectables/AuthorityService.html":{},"classes/BaseFlow.html":{},"classes/Carousel.html":{},"injectables/CarouselService.html":{},"injectables/CategoryService.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/Engine.html":{},"classes/ExcelHelper.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"interfaces/IFlow.html":{},"classes/Logger.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"classes/Service.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["log",{"_index":1400,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["log(...args",{"_index":935,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["log4js",{"_index":863,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["log4js.addlayout('nestify",{"_index":875,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["log4js.configure",{"_index":919,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["log4js.getlogger",{"_index":927,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["log4js.loggingevent",{"_index":878,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logconfig",{"_index":876,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logconfig.type",{"_index":895,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent",{"_index":877,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent.data.foreach((value",{"_index":882,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent.level",{"_index":902,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent.level.tostring",{"_index":903,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent.pid.tostring",{"_index":896,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger",{"_index":15,"title":{"classes/Logger.html":{}},"body":{"modules/ApiModule.html":{},"classes/BaseFlow.html":{},"classes/ContextTrace.html":{},"classes/Engine.html":{},"classes/ExceptionsFilter.html":{},"interfaces/IFlow.html":{},"classes/IO.html":{},"classes/Logger.html":{},"classes/MQ.html":{},"classes/SMS.html":{},"injectables/Seed.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"injectables/UserService.html":{},"injectables/WorkOrderFlow.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["logger(req",{"_index":2254,"title":{},"body":{"miscellaneous/functions.html":{}}}],["logger.debug('send",{"_index":1630,"title":{},"body":{"classes/SMS.html":{}}}],["logger.debug(logger.getstacktrace",{"_index":934,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.error",{"_index":1148,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["logger.error('error",{"_index":1327,"title":{},"body":{"classes/IO.html":{}}}],["logger.error('exception",{"_index":1144,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["logger.error('internal_server_error",{"_index":1162,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["logger.error(err",{"_index":1031,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{},"classes/SMS.html":{},"classes/StorageController.html":{}}}],["logger.error(logger.getstacktrace",{"_index":942,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.error(request.headers.xhr",{"_index":1145,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["logger.fatal(logger.getstacktrace",{"_index":944,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.info(logger.getstacktrace",{"_index":936,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.level",{"_index":928,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.log",{"_index":1906,"title":{},"body":{"classes/StatusTask.html":{},"injectables/WorkOrderFlow.html":{}}}],["logger.log('/notices",{"_index":1335,"title":{},"body":{"classes/IO.html":{}}}],["logger.log('/status",{"_index":1333,"title":{},"body":{"classes/IO.html":{}}}],["logger.log('clients",{"_index":1317,"title":{},"body":{"classes/IO.html":{}}}],["logger.log('connect",{"_index":1316,"title":{},"body":{"classes/IO.html":{}}}],["logger.log('headers",{"_index":1319,"title":{},"body":{"classes/IO.html":{}}}],["logger.log('id",{"_index":1312,"title":{},"body":{"classes/IO.html":{}}}],["logger.log('login",{"_index":2141,"title":{},"body":{"injectables/UserService.html":{}}}],["logger.log('seed",{"_index":1686,"title":{},"body":{"injectables/Seed.html":{}}}],["logger.log('wf",{"_index":1016,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["logger.log(`register",{"_index":453,"title":{},"body":{"classes/BaseFlow.html":{}}}],["logger.log(`watching",{"_index":1913,"title":{},"body":{"classes/StatusTask.html":{}}}],["logger.log(`wf:${id",{"_index":1005,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["logger.log(event",{"_index":1920,"title":{},"body":{"classes/StatusTask.html":{}}}],["logger.log(filepath",{"_index":1982,"title":{},"body":{"classes/StorageController.html":{}}}],["logger.log(status",{"_index":1908,"title":{},"body":{"classes/StatusTask.html":{}}}],["logger.log(target",{"_index":1975,"title":{},"body":{"classes/StorageController.html":{}}}],["logger.trace('message",{"_index":1462,"title":{},"body":{"classes/MQ.html":{}}}],["logger.trace('workflow",{"_index":1000,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["logger.trace(logger.getstacktrace",{"_index":931,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.warn('disconnect",{"_index":1325,"title":{},"body":{"classes/IO.html":{}}}],["logger.warn('disconnectcting",{"_index":1323,"title":{},"body":{"classes/IO.html":{}}}],["logger.warn(logger.getstacktrace",{"_index":939,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel",{"_index":868,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["loggerlevel.all",{"_index":2392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loggerlevel.debug",{"_index":904,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel.error",{"_index":911,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel.fatal",{"_index":913,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel.info",{"_index":907,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel.trace",{"_index":929,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel.warn",{"_index":909,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerservice",{"_index":900,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logging",{"_index":2418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":1421,"title":{},"body":{"classes/LoginController.html":{},"injectables/UserService.html":{}}}],["login(@body",{"_index":1434,"title":{},"body":{"classes/LoginController.html":{}}}],["login(account",{"_index":2108,"title":{},"body":{"injectables/UserService.html":{}}}],["login(dto",{"_index":1423,"title":{},"body":{"classes/LoginController.html":{}}}],["logincontroller",{"_index":17,"title":{"classes/LoginController.html":{}},"body":{"modules/ApiModule.html":{},"classes/LoginController.html":{},"coverage.html":{}}}],["logindto",{"_index":1424,"title":{"classes/LoginDto.html":{}},"body":{"classes/LoginController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logodarkimg",{"_index":1838,"title":{},"body":{"classes/Setting.html":{}}}],["logolightimg",{"_index":1837,"title":{},"body":{"classes/Setting.html":{}}}],["long",{"_index":2407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mac",{"_index":1544,"title":{},"body":{"classes/Qiniu.html":{}}}],["macos",{"_index":2258,"title":{},"body":{"index.html":{}}}],["male",{"_index":2225,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manytomany",{"_index":278,"title":{},"body":{"classes/Authority.html":{},"classes/Role.html":{}}}],["manytomany((type",{"_index":285,"title":{},"body":{"classes/Authority.html":{},"classes/Role.html":{}}}],["manytomany(undefined",{"_index":235,"title":{},"body":{"classes/Authority.html":{},"classes/Role.html":{}}}],["manytoone",{"_index":769,"title":{},"body":{"classes/Content.html":{},"classes/Flow.html":{},"classes/Service.html":{},"classes/User.html":{}}}],["manytoone((type",{"_index":780,"title":{},"body":{"classes/Content.html":{},"classes/Flow.html":{},"classes/Service.html":{},"classes/User.html":{}}}],["manytoone(undefined",{"_index":725,"title":{},"body":{"classes/Content.html":{},"classes/Flow.html":{},"classes/Service.html":{},"classes/User.html":{}}}],["map",{"_index":238,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{}}}],["map((item",{"_index":1104,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["mapkey",{"_index":1078,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["mappings",{"_index":729,"title":{},"body":{"classes/Content.html":{},"injectables/Seed.html":{}}}],["mark",{"_index":869,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["matching",{"_index":55,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/ApplyVolunteerDto.html":{},"injectables/ApplyVolunteerFlow.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseFlow.html":{},"classes/BaseService.html":{},"classes/Carousel.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/Engine.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"classes/Flow.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"classes/FlowTemplateController.html":{},"injectables/FlowTemplateService.html":{},"interfaces/IFlow.html":{},"classes/IO.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/MQ.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Qiniu.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/SMS.html":{},"modules/SSRModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/ServiceCategoryController.html":{},"injectables/ServiceCategoryService.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"injectables/WorkOrderFlow.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":2382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxage",{"_index":2409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxlength",{"_index":1446,"title":{},"body":{"classes/LoginDto.html":{},"classes/PasswordDto.html":{}}}],["maxlength(12",{"_index":1448,"title":{},"body":{"classes/LoginDto.html":{},"classes/PasswordDto.html":{}}}],["md5",{"_index":1988,"title":{},"body":{"classes/StorageController.html":{}}}],["measurement",{"_index":2422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory",{"_index":2426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menus",{"_index":685,"title":{},"body":{"injectables/CommonService.html":{}}}],["merchantability",{"_index":2341,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2316,"title":{},"body":{"license.html":{}}}],["message",{"_index":88,"title":{},"body":{"classes/ApplyVolunteerDto.html":{},"classes/CreateContentDto.html":{},"classes/ExceptionsFilter.html":{},"classes/LoginDto.html":{},"classes/PasswordDto.html":{},"classes/UpdateContentDto.html":{},"miscellaneous/enumerations.html":{}}}],["messagelist",{"_index":881,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["messagelist.join",{"_index":892,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["messagelist.push(value",{"_index":890,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["messageoutput",{"_index":891,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["middlewareconsumer",{"_index":8,"title":{},"body":{"modules/ApiModule.html":{}}}],["mimetype",{"_index":1990,"title":{},"body":{"classes/StorageController.html":{}}}],["minlength",{"_index":1445,"title":{},"body":{"classes/LoginDto.html":{},"classes/PasswordDto.html":{}}}],["minlength(8",{"_index":1447,"title":{},"body":{"classes/LoginDto.html":{},"classes/PasswordDto.html":{}}}],["minute",{"_index":1899,"title":{},"body":{"classes/StatusTask.html":{}}}],["miscellaneous",{"_index":2214,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{}}],["mit",{"_index":2290,"title":{},"body":{"index.html":{},"license.html":{}}}],["mm",{"_index":788,"title":{},"body":{"classes/Content.html":{},"classes/ContextTrace.html":{},"classes/ExceptionsFilter.html":{},"classes/Logger.html":{},"classes/Service.html":{},"classes/StorageController.html":{}}}],["modify",{"_index":2315,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/SSRModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/SSRModule.html":{},"overview.html":{}}}],["modulename",{"_index":879,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["moduleoutput",{"_index":899,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["modules",{"_index":2359,"title":{"modules.html":{}},"body":{}}],["mojave",{"_index":2259,"title":{},"body":{"index.html":{}}}],["moment",{"_index":768,"title":{},"body":{"classes/Content.html":{},"classes/ContextTrace.html":{},"classes/ExceptionsFilter.html":{},"classes/Logger.html":{},"classes/Service.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{}}}],["moment().format('yyyy",{"_index":787,"title":{},"body":{"classes/Content.html":{},"classes/ExceptionsFilter.html":{},"classes/Service.html":{},"classes/StorageController.html":{}}}],["moment().valueof",{"_index":1935,"title":{},"body":{"classes/StatusTask.html":{}}}],["moment(logevent.starttime).format('yyyy",{"_index":898,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["month",{"_index":1902,"title":{},"body":{"classes/StatusTask.html":{}}}],["mq",{"_index":988,"title":{"classes/MQ.html":{}},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{},"classes/MQ.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mq.channel.ack(msg",{"_index":1037,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["mq.channel.assertqueue(mqchannel.wf",{"_index":1002,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["mq.channel.consume(mqchannel.wf",{"_index":1009,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["mq.channel.sendtoqueue",{"_index":1006,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["mqchannel",{"_index":989,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{},"classes/MQ.html":{},"miscellaneous/enumerations.html":{}}}],["mqchannel.wf",{"_index":1007,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["msg",{"_index":1010,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{},"classes/SMS.html":{}}}],["msg.replace(`{s${index",{"_index":1628,"title":{},"body":{"classes/SMS.html":{}}}],["name",{"_index":204,"title":{},"body":{"classes/Authority.html":{},"injectables/AuthorityService.html":{},"classes/BaseFlow.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/Engine.html":{},"classes/FlowTemplate.html":{},"interfaces/IFlow.html":{},"classes/Organization.html":{},"injectables/OrganizationService.html":{},"classes/Role.html":{},"classes/ServiceCategory.html":{},"injectables/ServiceCategoryService.html":{},"classes/StorageController.html":{}}}],["nest",{"_index":620,"title":{},"body":{"modules/CommonModule.html":{},"classes/StatusTask.html":{}}}],["nestify",{"_index":924,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nestifystack",{"_index":2289,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":14,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"injectables/ApplyVolunteerFlow.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/BaseFlow.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ExceptionsFilter.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"classes/FlowTemplateController.html":{},"injectables/FlowTemplateService.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginController.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"modules/SSRModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/ServiceCategoryController.html":{},"injectables/ServiceCategoryService.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StorageController.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"injectables/WorkOrderFlow.html":{}}}],["nestjs/jwt",{"_index":616,"title":{},"body":{"modules/CommonModule.html":{},"injectables/UserService.html":{}}}],["nestjs/passport",{"_index":327,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"modules/CommonModule.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"injectables/JwtStrategy.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{}}}],["nestjs/swagger",{"_index":96,"title":{},"body":{"classes/ApplyVolunteerDto.html":{},"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/CreateContentDto.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/OrganizationController.html":{},"classes/PasswordDto.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/UserController.html":{}}}],["nestjs/typeorm",{"_index":152,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/AuthorityService.html":{},"injectables/CarouselService.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/ImportService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/Seed.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["nestjs、nextjs、fastify、typeorm、ant",{"_index":2256,"title":{},"body":{"index.html":{}}}],["nestmodule",{"_index":13,"title":{},"body":{"modules/ApiModule.html":{}}}],["nestschedule",{"_index":1882,"title":{},"body":{"classes/StatusTask.html":{}}}],["new",{"_index":339,"title":{},"body":{"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/BaseFlow.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/Engine.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"classes/FlowTemplateController.html":{},"interfaces/IFlow.html":{},"classes/IO.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/MQ.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/Qiniu.html":{},"classes/RoleController.html":{},"injectables/SearchService.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/StorageController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newitem",{"_index":474,"title":{},"body":{"classes/Carousel.html":{}}}],["newitem.image",{"_index":475,"title":{},"body":{"classes/Carousel.html":{}}}],["news",{"_index":1358,"title":{},"body":{"injectables/ImportService.html":{}}}],["news.map((item",{"_index":1360,"title":{},"body":{"injectables/ImportService.html":{}}}],["next",{"_index":1024,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{},"classes/IO.html":{},"miscellaneous/functions.html":{}}}],["nextjs",{"_index":2247,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nextstate",{"_index":168,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["nextstep",{"_index":192,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["nextstep.id",{"_index":1033,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["nextstep.nextstep",{"_index":1035,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["nextstep.options",{"_index":1036,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["nickname",{"_index":1702,"title":{},"body":{"injectables/Seed.html":{},"classes/User.html":{}}}],["node.js",{"_index":2261,"title":{},"body":{"index.html":{}}}],["node.js、redis、postgresql、rabbitmq",{"_index":2272,"title":{},"body":{"index.html":{}}}],["noise",{"_index":696,"title":{},"body":{"injectables/CommonService.html":{}}}],["noninfringement",{"_index":2345,"title":{},"body":{"license.html":{}}}],["normal",{"_index":2229,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notice",{"_index":656,"title":{"classes/Notice.html":{}},"body":{"modules/CommonModule.html":{},"classes/Notice.html":{},"coverage.html":{},"license.html":{}}}],["notices",{"_index":1330,"title":{},"body":{"classes/IO.html":{},"miscellaneous/variables.html":{}}}],["noticetype",{"_index":1476,"title":{},"body":{"classes/Notice.html":{},"miscellaneous/enumerations.html":{}}}],["noticetype.message",{"_index":1479,"title":{},"body":{"classes/Notice.html":{}}}],["notification",{"_index":2227,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["null",{"_index":779,"title":{},"body":{"classes/Content.html":{},"classes/Engine.html":{},"classes/ExcelHelper.html":{},"interfaces/IFlow.html":{},"classes/Service.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["number",{"_index":245,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Logger.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{}}}],["obj",{"_index":1090,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["obj.length",{"_index":1093,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["object",{"_index":237,"title":{},"body":{"classes/Authority.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Engine.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/SMS.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["object.keys(engine.flowtemplates[template])[0",{"_index":1238,"title":{},"body":{"injectables/FlowService.html":{}}}],["object.keys(files).length",{"_index":1969,"title":{},"body":{"classes/StorageController.html":{}}}],["object.keys(res).foreach(async",{"_index":1356,"title":{},"body":{"injectables/ImportService.html":{}}}],["object.keys(rowsmap).foreach((key",{"_index":1111,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["object.keys(this.flow).map((item",{"_index":445,"title":{},"body":{"classes/BaseFlow.html":{}}}],["object.keys(this.flow[item]).map((action",{"_index":448,"title":{},"body":{"classes/BaseFlow.html":{}}}],["obtaining",{"_index":2303,"title":{},"body":{"license.html":{}}}],["oldpassword",{"_index":1539,"title":{},"body":{"classes/PasswordDto.html":{}}}],["on('all",{"_index":1916,"title":{},"body":{"classes/StatusTask.html":{}}}],["oncejob",{"_index":1910,"title":{},"body":{"classes/StatusTask.html":{}}}],["onetomany",{"_index":555,"title":{},"body":{"classes/Category.html":{},"classes/FlowTemplate.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/ServiceCategory.html":{},"classes/User.html":{}}}],["onetomany((type",{"_index":557,"title":{},"body":{"classes/Category.html":{},"classes/FlowTemplate.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/ServiceCategory.html":{},"classes/User.html":{}}}],["onetomany(undefined",{"_index":543,"title":{},"body":{"classes/Category.html":{},"classes/FlowTemplate.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/ServiceCategory.html":{},"classes/User.html":{}}}],["onmoduleinit",{"_index":110,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/BaseFlow.html":{}}}],["operator",{"_index":1015,"title":{},"body":{"classes/Engine.html":{},"classes/Flow.html":{},"injectables/FlowService.html":{},"interfaces/IFlow.html":{}}}],["operator.operatorflows",{"_index":1192,"title":{},"body":{"classes/Flow.html":{}}}],["operatorflows",{"_index":2003,"title":{},"body":{"classes/User.html":{}}}],["optional",{"_index":1898,"title":{},"body":{"classes/StatusTask.html":{}}}],["options",{"_index":117,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/Engine.html":{},"injectables/FlowService.html":{},"interfaces/IFlow.html":{},"miscellaneous/variables.html":{}}}],["order.flow",{"_index":647,"title":{},"body":{"modules/CommonModule.html":{}}}],["order.flow.ts",{"_index":2172,"title":{},"body":{"injectables/WorkOrderFlow.html":{},"coverage.html":{}}}],["order.flow.ts:5",{"_index":2173,"title":{},"body":{"injectables/WorkOrderFlow.html":{}}}],["order.flow.ts:8",{"_index":2175,"title":{},"body":{"injectables/WorkOrderFlow.html":{}}}],["org",{"_index":2004,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["org.id",{"_index":1369,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["org.users",{"_index":2045,"title":{},"body":{"classes/User.html":{}}}],["organization",{"_index":627,"title":{"classes/Organization.html":{}},"body":{"modules/CommonModule.html":{},"injectables/ImportService.html":{},"classes/Organization.html":{},"injectables/OrganizationService.html":{},"injectables/Seed.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["organization.create(payload",{"_index":1527,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["organization.entity",{"_index":2039,"title":{},"body":{"classes/User.html":{}}}],["organization.parent",{"_index":1528,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["organization.sheetsmap",{"_index":1363,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["organizationarr",{"_index":1365,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["organizationarr.find((org",{"_index":1368,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["organizationarr.push(organization.create(item",{"_index":1370,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["organizationcontroller",{"_index":29,"title":{"classes/OrganizationController.html":{}},"body":{"modules/ApiModule.html":{},"classes/OrganizationController.html":{},"coverage.html":{}}}],["organizationrepository",{"_index":1517,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["organizations",{"_index":1352,"title":{},"body":{"injectables/ImportService.html":{},"classes/Organization.html":{},"injectables/Seed.html":{}}}],["organizations.foreach((item",{"_index":1366,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["organizationservice",{"_index":603,"title":{"injectables/OrganizationService.html":{}},"body":{"modules/CommonModule.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"coverage.html":{},"overview.html":{}}}],["organizationsresult",{"_index":1730,"title":{},"body":{"injectables/Seed.html":{}}}],["organizationsresult['organizations",{"_index":1732,"title":{},"body":{"injectables/Seed.html":{}}}],["orm",{"_index":2278,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":2355,"title":{},"body":{"license.html":{}}}],["out",{"_index":2357,"title":{},"body":{"license.html":{}}}],["over",{"_index":153,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/Engine.html":{},"interfaces/IFlow.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["overview",{"_index":2360,"title":{"overview.html":{}},"body":{}}],["package",{"_index":2213,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":322,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/UserController.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":1618,"title":{},"body":{"classes/SMS.html":{}}}],["parameters.foreach((item",{"_index":1627,"title":{},"body":{"classes/SMS.html":{}}}],["params",{"_index":2074,"title":{},"body":{"classes/UserController.html":{}}}],["parent",{"_index":205,"title":{},"body":{"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Category.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/ServiceCategory.html":{}}}],["parent(@body",{"_index":346,"title":{},"body":{"classes/AuthorityController.html":{},"classes/OrganizationController.html":{}}}],["parent(dto",{"_index":309,"title":{},"body":{"classes/AuthorityController.html":{},"classes/OrganizationController.html":{}}}],["parent(payload",{"_index":371,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/OrganizationService.html":{}}}],["particular",{"_index":2343,"title":{},"body":{"license.html":{}}}],["passport",{"_index":1390,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportmodule",{"_index":614,"title":{},"body":{"modules/CommonModule.html":{}}}],["passportmodule.register",{"_index":659,"title":{},"body":{"modules/CommonModule.html":{}}}],["passportstrategy",{"_index":1391,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1393,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":1439,"title":{},"body":{"classes/LoginDto.html":{},"classes/PasswordDto.html":{},"classes/SMS.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["password_reset",{"_index":1613,"title":{},"body":{"classes/SMS.html":{},"miscellaneous/enumerations.html":{}}}],["passworddto",{"_index":1537,"title":{"classes/PasswordDto.html":{}},"body":{"classes/PasswordDto.html":{},"classes/UserController.html":{},"coverage.html":{}}}],["path",{"_index":283,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/ContextTrace.html":{},"classes/ExceptionsFilter.html":{},"classes/Logger.html":{},"classes/Organization.html":{},"injectables/Seed.html":{},"classes/ServiceCategory.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{}}}],["path.basename(filename",{"_index":958,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["path.extname(filename).length",{"_index":956,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["payload",{"_index":308,"title":{},"body":{"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"classes/FlowTemplateController.html":{},"injectables/FlowTemplateService.html":{},"injectables/JwtStrategy.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"classes/ServiceCategoryController.html":{},"injectables/ServiceCategoryService.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"classes/UserController.html":{},"injectables/UserService.html":{}}}],["payload.address",{"_index":2166,"title":{},"body":{"injectables/UserService.html":{}}}],["payload.category",{"_index":530,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/ContentService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["payload.create_at",{"_index":2127,"title":{},"body":{"injectables/UserService.html":{}}}],["payload.create_at.pop",{"_index":2131,"title":{},"body":{"injectables/UserService.html":{}}}],["payload.create_at.shift",{"_index":2130,"title":{},"body":{"injectables/UserService.html":{}}}],["payload.create_at.split",{"_index":2128,"title":{},"body":{"injectables/UserService.html":{}}}],["payload.fields.split",{"_index":2134,"title":{},"body":{"injectables/UserService.html":{}}}],["payload.idcard",{"_index":2164,"title":{},"body":{"injectables/UserService.html":{}}}],["payload.index",{"_index":1655,"title":{},"body":{"injectables/SearchService.html":{}}}],["payload.isexport",{"_index":529,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/ContentService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["payload.keyword",{"_index":523,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/RoleService.html":{},"injectables/SearchService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["payload.order",{"_index":526,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/RoleService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["payload.org",{"_index":2125,"title":{},"body":{"injectables/UserService.html":{}}}],["payload.page",{"_index":520,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/SearchService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["payload.pagesize",{"_index":521,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/RoleService.html":{},"injectables/SearchService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["payload.parentid",{"_index":398,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"injectables/OrganizationService.html":{},"injectables/ServiceCategoryService.html":{}}}],["payload.phone",{"_index":2162,"title":{},"body":{"injectables/UserService.html":{}}}],["payload.publish_at",{"_index":839,"title":{},"body":{"injectables/ContentService.html":{},"injectables/ServiceService.html":{}}}],["payload.publish_at.pop",{"_index":845,"title":{},"body":{"injectables/ContentService.html":{},"injectables/ServiceService.html":{}}}],["payload.publish_at.shift",{"_index":844,"title":{},"body":{"injectables/ContentService.html":{},"injectables/ServiceService.html":{}}}],["payload.publish_at.split",{"_index":840,"title":{},"body":{"injectables/ContentService.html":{},"injectables/ServiceService.html":{}}}],["payload.realname",{"_index":2160,"title":{},"body":{"injectables/UserService.html":{}}}],["payload.sort",{"_index":525,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/RoleService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["payload.type",{"_index":1656,"title":{},"body":{"injectables/SearchService.html":{}}}],["payload.value",{"_index":2155,"title":{},"body":{"injectables/UserService.html":{}}}],["permission",{"_index":2297,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2323,"title":{},"body":{"license.html":{}}}],["person",{"_index":2302,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2324,"title":{},"body":{"license.html":{}}}],["phone",{"_index":80,"title":{},"body":{"classes/ApplyVolunteerDto.html":{},"classes/SMS.html":{},"classes/User.html":{}}}],["phonenumber",{"_index":1620,"title":{},"body":{"classes/SMS.html":{}}}],["pid",{"_index":243,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Organization.html":{},"classes/ServiceCategory.html":{},"miscellaneous/variables.html":{}}}],["pidusage",{"_index":1891,"title":{},"body":{"classes/StatusTask.html":{}}}],["pidusage(process.pid",{"_index":1907,"title":{},"body":{"classes/StatusTask.html":{}}}],["plaintoclass",{"_index":272,"title":{},"body":{"classes/Authority.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["plaintoclass(authority",{"_index":289,"title":{},"body":{"classes/Authority.html":{}}}],["plaintoclass(carousel",{"_index":471,"title":{},"body":{"classes/Carousel.html":{}}}],["plaintoclass(category",{"_index":559,"title":{},"body":{"classes/Category.html":{}}}],["plaintoclass(content",{"_index":782,"title":{},"body":{"classes/Content.html":{}}}],["plaintoclass(flow",{"_index":1193,"title":{},"body":{"classes/Flow.html":{}}}],["plaintoclass(flowtemplate",{"_index":1272,"title":{},"body":{"classes/FlowTemplate.html":{}}}],["plaintoclass(notice",{"_index":1480,"title":{},"body":{"classes/Notice.html":{}}}],["plaintoclass(organization",{"_index":1496,"title":{},"body":{"classes/Organization.html":{}}}],["plaintoclass(role",{"_index":1571,"title":{},"body":{"classes/Role.html":{}}}],["plaintoclass(service",{"_index":1769,"title":{},"body":{"classes/Service.html":{}}}],["plaintoclass(servicecategory",{"_index":1786,"title":{},"body":{"classes/ServiceCategory.html":{}}}],["plaintoclass(setting",{"_index":1856,"title":{},"body":{"classes/Setting.html":{}}}],["plaintoclass(user",{"_index":2046,"title":{},"body":{"classes/User.html":{}}}],["pns",{"_index":1845,"title":{},"body":{"classes/Setting.html":{}}}],["points",{"_index":2005,"title":{},"body":{"classes/User.html":{},"miscellaneous/functions.html":{}}}],["pointsactiontype",{"_index":2115,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["pointsactiontype.add",{"_index":2153,"title":{},"body":{"injectables/UserService.html":{}}}],["pointsactiontype.sub",{"_index":2156,"title":{},"body":{"injectables/UserService.html":{}}}],["policy",{"_index":2437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":2371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":2333,"title":{},"body":{"license.html":{}}}],["position",{"_index":880,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["positionoutput",{"_index":893,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["post",{"_index":299,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/LoginController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{}}}],["post('apply",{"_index":2062,"title":{},"body":{"classes/UserController.html":{}}}],["post('dispatch",{"_index":1204,"title":{},"body":{"classes/FlowController.html":{}}}],["post()@apiconsumes('multipart/form",{"_index":1949,"title":{},"body":{"classes/StorageController.html":{}}}],["post()@usepipes(new",{"_index":1425,"title":{},"body":{"classes/LoginController.html":{}}}],["postcode",{"_index":1840,"title":{},"body":{"classes/Setting.html":{}}}],["postgres",{"_index":2411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgresql",{"_index":2264,"title":{},"body":{"index.html":{}}}],["ppid",{"_index":2428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":2244,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["primarygeneratedcolumn",{"_index":414,"title":{},"body":{"classes/Base.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":251,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["private",{"_index":386,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CarouselService.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"injectables/ContentService.html":{},"classes/Engine.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"interfaces/IFlow.html":{},"classes/IO.html":{},"injectables/ImportService.html":{},"classes/MQ.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/Seed.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["process.env.node_env",{"_index":1159,"title":{},"body":{"classes/ExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["process.env['sms_account",{"_index":1633,"title":{},"body":{"classes/SMS.html":{}}}],["process.env['sms_secret",{"_index":1634,"title":{},"body":{"classes/SMS.html":{}}}],["production",{"_index":1160,"title":{},"body":{"classes/ExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":730,"title":{},"body":{"classes/Content.html":{},"injectables/Seed.html":{}}}],["protected",{"_index":162,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/BaseFlow.html":{}}}],["provided",{"_index":2334,"title":{},"body":{"license.html":{}}}],["providers",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"overview.html":{}}}],["public",{"_index":853,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Engine.html":{},"interfaces/IFlow.html":{},"classes/Logger.html":{}}}],["publish",{"_index":2317,"title":{},"body":{"license.html":{}}}],["publish_at",{"_index":714,"title":{},"body":{"classes/Content.html":{},"classes/CreateContentDto.html":{},"classes/Service.html":{},"classes/UpdateContentDto.html":{},"miscellaneous/variables.html":{}}}],["purpose",{"_index":2344,"title":{},"body":{"license.html":{}}}],["pushstatus",{"_index":1883,"title":{},"body":{"classes/StatusTask.html":{}}}],["put",{"_index":316,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"classes/UserController.html":{}}}],["put('parent",{"_index":310,"title":{},"body":{"classes/AuthorityController.html":{},"classes/OrganizationController.html":{}}}],["put('password",{"_index":2090,"title":{},"body":{"classes/UserController.html":{}}}],["put('password')@usepipes(new",{"_index":2065,"title":{},"body":{"classes/UserController.html":{}}}],["putpolicy",{"_index":1545,"title":{},"body":{"classes/Qiniu.html":{}}}],["qb",{"_index":518,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/RoleService.html":{},"injectables/SearchService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["qb.addorderby('t.create_at",{"_index":1247,"title":{},"body":{"injectables/FlowService.html":{},"injectables/UserService.html":{}}}],["qb.addorderby('t.publish_at",{"_index":847,"title":{},"body":{"injectables/ContentService.html":{},"injectables/ServiceService.html":{}}}],["qb.addorderby('t.sort",{"_index":846,"title":{},"body":{"injectables/ContentService.html":{},"injectables/RoleService.html":{},"injectables/ServiceService.html":{}}}],["qb.addorderby('t.update_at",{"_index":528,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/FlowTemplateService.html":{}}}],["qb.addorderby(`t.${payload.sort",{"_index":527,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/RoleService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["qb.andwhere",{"_index":841,"title":{},"body":{"injectables/ContentService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["qb.andwhere('category.id",{"_index":837,"title":{},"body":{"injectables/ContentService.html":{},"injectables/ServiceService.html":{}}}],["qb.andwhere('organization.id",{"_index":2126,"title":{},"body":{"injectables/UserService.html":{}}}],["qb.andwhere('t.account",{"_index":2139,"title":{},"body":{"injectables/UserService.html":{}}}],["qb.andwhere('t.id",{"_index":2135,"title":{},"body":{"injectables/UserService.html":{}}}],["qb.andwhere(`t.name",{"_index":1246,"title":{},"body":{"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/RoleService.html":{}}}],["qb.andwhere(`t.nickname",{"_index":2124,"title":{},"body":{"injectables/UserService.html":{}}}],["qb.andwhere(`t.title",{"_index":838,"title":{},"body":{"injectables/ContentService.html":{},"injectables/ServiceService.html":{}}}],["qb.andwhere(`t.token",{"_index":524,"title":{},"body":{"injectables/CarouselService.html":{}}}],["qb.getmany",{"_index":531,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["qb.getmanyandcount",{"_index":534,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/RoleService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["qb.getone",{"_index":2137,"title":{},"body":{"injectables/UserService.html":{}}}],["qb.leftjoinandselect('role.authorities",{"_index":2136,"title":{},"body":{"injectables/UserService.html":{}}}],["qb.leftjoinandselect('t.authorities",{"_index":1604,"title":{},"body":{"injectables/RoleService.html":{}}}],["qb.leftjoinandselect('t.category",{"_index":836,"title":{},"body":{"injectables/ContentService.html":{},"injectables/ServiceService.html":{}}}],["qb.leftjoinandselect('t.flows",{"_index":2123,"title":{},"body":{"injectables/UserService.html":{}}}],["qb.leftjoinandselect('t.operator",{"_index":1245,"title":{},"body":{"injectables/FlowService.html":{}}}],["qb.leftjoinandselect('t.org",{"_index":2122,"title":{},"body":{"injectables/UserService.html":{}}}],["qb.leftjoinandselect('t.role",{"_index":2121,"title":{},"body":{"injectables/UserService.html":{}}}],["qb.leftjoinandselect('t.template",{"_index":1243,"title":{},"body":{"injectables/FlowService.html":{}}}],["qb.leftjoinandselect('t.user",{"_index":1244,"title":{},"body":{"injectables/FlowService.html":{}}}],["qb.query(new",{"_index":1651,"title":{},"body":{"injectables/SearchService.html":{}}}],["qb.size(payload.pagesize).from((payload.page",{"_index":1653,"title":{},"body":{"injectables/SearchService.html":{}}}],["qb.skip(payload.page",{"_index":532,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/RoleService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["qb.take(payload.pagesize",{"_index":533,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/RoleService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["qb.tojson",{"_index":1657,"title":{},"body":{"injectables/SearchService.html":{}}}],["qb.where('t.wfresult",{"_index":1248,"title":{},"body":{"injectables/FlowService.html":{}}}],["qiniu",{"_index":1542,"title":{"classes/Qiniu.html":{}},"body":{"classes/Qiniu.html":{},"classes/StorageController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["qiniu.auth.digest.mac(config.qiniu.accesskey",{"_index":1547,"title":{},"body":{"classes/Qiniu.html":{}}}],["qiniu.createuploadtoken",{"_index":1992,"title":{},"body":{"classes/StorageController.html":{}}}],["qiniu.putpolicy.uploadtoken(qiniu.mac",{"_index":1553,"title":{},"body":{"classes/Qiniu.html":{}}}],["qiniu.rs.putpolicy(config.qiniu.policy",{"_index":1550,"title":{},"body":{"classes/Qiniu.html":{}}}],["query",{"_index":321,"title":{},"body":{"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"classes/FlowTemplateController.html":{},"injectables/FlowTemplateService.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/ServiceCategoryController.html":{},"injectables/ServiceCategoryService.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/UserController.html":{},"injectables/UserService.html":{}}}],["query(payload",{"_index":373,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CarouselService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["queue",{"_index":1463,"title":{},"body":{"classes/MQ.html":{}}}],["rabbitmq",{"_index":2266,"title":{},"body":{"index.html":{}}}],["ratelimit",{"_index":2380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rbac",{"_index":2287,"title":{},"body":{"index.html":{}}}],["react",{"_index":2285,"title":{},"body":{"index.html":{}}}],["readfileasync",{"_index":2210,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["readonly",{"_index":77,"title":{},"body":{"classes/ApplyVolunteerDto.html":{},"injectables/ApplyVolunteerFlow.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/BaseFlow.html":{},"classes/BaseService.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"classes/FlowTemplateController.html":{},"injectables/FlowTemplateService.html":{},"classes/IO.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/SearchController.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/ServiceCategoryController.html":{},"injectables/ServiceCategoryService.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/UserController.html":{},"injectables/UserService.html":{}}}],["realname",{"_index":81,"title":{},"body":{"classes/ApplyVolunteerDto.html":{},"classes/User.html":{}}}],["reason",{"_index":1322,"title":{},"body":{"classes/IO.html":{}}}],["redis",{"_index":682,"title":{},"body":{"injectables/CommonService.html":{},"classes/StatusTask.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["redis.get('system_status",{"_index":1931,"title":{},"body":{"classes/StatusTask.html":{}}}],["redis.get(svg_hash",{"_index":707,"title":{},"body":{"injectables/CommonService.html":{}}}],["redis.set('system_status",{"_index":1940,"title":{},"body":{"classes/StatusTask.html":{}}}],["redis.set(svg_hash",{"_index":701,"title":{},"body":{"injectables/CommonService.html":{}}}],["register",{"_index":111,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/BaseFlow.html":{},"classes/Engine.html":{}}}],["register(template",{"_index":985,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["reject",{"_index":108,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["reject(flow",{"_index":126,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["relations",{"_index":190,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/ContentService.html":{},"classes/Engine.html":{},"injectables/FlowService.html":{},"interfaces/IFlow.html":{},"injectables/RoleService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["remove",{"_index":293,"title":{},"body":{"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/BaseService.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"classes/FlowTemplateController.html":{},"injectables/FlowTemplateService.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/ServiceCategoryController.html":{},"injectables/ServiceCategoryService.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"classes/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@query",{"_index":348,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/UserController.html":{}}}],["remove(ids",{"_index":379,"title":{},"body":{"injectables/AuthorityService.html":{},"classes/BaseService.html":{},"injectables/CarouselService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["remove(payload",{"_index":312,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/UserController.html":{}}}],["repository",{"_index":113,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/BaseFlow.html":{},"classes/BaseService.html":{},"injectables/CarouselService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/RoleService.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["req",{"_index":1953,"title":{},"body":{"classes/StorageController.html":{},"miscellaneous/functions.html":{}}}],["req.raw.body.action",{"_index":1971,"title":{},"body":{"classes/StorageController.html":{}}}],["req.raw.body.target",{"_index":1974,"title":{},"body":{"classes/StorageController.html":{}}}],["req.raw.files",{"_index":1968,"title":{},"body":{"classes/StorageController.html":{}}}],["request",{"_index":1142,"title":{},"body":{"classes/ExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["request.headers.xhr",{"_index":1161,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["request.raw",{"_index":1164,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["request.raw.method",{"_index":1150,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["request.raw.url",{"_index":1151,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["request.url",{"_index":1158,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["request.user",{"_index":2446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user[param",{"_index":2447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1951,"title":{},"body":{"classes/StorageController.html":{}}}],["res",{"_index":1021,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"classes/StorageController.html":{},"miscellaneous/functions.html":{}}}],["res.render",{"_index":1381,"title":{},"body":{"controllers/IndexController.html":{}}}],["res.send",{"_index":1985,"title":{},"body":{"classes/StorageController.html":{}}}],["res.send(await",{"_index":1977,"title":{},"body":{"classes/StorageController.html":{}}}],["res['organizations",{"_index":1364,"title":{},"body":{"injectables/ImportService.html":{}}}],["res[0",{"_index":1027,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["res[1",{"_index":1028,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["resolve",{"_index":1673,"title":{},"body":{"injectables/Seed.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{}}}],["resolve('./**/*.entity.ts",{"_index":2420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolve('./seeds/authorities.xlsx",{"_index":1733,"title":{},"body":{"injectables/Seed.html":{}}}],["resolve('./seeds/categorys.xlsx",{"_index":1717,"title":{},"body":{"injectables/Seed.html":{}}}],["resolve('./seeds/organizations.xlsx",{"_index":1731,"title":{},"body":{"injectables/Seed.html":{}}}],["resolve('./seeds/roles.xlsx",{"_index":1742,"title":{},"body":{"injectables/Seed.html":{}}}],["resolve('./seeds/service",{"_index":1726,"title":{},"body":{"injectables/Seed.html":{}}}],["resolve('./seeds/settings.xlsx",{"_index":1690,"title":{},"body":{"injectables/Seed.html":{}}}],["resolve('./static",{"_index":1912,"title":{},"body":{"classes/StatusTask.html":{}}}],["resolve(config.static.root)}${config.static.uploadpath}/${path",{"_index":1981,"title":{},"body":{"classes/StorageController.html":{}}}],["response",{"_index":1140,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["response.code(httpstatus.internal_server_error).send(html",{"_index":1174,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["response.type('text/html",{"_index":1173,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["restriction",{"_index":2310,"title":{},"body":{"license.html":{}}}],["result",{"_index":54,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/ApplyVolunteerDto.html":{},"injectables/ApplyVolunteerFlow.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseFlow.html":{},"classes/BaseService.html":{},"classes/Carousel.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/Engine.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"classes/Flow.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"classes/FlowTemplateController.html":{},"injectables/FlowTemplateService.html":{},"interfaces/IFlow.html":{},"classes/IO.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/MQ.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Qiniu.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/SMS.html":{},"modules/SSRModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/ServiceCategoryController.html":{},"injectables/ServiceCategoryService.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"injectables/WorkOrderFlow.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result['authorities",{"_index":1735,"title":{},"body":{"injectables/Seed.html":{}}}],["return",{"_index":182,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseFlow.html":{},"classes/BaseService.html":{},"classes/Carousel.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/Engine.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"classes/Flow.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"classes/FlowTemplateController.html":{},"injectables/FlowTemplateService.html":{},"interfaces/IFlow.html":{},"classes/IO.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/MQ.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/Qiniu.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/SMS.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/ServiceCategoryController.html":{},"injectables/ServiceCategoryService.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"injectables/WorkOrderFlow.html":{},"miscellaneous/variables.html":{}}}],["returnbody",{"_index":2441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rights",{"_index":2313,"title":{},"body":{"license.html":{}}}],["role",{"_index":157,"title":{"classes/Role.html":{}},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/Authority.html":{},"injectables/AuthorityService.html":{},"modules/CommonModule.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"injectables/Seed.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["role.authorities",{"_index":286,"title":{},"body":{"classes/Authority.html":{}}}],["role.create(payload",{"_index":1605,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.entity",{"_index":2038,"title":{},"body":{"classes/User.html":{}}}],["role.sheetsmap",{"_index":1743,"title":{},"body":{"injectables/Seed.html":{}}}],["role.users",{"_index":2044,"title":{},"body":{"classes/User.html":{}}}],["roleadmin",{"_index":1697,"title":{},"body":{"injectables/Seed.html":{}}}],["rolecontroller",{"_index":31,"title":{"classes/RoleController.html":{}},"body":{"modules/ApiModule.html":{},"classes/RoleController.html":{},"coverage.html":{}}}],["roleid",{"_index":366,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["rolerepos",{"_index":129,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["rolerepos.findone",{"_index":184,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["rolerepository",{"_index":1595,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["roles",{"_index":206,"title":{},"body":{"classes/Authority.html":{},"injectables/AuthorityService.html":{},"classes/Role.html":{},"injectables/Seed.html":{}}}],["rolesarr",{"_index":1745,"title":{},"body":{"injectables/Seed.html":{}}}],["rolesarr.push(role.create(item",{"_index":1746,"title":{},"body":{"injectables/Seed.html":{}}}],["roleservice",{"_index":604,"title":{"injectables/RoleService.html":{}},"body":{"modules/CommonModule.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["rolesresult",{"_index":1741,"title":{},"body":{"injectables/Seed.html":{}}}],["rolesresult['roles",{"_index":1744,"title":{},"body":{"injectables/Seed.html":{}}}],["root",{"_index":2390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roots",{"_index":403,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/OrganizationService.html":{}}}],["roots.foreach((root",{"_index":1534,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["roots.foreach(root",{"_index":405,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["row",{"_index":1110,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["row.getcell(1",{"_index":1077,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["row.getcell(2).value",{"_index":1083,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["row:${rownumber",{"_index":1081,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["row[headerkey",{"_index":1121,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["row[key",{"_index":1119,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["row_status",{"_index":211,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["rownumber",{"_index":1075,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["rowrepos",{"_index":2111,"title":{},"body":{"injectables/UserService.html":{}}}],["rowrepos.findone",{"_index":2151,"title":{},"body":{"injectables/UserService.html":{}}}],["rows",{"_index":1108,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["rowsmap",{"_index":1071,"title":{},"body":{"classes/ExcelHelper.html":{},"classes/Setting.html":{}}}],["rowsmap[cellkey.value.tostring",{"_index":1079,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["rowsmap[item",{"_index":1105,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["rowsmap[item].key",{"_index":1106,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["rowsmap[key].handler",{"_index":1114,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["rowsmap[key].key",{"_index":1117,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["rowstatus",{"_index":253,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["rowstatus.normal",{"_index":421,"title":{},"body":{"classes/Base.html":{}}}],["roy",{"_index":2295,"title":{},"body":{"license.html":{}}}],["running",{"_index":995,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{},"miscellaneous/enumerations.html":{}}}],["salt",{"_index":2050,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["save",{"_index":355,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CarouselService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["save(payload",{"_index":375,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CarouselService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["schedule",{"_index":621,"title":{},"body":{"modules/CommonModule.html":{},"classes/StatusTask.html":{}}}],["schedulemodule",{"_index":619,"title":{},"body":{"modules/CommonModule.html":{}}}],["schedulemodule.register",{"_index":658,"title":{},"body":{"modules/CommonModule.html":{}}}],["schema",{"_index":2421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema:sync",{"_index":2280,"title":{},"body":{"index.html":{}}}],["scope",{"_index":2438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":1170,"title":{},"body":{"classes/ExceptionsFilter.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{}}}],["search(@body",{"_index":1645,"title":{},"body":{"classes/SearchController.html":{}}}],["search(payload",{"_index":1640,"title":{},"body":{"classes/SearchController.html":{},"injectables/SearchService.html":{}}}],["search_analyzer",{"_index":733,"title":{},"body":{"classes/Content.html":{},"injectables/Seed.html":{}}}],["searchcontroller",{"_index":35,"title":{"classes/SearchController.html":{}},"body":{"modules/ApiModule.html":{},"classes/SearchController.html":{},"coverage.html":{}}}],["searchservice",{"_index":605,"title":{"injectables/SearchService.html":{}},"body":{"modules/CommonModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"coverage.html":{},"overview.html":{}}}],["second",{"_index":1897,"title":{},"body":{"classes/StatusTask.html":{}}}],["secret",{"_index":2404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretkey",{"_index":2394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":1396,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secretorprivatekey",{"_index":2393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secure",{"_index":2410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seed",{"_index":68,"title":{"injectables/Seed.html":{}},"body":{"modules/AppModule.html":{},"injectables/Seed.html":{},"coverage.html":{},"overview.html":{}}}],["sell",{"_index":2321,"title":{},"body":{"license.html":{}}}],["send",{"_index":1157,"title":{},"body":{"classes/ExceptionsFilter.html":{},"classes/SMS.html":{}}}],["sendmessage",{"_index":1610,"title":{},"body":{"classes/SMS.html":{}}}],["sendmessage(phonenumber",{"_index":1616,"title":{},"body":{"classes/SMS.html":{}}}],["seo",{"_index":1846,"title":{},"body":{"classes/Setting.html":{}}}],["server",{"_index":1303,"title":{},"body":{"classes/IO.html":{},"classes/StatusTask.html":{}}}],["server/.../content.entity.ts",{"_index":2364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../decorator.ts",{"_index":2239,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["server/.../enum.ts",{"_index":2217,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server/.../es.ts",{"_index":2367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../excel.ts",{"_index":2216,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server/.../helper.ts",{"_index":2241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["server/.../index.ts",{"_index":2366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../influx.ts",{"_index":2368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../io.ts",{"_index":2369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../logger.ts",{"_index":2218,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["server/.../main.ts",{"_index":2240,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["server/.../middlewares.ts",{"_index":2242,"title":{},"body":{"miscellaneous/functions.html":{}}}],["server/.../mq.ts",{"_index":2219,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["server/.../redis.ts",{"_index":2370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../service.entity.ts",{"_index":2365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../sms.ts",{"_index":2220,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server/.../wf.ts",{"_index":2221,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["server/database",{"_index":2274,"title":{},"body":{"index.html":{}}}],["server/package.json",{"_index":2273,"title":{},"body":{"index.html":{}}}],["server/src/api/api.module.ts",{"_index":5,"title":{},"body":{"modules/ApiModule.html":{}}}],["server/src/api/api.module.ts:39",{"_index":9,"title":{},"body":{"modules/ApiModule.html":{}}}],["server/src/api/controllers/authority.controller.ts",{"_index":290,"title":{},"body":{"classes/AuthorityController.html":{},"coverage.html":{}}}],["server/src/api/controllers/authority.controller.ts:24",{"_index":297,"title":{},"body":{"classes/AuthorityController.html":{}}}],["server/src/api/controllers/authority.controller.ts:28",{"_index":304,"title":{},"body":{"classes/AuthorityController.html":{}}}],["server/src/api/controllers/authority.controller.ts:35",{"_index":307,"title":{},"body":{"classes/AuthorityController.html":{}}}],["server/src/api/controllers/authority.controller.ts:40",{"_index":300,"title":{},"body":{"classes/AuthorityController.html":{}}}],["server/src/api/controllers/authority.controller.ts:45",{"_index":317,"title":{},"body":{"classes/AuthorityController.html":{}}}],["server/src/api/controllers/authority.controller.ts:50",{"_index":311,"title":{},"body":{"classes/AuthorityController.html":{}}}],["server/src/api/controllers/authority.controller.ts:55",{"_index":314,"title":{},"body":{"classes/AuthorityController.html":{}}}],["server/src/api/controllers/carousel.controller.ts",{"_index":477,"title":{},"body":{"classes/CarouselController.html":{},"coverage.html":{}}}],["server/src/api/controllers/carousel.controller.ts:24",{"_index":481,"title":{},"body":{"classes/CarouselController.html":{}}}],["server/src/api/controllers/carousel.controller.ts:28",{"_index":490,"title":{},"body":{"classes/CarouselController.html":{}}}],["server/src/api/controllers/carousel.controller.ts:35",{"_index":486,"title":{},"body":{"classes/CarouselController.html":{}}}],["server/src/api/controllers/carousel.controller.ts:40",{"_index":491,"title":{},"body":{"classes/CarouselController.html":{}}}],["server/src/api/controllers/carousel.controller.ts:45",{"_index":489,"title":{},"body":{"classes/CarouselController.html":{}}}],["server/src/api/controllers/carousel.controller.ts:50",{"_index":483,"title":{},"body":{"classes/CarouselController.html":{}}}],["server/src/api/controllers/carousel.controller.ts:55",{"_index":493,"title":{},"body":{"classes/CarouselController.html":{}}}],["server/src/api/controllers/carousel.controller.ts:60",{"_index":492,"title":{},"body":{"classes/CarouselController.html":{}}}],["server/src/api/controllers/category.controller.ts",{"_index":560,"title":{},"body":{"classes/CategoryController.html":{},"coverage.html":{}}}],["server/src/api/controllers/category.controller.ts:24",{"_index":563,"title":{},"body":{"classes/CategoryController.html":{}}}],["server/src/api/controllers/category.controller.ts:28",{"_index":565,"title":{},"body":{"classes/CategoryController.html":{}}}],["server/src/api/controllers/category.controller.ts:35",{"_index":566,"title":{},"body":{"classes/CategoryController.html":{}}}],["server/src/api/controllers/category.controller.ts:45",{"_index":564,"title":{},"body":{"classes/CategoryController.html":{}}}],["server/src/api/controllers/category.controller.ts:50",{"_index":568,"title":{},"body":{"classes/CategoryController.html":{}}}],["server/src/api/controllers/category.controller.ts:55",{"_index":567,"title":{},"body":{"classes/CategoryController.html":{}}}],["server/src/api/controllers/content.controller.ts",{"_index":810,"title":{},"body":{"classes/ContentController.html":{},"coverage.html":{}}}],["server/src/api/controllers/content.controller.ts:24",{"_index":812,"title":{},"body":{"classes/ContentController.html":{}}}],["server/src/api/controllers/content.controller.ts:28",{"_index":815,"title":{},"body":{"classes/ContentController.html":{}}}],["server/src/api/controllers/content.controller.ts:35",{"_index":816,"title":{},"body":{"classes/ContentController.html":{}}}],["server/src/api/controllers/content.controller.ts:40",{"_index":814,"title":{},"body":{"classes/ContentController.html":{}}}],["server/src/api/controllers/content.controller.ts:45",{"_index":813,"title":{},"body":{"classes/ContentController.html":{}}}],["server/src/api/controllers/content.controller.ts:50",{"_index":818,"title":{},"body":{"classes/ContentController.html":{}}}],["server/src/api/controllers/content.controller.ts:55",{"_index":817,"title":{},"body":{"classes/ContentController.html":{}}}],["server/src/api/controllers/flow",{"_index":1273,"title":{},"body":{"classes/FlowTemplateController.html":{},"coverage.html":{}}}],["server/src/api/controllers/flow.controller.ts",{"_index":1199,"title":{},"body":{"classes/FlowController.html":{},"coverage.html":{}}}],["server/src/api/controllers/flow.controller.ts:24",{"_index":1201,"title":{},"body":{"classes/FlowController.html":{}}}],["server/src/api/controllers/flow.controller.ts:28",{"_index":1207,"title":{},"body":{"classes/FlowController.html":{}}}],["server/src/api/controllers/flow.controller.ts:35",{"_index":1208,"title":{},"body":{"classes/FlowController.html":{}}}],["server/src/api/controllers/flow.controller.ts:40",{"_index":1205,"title":{},"body":{"classes/FlowController.html":{}}}],["server/src/api/controllers/flow.controller.ts:45",{"_index":1206,"title":{},"body":{"classes/FlowController.html":{}}}],["server/src/api/controllers/flow.controller.ts:50",{"_index":1202,"title":{},"body":{"classes/FlowController.html":{}}}],["server/src/api/controllers/flow.controller.ts:55",{"_index":1210,"title":{},"body":{"classes/FlowController.html":{}}}],["server/src/api/controllers/flow.controller.ts:60",{"_index":1209,"title":{},"body":{"classes/FlowController.html":{}}}],["server/src/api/controllers/login.controller.ts",{"_index":1420,"title":{},"body":{"classes/LoginController.html":{},"coverage.html":{}}}],["server/src/api/controllers/login.controller.ts:14",{"_index":1427,"title":{},"body":{"classes/LoginController.html":{}}}],["server/src/api/controllers/login.controller.ts:9",{"_index":1422,"title":{},"body":{"classes/LoginController.html":{}}}],["server/src/api/controllers/organization.controller.ts",{"_index":1497,"title":{},"body":{"classes/OrganizationController.html":{},"coverage.html":{}}}],["server/src/api/controllers/organization.controller.ts:24",{"_index":1499,"title":{},"body":{"classes/OrganizationController.html":{}}}],["server/src/api/controllers/organization.controller.ts:28",{"_index":1501,"title":{},"body":{"classes/OrganizationController.html":{}}}],["server/src/api/controllers/organization.controller.ts:35",{"_index":1502,"title":{},"body":{"classes/OrganizationController.html":{}}}],["server/src/api/controllers/organization.controller.ts:40",{"_index":1500,"title":{},"body":{"classes/OrganizationController.html":{}}}],["server/src/api/controllers/organization.controller.ts:45",{"_index":1505,"title":{},"body":{"classes/OrganizationController.html":{}}}],["server/src/api/controllers/organization.controller.ts:50",{"_index":1503,"title":{},"body":{"classes/OrganizationController.html":{}}}],["server/src/api/controllers/organization.controller.ts:55",{"_index":1504,"title":{},"body":{"classes/OrganizationController.html":{}}}],["server/src/api/controllers/role.controller.ts",{"_index":1575,"title":{},"body":{"classes/RoleController.html":{},"coverage.html":{}}}],["server/src/api/controllers/role.controller.ts:24",{"_index":1577,"title":{},"body":{"classes/RoleController.html":{}}}],["server/src/api/controllers/role.controller.ts:28",{"_index":1580,"title":{},"body":{"classes/RoleController.html":{}}}],["server/src/api/controllers/role.controller.ts:35",{"_index":1581,"title":{},"body":{"classes/RoleController.html":{}}}],["server/src/api/controllers/role.controller.ts:40",{"_index":1579,"title":{},"body":{"classes/RoleController.html":{}}}],["server/src/api/controllers/role.controller.ts:45",{"_index":1578,"title":{},"body":{"classes/RoleController.html":{}}}],["server/src/api/controllers/role.controller.ts:50",{"_index":1583,"title":{},"body":{"classes/RoleController.html":{}}}],["server/src/api/controllers/role.controller.ts:55",{"_index":1582,"title":{},"body":{"classes/RoleController.html":{}}}],["server/src/api/controllers/search.controller.ts",{"_index":1637,"title":{},"body":{"classes/SearchController.html":{},"coverage.html":{}}}],["server/src/api/controllers/search.controller.ts:11",{"_index":1639,"title":{},"body":{"classes/SearchController.html":{}}}],["server/src/api/controllers/search.controller.ts:15",{"_index":1641,"title":{},"body":{"classes/SearchController.html":{}}}],["server/src/api/controllers/service",{"_index":1787,"title":{},"body":{"classes/ServiceCategoryController.html":{},"coverage.html":{}}}],["server/src/api/controllers/service.controller.ts",{"_index":1807,"title":{},"body":{"classes/ServiceController.html":{},"coverage.html":{}}}],["server/src/api/controllers/service.controller.ts:24",{"_index":1809,"title":{},"body":{"classes/ServiceController.html":{}}}],["server/src/api/controllers/service.controller.ts:28",{"_index":1812,"title":{},"body":{"classes/ServiceController.html":{}}}],["server/src/api/controllers/service.controller.ts:35",{"_index":1813,"title":{},"body":{"classes/ServiceController.html":{}}}],["server/src/api/controllers/service.controller.ts:40",{"_index":1811,"title":{},"body":{"classes/ServiceController.html":{}}}],["server/src/api/controllers/service.controller.ts:45",{"_index":1810,"title":{},"body":{"classes/ServiceController.html":{}}}],["server/src/api/controllers/service.controller.ts:50",{"_index":1815,"title":{},"body":{"classes/ServiceController.html":{}}}],["server/src/api/controllers/service.controller.ts:55",{"_index":1814,"title":{},"body":{"classes/ServiceController.html":{}}}],["server/src/api/controllers/setting.controller.ts",{"_index":1860,"title":{},"body":{"classes/SettingController.html":{},"coverage.html":{}}}],["server/src/api/controllers/setting.controller.ts:13",{"_index":1861,"title":{},"body":{"classes/SettingController.html":{}}}],["server/src/api/controllers/setting.controller.ts:17",{"_index":1862,"title":{},"body":{"classes/SettingController.html":{}}}],["server/src/api/controllers/setting.controller.ts:22",{"_index":1863,"title":{},"body":{"classes/SettingController.html":{}}}],["server/src/api/controllers/storage.controller.ts",{"_index":1943,"title":{},"body":{"classes/StorageController.html":{},"coverage.html":{}}}],["server/src/api/controllers/storage.controller.ts:18",{"_index":1947,"title":{},"body":{"classes/StorageController.html":{}}}],["server/src/api/controllers/storage.controller.ts:24",{"_index":1952,"title":{},"body":{"classes/StorageController.html":{}}}],["server/src/api/controllers/storage.controller.ts:73",{"_index":1955,"title":{},"body":{"classes/StorageController.html":{}}}],["server/src/api/controllers/user.controller.ts",{"_index":2057,"title":{},"body":{"classes/UserController.html":{},"coverage.html":{}}}],["server/src/api/controllers/user.controller.ts:25",{"_index":2060,"title":{},"body":{"classes/UserController.html":{}}}],["server/src/api/controllers/user.controller.ts:30",{"_index":2073,"title":{},"body":{"classes/UserController.html":{}}}],["server/src/api/controllers/user.controller.ts:35",{"_index":2075,"title":{},"body":{"classes/UserController.html":{}}}],["server/src/api/controllers/user.controller.ts:41",{"_index":2070,"title":{},"body":{"classes/UserController.html":{}}}],["server/src/api/controllers/user.controller.ts:46",{"_index":2063,"title":{},"body":{"classes/UserController.html":{}}}],["server/src/api/controllers/user.controller.ts:52",{"_index":2066,"title":{},"body":{"classes/UserController.html":{}}}],["server/src/api/controllers/user.controller.ts:57",{"_index":2067,"title":{},"body":{"classes/UserController.html":{}}}],["server/src/api/controllers/user.controller.ts:62",{"_index":2077,"title":{},"body":{"classes/UserController.html":{}}}],["server/src/api/controllers/user.controller.ts:67",{"_index":2076,"title":{},"body":{"classes/UserController.html":{}}}],["server/src/app.module.ts",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["server/src/common/aspects/decorator.ts",{"_index":2183,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["server/src/common/aspects/enum.ts",{"_index":2222,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server/src/common/aspects/exceptions.filter.ts",{"_index":1127,"title":{},"body":{"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["server/src/common/aspects/exceptions.filter.ts:8",{"_index":1133,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["server/src/common/aspects/middlewares.ts",{"_index":2188,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["server/src/common/common.module.ts",{"_index":612,"title":{},"body":{"modules/CommonModule.html":{}}}],["server/src/common/dtos/apply",{"_index":75,"title":{},"body":{"classes/ApplyVolunteerDto.html":{},"coverage.html":{}}}],["server/src/common/dtos/content.dto.ts",{"_index":964,"title":{},"body":{"classes/CreateContentDto.html":{},"classes/UpdateContentDto.html":{},"coverage.html":{}}}],["server/src/common/dtos/content.dto.ts:11",{"_index":1993,"title":{},"body":{"classes/UpdateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:13",{"_index":1995,"title":{},"body":{"classes/UpdateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:15",{"_index":1998,"title":{},"body":{"classes/UpdateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:17",{"_index":1996,"title":{},"body":{"classes/UpdateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:19",{"_index":1997,"title":{},"body":{"classes/UpdateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:21",{"_index":2000,"title":{},"body":{"classes/UpdateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:27",{"_index":1994,"title":{},"body":{"classes/UpdateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:35",{"_index":971,"title":{},"body":{"classes/CreateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:37",{"_index":965,"title":{},"body":{"classes/CreateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:39",{"_index":967,"title":{},"body":{"classes/CreateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:41",{"_index":970,"title":{},"body":{"classes/CreateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:43",{"_index":968,"title":{},"body":{"classes/CreateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:45",{"_index":969,"title":{},"body":{"classes/CreateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:47",{"_index":972,"title":{},"body":{"classes/CreateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:53",{"_index":966,"title":{},"body":{"classes/CreateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:9",{"_index":1999,"title":{},"body":{"classes/UpdateContentDto.html":{}}}],["server/src/common/dtos/login.dto.ts",{"_index":1437,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["server/src/common/dtos/login.dto.ts:12",{"_index":1440,"title":{},"body":{"classes/LoginDto.html":{}}}],["server/src/common/dtos/login.dto.ts:24",{"_index":1444,"title":{},"body":{"classes/LoginDto.html":{}}}],["server/src/common/dtos/password.dto.ts",{"_index":1538,"title":{},"body":{"classes/PasswordDto.html":{},"coverage.html":{}}}],["server/src/common/dtos/password.dto.ts:16",{"_index":1540,"title":{},"body":{"classes/PasswordDto.html":{}}}],["server/src/common/dtos/password.dto.ts:28",{"_index":1541,"title":{},"body":{"classes/PasswordDto.html":{}}}],["server/src/common/entities/authority.entity.ts",{"_index":199,"title":{},"body":{"classes/Authority.html":{},"coverage.html":{}}}],["server/src/common/entities/authority.entity.ts:14",{"_index":232,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:20",{"_index":248,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:23",{"_index":223,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:26",{"_index":247,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:29",{"_index":229,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:31",{"_index":220,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:33",{"_index":234,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:36",{"_index":236,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:39",{"_index":265,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:44",{"_index":267,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:49",{"_index":269,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:54",{"_index":271,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:58",{"_index":244,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:73",{"_index":260,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/base.ts",{"_index":408,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["server/src/common/entities/base.ts:16",{"_index":411,"title":{},"body":{"classes/Base.html":{}}}],["server/src/common/entities/base.ts:21",{"_index":409,"title":{},"body":{"classes/Base.html":{}}}],["server/src/common/entities/base.ts:26",{"_index":412,"title":{},"body":{"classes/Base.html":{}}}],["server/src/common/entities/base.ts:28",{"_index":413,"title":{},"body":{"classes/Base.html":{}}}],["server/src/common/entities/base.ts:7",{"_index":410,"title":{},"body":{"classes/Base.html":{}}}],["server/src/common/entities/carousel.entity.ts",{"_index":464,"title":{},"body":{"classes/Carousel.html":{},"coverage.html":{}}}],["server/src/common/entities/carousel.entity.ts:12",{"_index":466,"title":{},"body":{"classes/Carousel.html":{}}}],["server/src/common/entities/carousel.entity.ts:14",{"_index":468,"title":{},"body":{"classes/Carousel.html":{}}}],["server/src/common/entities/carousel.entity.ts:19",{"_index":470,"title":{},"body":{"classes/Carousel.html":{}}}],["server/src/common/entities/carousel.entity.ts:9",{"_index":467,"title":{},"body":{"classes/Carousel.html":{}}}],["server/src/common/entities/category.entity.ts",{"_index":539,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["server/src/common/entities/category.entity.ts:11",{"_index":546,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/category.entity.ts:14",{"_index":550,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/category.entity.ts:17",{"_index":545,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/category.entity.ts:20",{"_index":544,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/category.entity.ts:22",{"_index":541,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/category.entity.ts:24",{"_index":547,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/category.entity.ts:27",{"_index":552,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/category.entity.ts:32",{"_index":553,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/category.entity.ts:37",{"_index":554,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/category.entity.ts:41",{"_index":549,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/category.entity.ts:49",{"_index":551,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/content.entity.ts",{"_index":711,"title":{},"body":{"classes/Content.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/src/common/entities/content.entity.ts:201",{"_index":735,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:250",{"_index":763,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:255",{"_index":765,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:260",{"_index":767,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:265",{"_index":761,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:274",{"_index":762,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:37",{"_index":757,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:40",{"_index":724,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:43",{"_index":753,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:46",{"_index":723,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:49",{"_index":752,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:52",{"_index":756,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:55",{"_index":758,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:58",{"_index":754,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:61",{"_index":755,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:64",{"_index":760,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:67",{"_index":736,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:74",{"_index":738,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:77",{"_index":726,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:79",{"_index":751,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/flow",{"_index":1262,"title":{},"body":{"classes/FlowTemplate.html":{},"coverage.html":{}}}],["server/src/common/entities/flow.entity.ts",{"_index":1176,"title":{},"body":{"classes/Flow.html":{},"coverage.html":{}}}],["server/src/common/entities/flow.entity.ts:13",{"_index":1179,"title":{},"body":{"classes/Flow.html":{}}}],["server/src/common/entities/flow.entity.ts:18",{"_index":1183,"title":{},"body":{"classes/Flow.html":{}}}],["server/src/common/entities/flow.entity.ts:23",{"_index":1182,"title":{},"body":{"classes/Flow.html":{}}}],["server/src/common/entities/flow.entity.ts:26",{"_index":1177,"title":{},"body":{"classes/Flow.html":{}}}],["server/src/common/entities/flow.entity.ts:29",{"_index":1180,"title":{},"body":{"classes/Flow.html":{}}}],["server/src/common/entities/flow.entity.ts:32",{"_index":1181,"title":{},"body":{"classes/Flow.html":{}}}],["server/src/common/entities/flow.entity.ts:35",{"_index":1178,"title":{},"body":{"classes/Flow.html":{}}}],["server/src/common/entities/flow.entity.ts:37",{"_index":1184,"title":{},"body":{"classes/Flow.html":{}}}],["server/src/common/entities/flow.entity.ts:42",{"_index":1186,"title":{},"body":{"classes/Flow.html":{}}}],["server/src/common/entities/flow.entity.ts:48",{"_index":1188,"title":{},"body":{"classes/Flow.html":{}}}],["server/src/common/entities/notice.entity.ts",{"_index":1471,"title":{},"body":{"classes/Notice.html":{},"coverage.html":{}}}],["server/src/common/entities/notice.entity.ts:11",{"_index":1475,"title":{},"body":{"classes/Notice.html":{}}}],["server/src/common/entities/notice.entity.ts:17",{"_index":1473,"title":{},"body":{"classes/Notice.html":{}}}],["server/src/common/entities/notice.entity.ts:23",{"_index":1477,"title":{},"body":{"classes/Notice.html":{}}}],["server/src/common/entities/notice.entity.ts:26",{"_index":1474,"title":{},"body":{"classes/Notice.html":{}}}],["server/src/common/entities/notice.entity.ts:28",{"_index":1478,"title":{},"body":{"classes/Notice.html":{}}}],["server/src/common/entities/organization.entity.ts",{"_index":1481,"title":{},"body":{"classes/Organization.html":{},"coverage.html":{}}}],["server/src/common/entities/organization.entity.ts:13",{"_index":1486,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:16",{"_index":1484,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:19",{"_index":1489,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:22",{"_index":1485,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:24",{"_index":1483,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:26",{"_index":1487,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:29",{"_index":1490,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:32",{"_index":1492,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:37",{"_index":1493,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:42",{"_index":1494,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:46",{"_index":1488,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:54",{"_index":1491,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/role.entity.ts",{"_index":1554,"title":{},"body":{"classes/Role.html":{},"coverage.html":{}}}],["server/src/common/entities/role.entity.ts:14",{"_index":1560,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/role.entity.ts:20",{"_index":1563,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/role.entity.ts:23",{"_index":1558,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/role.entity.ts:26",{"_index":1562,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/role.entity.ts:29",{"_index":1559,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/role.entity.ts:33",{"_index":1557,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/role.entity.ts:36",{"_index":1564,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/role.entity.ts:38",{"_index":1561,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/role.entity.ts:46",{"_index":1565,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/role.entity.ts:51",{"_index":1567,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/service",{"_index":1770,"title":{},"body":{"classes/ServiceCategory.html":{},"coverage.html":{}}}],["server/src/common/entities/service.entity.ts",{"_index":1748,"title":{},"body":{"classes/Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/src/common/entities/service.entity.ts:26",{"_index":1760,"title":{},"body":{"classes/Service.html":{}}}],["server/src/common/entities/service.entity.ts:29",{"_index":1750,"title":{},"body":{"classes/Service.html":{}}}],["server/src/common/entities/service.entity.ts:32",{"_index":1756,"title":{},"body":{"classes/Service.html":{}}}],["server/src/common/entities/service.entity.ts:35",{"_index":1749,"title":{},"body":{"classes/Service.html":{}}}],["server/src/common/entities/service.entity.ts:38",{"_index":1755,"title":{},"body":{"classes/Service.html":{}}}],["server/src/common/entities/service.entity.ts:41",{"_index":1759,"title":{},"body":{"classes/Service.html":{}}}],["server/src/common/entities/service.entity.ts:44",{"_index":1761,"title":{},"body":{"classes/Service.html":{}}}],["server/src/common/entities/service.entity.ts:47",{"_index":1757,"title":{},"body":{"classes/Service.html":{}}}],["server/src/common/entities/service.entity.ts:50",{"_index":1758,"title":{},"body":{"classes/Service.html":{}}}],["server/src/common/entities/service.entity.ts:53",{"_index":1762,"title":{},"body":{"classes/Service.html":{}}}],["server/src/common/entities/service.entity.ts:56",{"_index":1752,"title":{},"body":{"classes/Service.html":{}}}],["server/src/common/entities/service.entity.ts:63",{"_index":1753,"title":{},"body":{"classes/Service.html":{}}}],["server/src/common/entities/service.entity.ts:66",{"_index":1751,"title":{},"body":{"classes/Service.html":{}}}],["server/src/common/entities/service.entity.ts:68",{"_index":1754,"title":{},"body":{"classes/Service.html":{}}}],["server/src/common/entities/service.entity.ts:75",{"_index":1765,"title":{},"body":{"classes/Service.html":{}}}],["server/src/common/entities/service.entity.ts:80",{"_index":1766,"title":{},"body":{"classes/Service.html":{}}}],["server/src/common/entities/service.entity.ts:85",{"_index":1767,"title":{},"body":{"classes/Service.html":{}}}],["server/src/common/entities/service.entity.ts:90",{"_index":1763,"title":{},"body":{"classes/Service.html":{}}}],["server/src/common/entities/service.entity.ts:99",{"_index":1764,"title":{},"body":{"classes/Service.html":{}}}],["server/src/common/entities/setting.entity.ts",{"_index":1836,"title":{},"body":{"classes/Setting.html":{},"coverage.html":{}}}],["server/src/common/entities/setting.entity.ts:12",{"_index":1839,"title":{},"body":{"classes/Setting.html":{}}}],["server/src/common/entities/setting.entity.ts:14",{"_index":1849,"title":{},"body":{"classes/Setting.html":{}}}],["server/src/common/entities/setting.entity.ts:42",{"_index":1851,"title":{},"body":{"classes/Setting.html":{}}}],["server/src/common/entities/setting.entity.ts:47",{"_index":1853,"title":{},"body":{"classes/Setting.html":{}}}],["server/src/common/entities/setting.entity.ts:52",{"_index":1855,"title":{},"body":{"classes/Setting.html":{}}}],["server/src/common/entities/setting.entity.ts:9",{"_index":1850,"title":{},"body":{"classes/Setting.html":{}}}],["server/src/common/entities/user.entity.ts",{"_index":2001,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["server/src/common/entities/user.entity.ts:17",{"_index":2009,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:21",{"_index":2021,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:24",{"_index":2016,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:27",{"_index":2011,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:30",{"_index":2014,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:33",{"_index":2027,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:36",{"_index":2023,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:39",{"_index":2024,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:42",{"_index":2022,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:45",{"_index":2015,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:48",{"_index":2010,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:51",{"_index":2026,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:54",{"_index":2012,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:57",{"_index":2025,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:60",{"_index":2018,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:63",{"_index":2013,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:66",{"_index":2017,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:68",{"_index":2030,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:73",{"_index":2032,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:78",{"_index":2033,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:83",{"_index":2035,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:88",{"_index":2028,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:94",{"_index":2029,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/flows/apply",{"_index":100,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"coverage.html":{}}}],["server/src/common/flows/base.flow.ts",{"_index":431,"title":{},"body":{"classes/BaseFlow.html":{},"coverage.html":{}}}],["server/src/common/flows/base.flow.ts:10",{"_index":434,"title":{},"body":{"classes/BaseFlow.html":{}}}],["server/src/common/flows/base.flow.ts:18",{"_index":435,"title":{},"body":{"classes/BaseFlow.html":{}}}],["server/src/common/flows/base.flow.ts:22",{"_index":436,"title":{},"body":{"classes/BaseFlow.html":{}}}],["server/src/common/flows/work",{"_index":2171,"title":{},"body":{"injectables/WorkOrderFlow.html":{},"coverage.html":{}}}],["server/src/common/lib/es.ts",{"_index":2198,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/src/common/lib/excel.ts",{"_index":1040,"title":{},"body":{"classes/ExcelHelper.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["server/src/common/lib/excel.ts:10",{"_index":1055,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["server/src/common/lib/excel.ts:100",{"_index":1046,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["server/src/common/lib/excel.ts:17",{"_index":1052,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["server/src/common/lib/excel.ts:24",{"_index":1049,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["server/src/common/lib/helper.ts",{"_index":2199,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["server/src/common/lib/influx.ts",{"_index":2200,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/src/common/lib/io.ts",{"_index":1301,"title":{},"body":{"classes/IO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/src/common/lib/io.ts:11",{"_index":1308,"title":{},"body":{"classes/IO.html":{}}}],["server/src/common/lib/io.ts:15",{"_index":1306,"title":{},"body":{"classes/IO.html":{}}}],["server/src/common/lib/io.ts:5",{"_index":1304,"title":{},"body":{"classes/IO.html":{}}}],["server/src/common/lib/logger.ts",{"_index":852,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["server/src/common/lib/logger.ts:105",{"_index":1414,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:109",{"_index":1402,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:113",{"_index":1412,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:117",{"_index":1410,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:121",{"_index":1416,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:125",{"_index":1418,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:129",{"_index":1404,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:133",{"_index":1406,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:137",{"_index":1408,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:153",{"_index":1415,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:157",{"_index":1403,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:161",{"_index":1413,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:165",{"_index":1411,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:169",{"_index":1417,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:173",{"_index":1419,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:177",{"_index":1405,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:181",{"_index":1407,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:21",{"_index":858,"title":{},"body":{"classes/ContextTrace.html":{}}}],["server/src/common/lib/logger.ts:23",{"_index":860,"title":{},"body":{"classes/ContextTrace.html":{}}}],["server/src/common/lib/logger.ts:24",{"_index":862,"title":{},"body":{"classes/ContextTrace.html":{}}}],["server/src/common/lib/logger.ts:25",{"_index":861,"title":{},"body":{"classes/ContextTrace.html":{}}}],["server/src/common/lib/logger.ts:26",{"_index":859,"title":{},"body":{"classes/ContextTrace.html":{}}}],["server/src/common/lib/mq.ts",{"_index":1450,"title":{},"body":{"classes/MQ.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["server/src/common/lib/mq.ts:10",{"_index":1456,"title":{},"body":{"classes/MQ.html":{}}}],["server/src/common/lib/mq.ts:11",{"_index":1454,"title":{},"body":{"classes/MQ.html":{}}}],["server/src/common/lib/mq.ts:13",{"_index":1457,"title":{},"body":{"classes/MQ.html":{}}}],["server/src/common/lib/mq.ts:22",{"_index":1459,"title":{},"body":{"classes/MQ.html":{}}}],["server/src/common/lib/qiniu.ts",{"_index":1543,"title":{},"body":{"classes/Qiniu.html":{},"coverage.html":{}}}],["server/src/common/lib/qiniu.ts:10",{"_index":1552,"title":{},"body":{"classes/Qiniu.html":{}}}],["server/src/common/lib/qiniu.ts:6",{"_index":1549,"title":{},"body":{"classes/Qiniu.html":{}}}],["server/src/common/lib/qiniu.ts:8",{"_index":1551,"title":{},"body":{"classes/Qiniu.html":{}}}],["server/src/common/lib/redis.ts",{"_index":2203,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/src/common/lib/sms.ts",{"_index":1608,"title":{},"body":{"classes/SMS.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["server/src/common/lib/sms.ts:15",{"_index":1615,"title":{},"body":{"classes/SMS.html":{}}}],["server/src/common/lib/sms.ts:21",{"_index":1619,"title":{},"body":{"classes/SMS.html":{}}}],["server/src/common/lib/wf.ts",{"_index":974,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["server/src/common/lib/wf.ts:29",{"_index":979,"title":{},"body":{"classes/Engine.html":{}}}],["server/src/common/lib/wf.ts:31",{"_index":986,"title":{},"body":{"classes/Engine.html":{}}}],["server/src/common/lib/wf.ts:35",{"_index":984,"title":{},"body":{"classes/Engine.html":{}}}],["server/src/common/lib/wf.ts:44",{"_index":983,"title":{},"body":{"classes/Engine.html":{}}}],["server/src/common/lib/wf.ts:53",{"_index":980,"title":{},"body":{"classes/Engine.html":{}}}],["server/src/common/services/authority.service.ts",{"_index":350,"title":{},"body":{"injectables/AuthorityService.html":{},"coverage.html":{}}}],["server/src/common/services/authority.service.ts:16",{"_index":374,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["server/src/common/services/authority.service.ts:20",{"_index":368,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["server/src/common/services/authority.service.ts:28",{"_index":365,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["server/src/common/services/authority.service.ts:36",{"_index":370,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["server/src/common/services/authority.service.ts:40",{"_index":376,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["server/src/common/services/authority.service.ts:50",{"_index":372,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["server/src/common/services/authority.service.ts:57",{"_index":362,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["server/src/common/services/authority.service.ts:9",{"_index":359,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["server/src/common/services/base.service.ts",{"_index":455,"title":{},"body":{"classes/BaseService.html":{},"coverage.html":{}}}],["server/src/common/services/base.service.ts:10",{"_index":459,"title":{},"body":{"classes/BaseService.html":{}}}],["server/src/common/services/base.service.ts:3",{"_index":457,"title":{},"body":{"classes/BaseService.html":{}}}],["server/src/common/services/base.service.ts:6",{"_index":458,"title":{},"body":{"classes/BaseService.html":{}}}],["server/src/common/services/carousel.service.ts",{"_index":504,"title":{},"body":{"injectables/CarouselService.html":{},"coverage.html":{}}}],["server/src/common/services/carousel.service.ts:10",{"_index":507,"title":{},"body":{"injectables/CarouselService.html":{}}}],["server/src/common/services/carousel.service.ts:18",{"_index":513,"title":{},"body":{"injectables/CarouselService.html":{}}}],["server/src/common/services/carousel.service.ts:52",{"_index":510,"title":{},"body":{"injectables/CarouselService.html":{}}}],["server/src/common/services/carousel.service.ts:59",{"_index":512,"title":{},"body":{"injectables/CarouselService.html":{}}}],["server/src/common/services/carousel.service.ts:65",{"_index":514,"title":{},"body":{"injectables/CarouselService.html":{}}}],["server/src/common/services/category.service.ts",{"_index":576,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["server/src/common/services/category.service.ts:14",{"_index":584,"title":{},"body":{"injectables/CategoryService.html":{}}}],["server/src/common/services/category.service.ts:19",{"_index":581,"title":{},"body":{"injectables/CategoryService.html":{}}}],["server/src/common/services/category.service.ts:23",{"_index":583,"title":{},"body":{"injectables/CategoryService.html":{}}}],["server/src/common/services/category.service.ts:27",{"_index":585,"title":{},"body":{"injectables/CategoryService.html":{}}}],["server/src/common/services/category.service.ts:9",{"_index":579,"title":{},"body":{"injectables/CategoryService.html":{}}}],["server/src/common/services/common.service.ts",{"_index":665,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["server/src/common/services/common.service.ts:11",{"_index":670,"title":{},"body":{"injectables/CommonService.html":{}}}],["server/src/common/services/common.service.ts:18",{"_index":675,"title":{},"body":{"injectables/CommonService.html":{}}}],["server/src/common/services/common.service.ts:27",{"_index":676,"title":{},"body":{"injectables/CommonService.html":{}}}],["server/src/common/services/common.service.ts:48",{"_index":673,"title":{},"body":{"injectables/CommonService.html":{}}}],["server/src/common/services/content.service.ts",{"_index":826,"title":{},"body":{"injectables/ContentService.html":{},"coverage.html":{}}}],["server/src/common/services/content.service.ts:10",{"_index":828,"title":{},"body":{"injectables/ContentService.html":{}}}],["server/src/common/services/content.service.ts:18",{"_index":831,"title":{},"body":{"injectables/ContentService.html":{}}}],["server/src/common/services/content.service.ts:67",{"_index":830,"title":{},"body":{"injectables/ContentService.html":{}}}],["server/src/common/services/content.service.ts:74",{"_index":832,"title":{},"body":{"injectables/ContentService.html":{}}}],["server/src/common/services/flow",{"_index":1290,"title":{},"body":{"injectables/FlowTemplateService.html":{},"coverage.html":{}}}],["server/src/common/services/flow.service.ts",{"_index":1220,"title":{},"body":{"injectables/FlowService.html":{},"coverage.html":{}}}],["server/src/common/services/flow.service.ts:109",{"_index":1235,"title":{},"body":{"injectables/FlowService.html":{}}}],["server/src/common/services/flow.service.ts:14",{"_index":1224,"title":{},"body":{"injectables/FlowService.html":{}}}],["server/src/common/services/flow.service.ts:23",{"_index":1228,"title":{},"body":{"injectables/FlowService.html":{}}}],["server/src/common/services/flow.service.ts:37",{"_index":1229,"title":{},"body":{"injectables/FlowService.html":{}}}],["server/src/common/services/flow.service.ts:44",{"_index":1234,"title":{},"body":{"injectables/FlowService.html":{}}}],["server/src/common/services/flow.service.ts:76",{"_index":1230,"title":{},"body":{"injectables/FlowService.html":{}}}],["server/src/common/services/flow.service.ts:88",{"_index":1231,"title":{},"body":{"injectables/FlowService.html":{}}}],["server/src/common/services/flow.service.ts:97",{"_index":1233,"title":{},"body":{"injectables/FlowService.html":{}}}],["server/src/common/services/import.service.ts",{"_index":1336,"title":{},"body":{"injectables/ImportService.html":{},"coverage.html":{}}}],["server/src/common/services/import.service.ts:11",{"_index":1342,"title":{},"body":{"injectables/ImportService.html":{}}}],["server/src/common/services/import.service.ts:17",{"_index":1344,"title":{},"body":{"injectables/ImportService.html":{}}}],["server/src/common/services/import.service.ts:28",{"_index":1347,"title":{},"body":{"injectables/ImportService.html":{}}}],["server/src/common/services/import.service.ts:48",{"_index":1349,"title":{},"body":{"injectables/ImportService.html":{}}}],["server/src/common/services/organization.service.ts",{"_index":1514,"title":{},"body":{"injectables/OrganizationService.html":{},"coverage.html":{}}}],["server/src/common/services/organization.service.ts:17",{"_index":1520,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["server/src/common/services/organization.service.ts:21",{"_index":1518,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["server/src/common/services/organization.service.ts:25",{"_index":1522,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["server/src/common/services/organization.service.ts:35",{"_index":1519,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["server/src/common/services/organization.service.ts:42",{"_index":1521,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["server/src/common/services/organization.service.ts:9",{"_index":1516,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["server/src/common/services/role.service.ts",{"_index":1591,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["server/src/common/services/role.service.ts:10",{"_index":1594,"title":{},"body":{"injectables/RoleService.html":{}}}],["server/src/common/services/role.service.ts:16",{"_index":1597,"title":{},"body":{"injectables/RoleService.html":{}}}],["server/src/common/services/role.service.ts:21",{"_index":1598,"title":{},"body":{"injectables/RoleService.html":{}}}],["server/src/common/services/role.service.ts:43",{"_index":1599,"title":{},"body":{"injectables/RoleService.html":{}}}],["server/src/common/services/search.service.ts",{"_index":1647,"title":{},"body":{"injectables/SearchService.html":{},"coverage.html":{}}}],["server/src/common/services/search.service.ts:7",{"_index":1648,"title":{},"body":{"injectables/SearchService.html":{}}}],["server/src/common/services/service",{"_index":1798,"title":{},"body":{"injectables/ServiceCategoryService.html":{},"coverage.html":{}}}],["server/src/common/services/service.service.ts",{"_index":1823,"title":{},"body":{"injectables/ServiceService.html":{},"coverage.html":{}}}],["server/src/common/services/service.service.ts:11",{"_index":1825,"title":{},"body":{"injectables/ServiceService.html":{}}}],["server/src/common/services/service.service.ts:21",{"_index":1828,"title":{},"body":{"injectables/ServiceService.html":{}}}],["server/src/common/services/service.service.ts:70",{"_index":1827,"title":{},"body":{"injectables/ServiceService.html":{}}}],["server/src/common/services/service.service.ts:77",{"_index":1829,"title":{},"body":{"injectables/ServiceService.html":{}}}],["server/src/common/services/setting.service.ts",{"_index":1868,"title":{},"body":{"injectables/SettingService.html":{},"coverage.html":{}}}],["server/src/common/services/setting.service.ts:15",{"_index":1874,"title":{},"body":{"injectables/SettingService.html":{}}}],["server/src/common/services/setting.service.ts:19",{"_index":1875,"title":{},"body":{"injectables/SettingService.html":{}}}],["server/src/common/services/setting.service.ts:8",{"_index":1871,"title":{},"body":{"injectables/SettingService.html":{}}}],["server/src/common/services/user.service.ts",{"_index":2095,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["server/src/common/services/user.service.ts:108",{"_index":2109,"title":{},"body":{"injectables/UserService.html":{}}}],["server/src/common/services/user.service.ts:131",{"_index":2104,"title":{},"body":{"injectables/UserService.html":{}}}],["server/src/common/services/user.service.ts:145",{"_index":2113,"title":{},"body":{"injectables/UserService.html":{}}}],["server/src/common/services/user.service.ts:176",{"_index":2102,"title":{},"body":{"injectables/UserService.html":{}}}],["server/src/common/services/user.service.ts:18",{"_index":2100,"title":{},"body":{"injectables/UserService.html":{}}}],["server/src/common/services/user.service.ts:30",{"_index":2110,"title":{},"body":{"injectables/UserService.html":{}}}],["server/src/common/services/user.service.ts:82",{"_index":2107,"title":{},"body":{"injectables/UserService.html":{}}}],["server/src/common/services/user.service.ts:95",{"_index":2106,"title":{},"body":{"injectables/UserService.html":{}}}],["server/src/common/strategys/jwt.strategy.ts",{"_index":1382,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["server/src/common/strategys/jwt.strategy.ts:17",{"_index":1387,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server/src/common/strategys/jwt.strategy.ts:9",{"_index":1385,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server/src/common/tasks/status.task.ts",{"_index":1881,"title":{},"body":{"classes/StatusTask.html":{},"coverage.html":{}}}],["server/src/common/tasks/status.task.ts:109",{"_index":1888,"title":{},"body":{"classes/StatusTask.html":{}}}],["server/src/common/tasks/status.task.ts:13",{"_index":1886,"title":{},"body":{"classes/StatusTask.html":{}}}],["server/src/common/tasks/status.task.ts:38",{"_index":1889,"title":{},"body":{"classes/StatusTask.html":{}}}],["server/src/config/index.ts",{"_index":2204,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/src/main.ts",{"_index":2205,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["server/src/seed/index.ts",{"_index":1658,"title":{},"body":{"injectables/Seed.html":{},"coverage.html":{}}}],["server/src/seed/index.ts:109",{"_index":1667,"title":{},"body":{"injectables/Seed.html":{}}}],["server/src/seed/index.ts:126",{"_index":1670,"title":{},"body":{"injectables/Seed.html":{}}}],["server/src/seed/index.ts:143",{"_index":1668,"title":{},"body":{"injectables/Seed.html":{}}}],["server/src/seed/index.ts:160",{"_index":1666,"title":{},"body":{"injectables/Seed.html":{}}}],["server/src/seed/index.ts:178",{"_index":1669,"title":{},"body":{"injectables/Seed.html":{}}}],["server/src/seed/index.ts:19",{"_index":1665,"title":{},"body":{"injectables/Seed.html":{}}}],["server/src/seed/index.ts:22",{"_index":1672,"title":{},"body":{"injectables/Seed.html":{}}}],["server/src/seed/index.ts:57",{"_index":1671,"title":{},"body":{"injectables/Seed.html":{}}}],["server/src/ssr/controllers/index.controller.ts",{"_index":1374,"title":{},"body":{"controllers/IndexController.html":{},"coverage.html":{}}}],["server/src/ssr/controllers/index.controller.ts:9",{"_index":1376,"title":{},"body":{"controllers/IndexController.html":{}}}],["server/src/ssr/ssr.module.ts",{"_index":1635,"title":{},"body":{"modules/SSRModule.html":{}}}],["serverurl",{"_index":2375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":632,"title":{"classes/Service.html":{}},"body":{"modules/CommonModule.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"injectables/ServiceService.html":{},"coverage.html":{}}}],["service.category",{"_index":1785,"title":{},"body":{"classes/ServiceCategory.html":{}}}],["service.create(payload",{"_index":1834,"title":{},"body":{"injectables/ServiceService.html":{}}}],["service.entity",{"_index":1784,"title":{},"body":{"classes/ServiceCategory.html":{}}}],["servicecategory",{"_index":629,"title":{"classes/ServiceCategory.html":{}},"body":{"modules/CommonModule.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"coverage.html":{}}}],["servicecategory.create(payload",{"_index":1806,"title":{},"body":{"injectables/ServiceCategoryService.html":{}}}],["servicecategory.sheetsmap",{"_index":1728,"title":{},"body":{"injectables/Seed.html":{}}}],["servicecategorycontroller",{"_index":37,"title":{"classes/ServiceCategoryController.html":{}},"body":{"modules/ApiModule.html":{},"classes/ServiceCategoryController.html":{},"coverage.html":{}}}],["servicecategoryservice",{"_index":606,"title":{"injectables/ServiceCategoryService.html":{}},"body":{"modules/CommonModule.html":{},"classes/ServiceCategoryController.html":{},"injectables/ServiceCategoryService.html":{},"coverage.html":{},"overview.html":{}}}],["servicecontroller",{"_index":40,"title":{"classes/ServiceController.html":{}},"body":{"modules/ApiModule.html":{},"classes/ServiceController.html":{},"coverage.html":{}}}],["servicerepository",{"_index":1826,"title":{},"body":{"injectables/ServiceService.html":{}}}],["services",{"_index":1772,"title":{},"body":{"classes/ServiceCategory.html":{}}}],["services/authority.service",{"_index":643,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/carousel.service",{"_index":651,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/category.service",{"_index":637,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/common.service",{"_index":634,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/content.service",{"_index":638,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/flow",{"_index":654,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/flow.service",{"_index":645,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/import.service",{"_index":636,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/organization.service",{"_index":641,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/role.service",{"_index":642,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/search.service",{"_index":644,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/service",{"_index":648,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/service.service",{"_index":650,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/setting.service",{"_index":635,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/user.service",{"_index":622,"title":{},"body":{"modules/CommonModule.html":{},"injectables/JwtStrategy.html":{}}}],["serviceservice",{"_index":607,"title":{"injectables/ServiceService.html":{}},"body":{"modules/CommonModule.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["session",{"_index":2403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["set('content",{"_index":1632,"title":{},"body":{"classes/SMS.html":{}}}],["setting",{"_index":625,"title":{"classes/Setting.html":{}},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"injectables/SettingService.html":{},"coverage.html":{}}}],["setting.create(payload",{"_index":1879,"title":{},"body":{"injectables/SettingService.html":{}}}],["setting.ex_info",{"_index":687,"title":{},"body":{"injectables/CommonService.html":{}}}],["setting.service",{"_index":681,"title":{},"body":{"injectables/CommonService.html":{}}}],["setting.sheetsmap",{"_index":1691,"title":{},"body":{"injectables/Seed.html":{}}}],["settingcontroller",{"_index":25,"title":{"classes/SettingController.html":{}},"body":{"modules/ApiModule.html":{},"classes/SettingController.html":{},"coverage.html":{}}}],["settingrepository",{"_index":1872,"title":{},"body":{"injectables/SettingService.html":{}}}],["settingservice",{"_index":608,"title":{"injectables/SettingService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"coverage.html":{},"overview.html":{}}}],["setto",{"_index":2379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":2330,"title":{},"body":{"license.html":{}}}],["sheet",{"_index":1100,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["sheet.addrows(rows",{"_index":1124,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["sheet.columns",{"_index":1123,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["sheetmap",{"_index":1066,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["sheetmap.cellsmap",{"_index":1084,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["sheetmap.handletype",{"_index":1069,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["sheetmap.rowsmap",{"_index":1072,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["sheetsmap",{"_index":208,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/ExcelHelper.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{}}}],["sheetsmap.rowsmap",{"_index":1102,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["sheetsmap[worksheet.name",{"_index":1067,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["signoptions",{"_index":2395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simple",{"_index":225,"title":{},"body":{"classes/Authority.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["siteinfo",{"_index":1379,"title":{},"body":{"controllers/IndexController.html":{}}}],["size",{"_index":691,"title":{},"body":{"injectables/CommonService.html":{},"classes/StorageController.html":{}}}],["sms",{"_index":1607,"title":{"classes/SMS.html":{}},"body":{"classes/SMS.html":{},"coverage.html":{}}}],["sms.templates[template",{"_index":1626,"title":{},"body":{"classes/SMS.html":{}}}],["sms_account=xxx",{"_index":1622,"title":{},"body":{"classes/SMS.html":{}}}],["sms_domain=smssh1.253.com",{"_index":1625,"title":{},"body":{"classes/SMS.html":{}}}],["sms_secret=xxx",{"_index":1623,"title":{},"body":{"classes/SMS.html":{}}}],["sms_url=http://smssh1.253.com/msg/send/json",{"_index":1624,"title":{},"body":{"classes/SMS.html":{}}}],["smstemplates",{"_index":1617,"title":{},"body":{"classes/SMS.html":{},"miscellaneous/enumerations.html":{}}}],["socket",{"_index":1315,"title":{},"body":{"classes/IO.html":{}}}],["socket.id",{"_index":1313,"title":{},"body":{"classes/IO.html":{}}}],["socket.io",{"_index":1309,"title":{},"body":{"classes/IO.html":{},"index.html":{}}}],["socket.on('disconnect",{"_index":1324,"title":{},"body":{"classes/IO.html":{}}}],["socket.on('disconnectcting",{"_index":1321,"title":{},"body":{"classes/IO.html":{}}}],["socket.on('error",{"_index":1326,"title":{},"body":{"classes/IO.html":{}}}],["socket.request.headers",{"_index":1320,"title":{},"body":{"classes/IO.html":{}}}],["socketio",{"_index":1302,"title":{},"body":{"classes/IO.html":{}}}],["socketio.server",{"_index":1305,"title":{},"body":{"classes/IO.html":{}}}],["software",{"_index":2305,"title":{},"body":{"license.html":{}}}],["sort",{"_index":209,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/CreateContentDto.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/UpdateContentDto.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/ApplyVolunteerDto.html":{},"injectables/ApplyVolunteerFlow.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseFlow.html":{},"classes/BaseService.html":{},"classes/Carousel.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/Engine.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"classes/Flow.html":{},"classes/FlowController.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"classes/FlowTemplateController.html":{},"injectables/FlowTemplateService.html":{},"interfaces/IFlow.html":{},"classes/IO.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/MQ.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Qiniu.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/SMS.html":{},"modules/SSRModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/ServiceCategoryController.html":{},"injectables/ServiceCategoryService.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"injectables/WorkOrderFlow.html":{},"miscellaneous/variables.html":{}}}],["spa",{"_index":2286,"title":{},"body":{"index.html":{}}}],["sql",{"_index":2275,"title":{},"body":{"index.html":{}}}],["src/seeds",{"_index":2281,"title":{},"body":{"index.html":{}}}],["ssr/ssr.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["ssrmodule",{"_index":67,"title":{"modules/SSRModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SSRModule.html":{},"modules.html":{},"overview.html":{}}}],["stackinfo",{"_index":949,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stackinfo.columnnumber",{"_index":952,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stackinfo.filename",{"_index":954,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stackinfo.linenumber",{"_index":951,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stacklist",{"_index":946,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stacklist[deep",{"_index":950,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stacktrace",{"_index":865,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stacktrace.getsync",{"_index":948,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stacktrace.stackframe",{"_index":947,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["start",{"_index":1664,"title":{},"body":{"injectables/Seed.html":{}}}],["started",{"_index":1004,"title":{"index.html":{},"license.html":{}},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["starting",{"_index":1001,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["stat",{"_index":1714,"title":{},"body":{"injectables/Seed.html":{},"classes/StatusTask.html":{}}}],["stat(path",{"_index":1918,"title":{},"body":{"classes/StatusTask.html":{}}}],["state",{"_index":993,"title":{},"body":{"classes/Engine.html":{},"classes/Flow.html":{},"interfaces/IFlow.html":{}}}],["static",{"_index":207,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/ContextTrace.html":{},"classes/Engine.html":{},"classes/ExcelHelper.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"interfaces/IFlow.html":{},"classes/Logger.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Qiniu.html":{},"classes/Role.html":{},"classes/SMS.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["stats",{"_index":1919,"title":{},"body":{"classes/StatusTask.html":{}}}],["status",{"_index":1146,"title":{},"body":{"classes/ExceptionsFilter.html":{},"classes/IO.html":{},"classes/StatusTask.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["status.time",{"_index":1934,"title":{},"body":{"classes/StatusTask.html":{}}}],["statusarr",{"_index":1932,"title":{},"body":{"classes/StatusTask.html":{}}}],["statusarr.length",{"_index":1937,"title":{},"body":{"classes/StatusTask.html":{}}}],["statusarr.splice(0",{"_index":1939,"title":{},"body":{"classes/StatusTask.html":{}}}],["statusarr.unshift(status",{"_index":1936,"title":{},"body":{"classes/StatusTask.html":{}}}],["statusjson",{"_index":1930,"title":{},"body":{"classes/StatusTask.html":{}}}],["statustask",{"_index":639,"title":{"classes/StatusTask.html":{}},"body":{"modules/CommonModule.html":{},"classes/StatusTask.html":{},"coverage.html":{}}}],["stdout",{"_index":922,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["steps",{"_index":447,"title":{},"body":{"classes/BaseFlow.html":{}}}],["storagecontroller",{"_index":21,"title":{"classes/StorageController.html":{}},"body":{"modules/ApiModule.html":{},"classes/StorageController.html":{},"coverage.html":{}}}],["storagecontroller::import",{"_index":1976,"title":{},"body":{"classes/StorageController.html":{}}}],["storagecontroller::upload",{"_index":1983,"title":{},"body":{"classes/StorageController.html":{}}}],["storagetype",{"_index":418,"title":{},"body":{"classes/Base.html":{},"injectables/Seed.html":{},"classes/StorageController.html":{},"miscellaneous/enumerations.html":{}}}],["storagetype.local",{"_index":425,"title":{},"body":{"classes/Base.html":{},"injectables/Seed.html":{},"classes/StorageController.html":{}}}],["storagetype.qiniu",{"_index":429,"title":{},"body":{"classes/Base.html":{}}}],["strategy",{"_index":1389,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strategys/jwt.strategy",{"_index":623,"title":{},"body":{"modules/CommonModule.html":{}}}],["string",{"_index":82,"title":{},"body":{"classes/ApplyVolunteerDto.html":{},"classes/Authority.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseFlow.html":{},"classes/BaseService.html":{},"classes/Carousel.html":{},"injectables/CarouselService.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/Engine.html":{},"classes/Flow.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"injectables/FlowTemplateService.html":{},"interfaces/IFlow.html":{},"classes/Logger.html":{},"classes/LoginDto.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/SMS.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"classes/Setting.html":{},"injectables/SettingService.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":2228,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["subject",{"_index":2326,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":2319,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":2332,"title":{},"body":{"license.html":{}}}],["success",{"_index":997,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{},"miscellaneous/enumerations.html":{}}}],["summary",{"_index":715,"title":{},"body":{"classes/Content.html":{},"classes/CreateContentDto.html":{},"classes/Service.html":{},"classes/UpdateContentDto.html":{}}}],["super",{"_index":163,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/JwtStrategy.html":{}}}],["super(authorityrepository",{"_index":387,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["super(carouselrepository",{"_index":517,"title":{},"body":{"injectables/CarouselService.html":{}}}],["super(categoryrepository",{"_index":588,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ServiceCategoryService.html":{}}}],["super(contentrepository",{"_index":834,"title":{},"body":{"injectables/ContentService.html":{}}}],["super(flowrepository",{"_index":1237,"title":{},"body":{"injectables/FlowService.html":{}}}],["super(flowtemplaterepository",{"_index":1296,"title":{},"body":{"injectables/FlowTemplateService.html":{}}}],["super(organizationrepository",{"_index":1524,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["super(rolerepository",{"_index":1601,"title":{},"body":{"injectables/RoleService.html":{}}}],["super(servicerepository",{"_index":1831,"title":{},"body":{"injectables/ServiceService.html":{}}}],["super(settingrepository",{"_index":1877,"title":{},"body":{"injectables/SettingService.html":{}}}],["super(userrepository",{"_index":2119,"title":{},"body":{"injectables/UserService.html":{}}}],["superadmin",{"_index":1574,"title":{},"body":{"classes/Role.html":{},"injectables/Seed.html":{},"classes/User.html":{}}}],["superadmin.role",{"_index":1705,"title":{},"body":{"injectables/Seed.html":{}}}],["superagent",{"_index":1621,"title":{},"body":{"classes/SMS.html":{}}}],["superagent.post(process.env['sms_url",{"_index":1631,"title":{},"body":{"classes/SMS.html":{}}}],["svg",{"_index":679,"title":{},"body":{"injectables/CommonService.html":{},"modules.html":{}}}],["svg_code",{"_index":705,"title":{},"body":{"injectables/CommonService.html":{}}}],["svg_hash",{"_index":674,"title":{},"body":{"injectables/CommonService.html":{}}}],["svg_text",{"_index":672,"title":{},"body":{"injectables/CommonService.html":{}}}],["svg_text.touppercase",{"_index":709,"title":{},"body":{"injectables/CommonService.html":{}}}],["svg_text_in_redis",{"_index":706,"title":{},"body":{"injectables/CommonService.html":{}}}],["svg_text_in_redis.touppercase",{"_index":708,"title":{},"body":{"injectables/CommonService.html":{}}}],["svgcaptcha",{"_index":678,"title":{},"body":{"injectables/CommonService.html":{}}}],["svgcaptcha.create",{"_index":690,"title":{},"body":{"injectables/CommonService.html":{}}}],["swagger",{"_index":2288,"title":{},"body":{"index.html":{}}}],["switch",{"_index":422,"title":{},"body":{"classes/Base.html":{},"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"injectables/ImportService.html":{},"classes/Logger.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{}}}],["synchronize",{"_index":2417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sysadmin",{"_index":1701,"title":{},"body":{"injectables/Seed.html":{},"index.html":{}}}],["system_status",{"_index":2423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t.create_at",{"_index":2129,"title":{},"body":{"injectables/UserService.html":{}}}],["t.publish_at",{"_index":842,"title":{},"body":{"injectables/ContentService.html":{},"injectables/ServiceService.html":{}}}],["table",{"_index":2212,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2211,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":2431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target",{"_index":261,"title":{},"body":{"classes/Authority.html":{},"injectables/AuthorityService.html":{},"classes/BaseFlow.html":{},"classes/Carousel.html":{},"injectables/CarouselService.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/Flow.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"injectables/FlowTemplateService.html":{},"injectables/ImportService.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"injectables/OrganizationService.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"classes/Setting.html":{},"injectables/SettingService.html":{},"classes/StorageController.html":{},"classes/User.html":{}}}],["target.ex_info",{"_index":450,"title":{},"body":{"classes/BaseFlow.html":{}}}],["target.name",{"_index":451,"title":{},"body":{"classes/BaseFlow.html":{}}}],["target.parent",{"_index":399,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"injectables/OrganizationService.html":{},"injectables/ServiceCategoryService.html":{}}}],["target.template",{"_index":452,"title":{},"body":{"classes/BaseFlow.html":{}}}],["task",{"_index":1011,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["task.id",{"_index":1014,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["task.options",{"_index":1023,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["taskname",{"_index":982,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["tasks/status.task",{"_index":640,"title":{},"body":{"modules/CommonModule.html":{}}}],["tel",{"_index":1842,"title":{},"body":{"classes/Setting.html":{}}}],["template",{"_index":433,"title":{},"body":{"classes/BaseFlow.html":{},"classes/Engine.html":{},"classes/Flow.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"interfaces/IFlow.html":{},"classes/SMS.html":{}}}],["template.controller",{"_index":46,"title":{},"body":{"modules/ApiModule.html":{}}}],["template.controller.ts",{"_index":1274,"title":{},"body":{"classes/FlowTemplateController.html":{},"coverage.html":{}}}],["template.controller.ts:24",{"_index":1276,"title":{},"body":{"classes/FlowTemplateController.html":{}}}],["template.controller.ts:28",{"_index":1279,"title":{},"body":{"classes/FlowTemplateController.html":{}}}],["template.controller.ts:35",{"_index":1280,"title":{},"body":{"classes/FlowTemplateController.html":{}}}],["template.controller.ts:40",{"_index":1278,"title":{},"body":{"classes/FlowTemplateController.html":{}}}],["template.controller.ts:45",{"_index":1277,"title":{},"body":{"classes/FlowTemplateController.html":{}}}],["template.controller.ts:50",{"_index":1282,"title":{},"body":{"classes/FlowTemplateController.html":{}}}],["template.controller.ts:55",{"_index":1281,"title":{},"body":{"classes/FlowTemplateController.html":{}}}],["template.entity",{"_index":149,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/BaseFlow.html":{},"modules/CommonModule.html":{},"classes/Flow.html":{},"injectables/FlowService.html":{},"injectables/FlowTemplateService.html":{}}}],["template.entity.ts",{"_index":1263,"title":{},"body":{"classes/FlowTemplate.html":{},"coverage.html":{}}}],["template.entity.ts:13",{"_index":1268,"title":{},"body":{"classes/FlowTemplate.html":{}}}],["template.entity.ts:19",{"_index":1269,"title":{},"body":{"classes/FlowTemplate.html":{}}}],["template.entity.ts:22",{"_index":1265,"title":{},"body":{"classes/FlowTemplate.html":{}}}],["template.entity.ts:25",{"_index":1266,"title":{},"body":{"classes/FlowTemplate.html":{}}}],["template.entity.ts:27",{"_index":1270,"title":{},"body":{"classes/FlowTemplate.html":{}}}],["template.flows",{"_index":1190,"title":{},"body":{"classes/Flow.html":{}}}],["template.service",{"_index":655,"title":{},"body":{"modules/CommonModule.html":{},"classes/FlowTemplateController.html":{}}}],["template.service.ts",{"_index":1291,"title":{},"body":{"injectables/FlowTemplateService.html":{},"coverage.html":{}}}],["template.service.ts:17",{"_index":1294,"title":{},"body":{"injectables/FlowTemplateService.html":{}}}],["template.service.ts:44",{"_index":1293,"title":{},"body":{"injectables/FlowTemplateService.html":{}}}],["template.service.ts:48",{"_index":1295,"title":{},"body":{"injectables/FlowTemplateService.html":{}}}],["template.service.ts:9",{"_index":1292,"title":{},"body":{"injectables/FlowTemplateService.html":{}}}],["template[flow.state][task.name](flow",{"_index":1022,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["templates",{"_index":1609,"title":{},"body":{"classes/SMS.html":{}}}],["text",{"_index":688,"title":{},"body":{"injectables/CommonService.html":{},"classes/Content.html":{},"classes/CreateContentDto.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"classes/UpdateContentDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["textinterception",{"_index":775,"title":{},"body":{"classes/Content.html":{},"classes/Service.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["textinterception(text",{"_index":793,"title":{},"body":{"classes/Content.html":{},"classes/Service.html":{},"miscellaneous/functions.html":{}}}],["this.apply",{"_index":133,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["this.author",{"_index":804,"title":{},"body":{"classes/Content.html":{}}}],["this.authorityrepository",{"_index":389,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["this.authorityrepository.delete(ids",{"_index":407,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["this.authorityrepository.findone",{"_index":396,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["this.authorityrepository.findone(payload.id",{"_index":402,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["this.authorityrepository.findone(payload.parentid",{"_index":400,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["this.authorityrepository.findroots",{"_index":404,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["this.authorityrepository.findtrees",{"_index":388,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["this.authorityrepository.save(target",{"_index":401,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["this.authorityservice.delete(payload.selectedrows.split",{"_index":349,"title":{},"body":{"classes/AuthorityController.html":{}}}],["this.authorityservice.findonebyid(id",{"_index":340,"title":{},"body":{"classes/AuthorityController.html":{}}}],["this.authorityservice.parent(dto",{"_index":347,"title":{},"body":{"classes/AuthorityController.html":{}}}],["this.authorityservice.query(payload",{"_index":342,"title":{},"body":{"classes/AuthorityController.html":{}}}],["this.authorityservice.save(dto",{"_index":344,"title":{},"body":{"classes/AuthorityController.html":{}}}],["this.cancel",{"_index":136,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["this.carouselrepository.createquerybuilder('t",{"_index":519,"title":{},"body":{"injectables/CarouselService.html":{}}}],["this.carouselrepository.findone",{"_index":535,"title":{},"body":{"injectables/CarouselService.html":{}}}],["this.carouselrepository.save(target",{"_index":537,"title":{},"body":{"injectables/CarouselService.html":{}}}],["this.carouseservice.findonebyid(id",{"_index":497,"title":{},"body":{"classes/CarouselController.html":{}}}],["this.carouseservice.findonebytoken(token",{"_index":499,"title":{},"body":{"classes/CarouselController.html":{}}}],["this.carouseservice.query(payload",{"_index":500,"title":{},"body":{"classes/CarouselController.html":{}}}],["this.carouseservice.remove(payload.selectedrows.split",{"_index":503,"title":{},"body":{"classes/CarouselController.html":{}}}],["this.carouseservice.save(dto",{"_index":502,"title":{},"body":{"classes/CarouselController.html":{}}}],["this.category",{"_index":806,"title":{},"body":{"classes/Content.html":{}}}],["this.category.name",{"_index":800,"title":{},"body":{"classes/Content.html":{}}}],["this.categoryrepository.findancestorstree(category",{"_index":591,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ServiceCategoryService.html":{}}}],["this.categoryrepository.findone",{"_index":590,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ServiceCategoryService.html":{}}}],["this.categoryrepository.findone(payload.parentid",{"_index":593,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ServiceCategoryService.html":{}}}],["this.categoryrepository.findtrees",{"_index":589,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"injectables/ServiceCategoryService.html":{}}}],["this.categoryrepository.save(target",{"_index":594,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ServiceCategoryService.html":{}}}],["this.categoryservice.findonebyid(id",{"_index":572,"title":{},"body":{"classes/CategoryController.html":{},"classes/ServiceCategoryController.html":{}}}],["this.categoryservice.findonebyname(key",{"_index":1357,"title":{},"body":{"injectables/ImportService.html":{}}}],["this.categoryservice.query(payload",{"_index":573,"title":{},"body":{"classes/CategoryController.html":{},"classes/ServiceCategoryController.html":{}}}],["this.categoryservice.remove(payload.selectedrows.split",{"_index":575,"title":{},"body":{"classes/CategoryController.html":{},"classes/ServiceCategoryController.html":{}}}],["this.categoryservice.save(dto",{"_index":574,"title":{},"body":{"classes/CategoryController.html":{},"classes/ServiceCategoryController.html":{}}}],["this.channel",{"_index":1468,"title":{},"body":{"classes/MQ.html":{}}}],["this.client",{"_index":1465,"title":{},"body":{"classes/MQ.html":{}}}],["this.client.createchannel",{"_index":1469,"title":{},"body":{"classes/MQ.html":{}}}],["this.commonservice.getsiteinfo",{"_index":1380,"title":{},"body":{"controllers/IndexController.html":{}}}],["this.complete",{"_index":137,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["this.connection",{"_index":1698,"title":{},"body":{"injectables/Seed.html":{}}}],["this.connection.getrepository(authority).save(arr",{"_index":1740,"title":{},"body":{"injectables/Seed.html":{}}}],["this.connection.getrepository(content).save(list",{"_index":1362,"title":{},"body":{"injectables/ImportService.html":{}}}],["this.connection.getrepository(role).save(rolesarr",{"_index":1747,"title":{},"body":{"injectables/Seed.html":{}}}],["this.connection.getrepository(setting).save",{"_index":1688,"title":{},"body":{"injectables/Seed.html":{}}}],["this.connection.getrepository(user).save(superadmin",{"_index":1706,"title":{},"body":{"injectables/Seed.html":{}}}],["this.connection.gettreerepository(category).save(categoryarr",{"_index":1725,"title":{},"body":{"injectables/Seed.html":{}}}],["this.connection.gettreerepository(organization).save(organizationarr",{"_index":1371,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["this.connection.gettreerepository(servicecategory).save(categoryarr",{"_index":1729,"title":{},"body":{"injectables/Seed.html":{}}}],["this.consume",{"_index":1003,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["this.contentrepository.createquerybuilder('t",{"_index":835,"title":{},"body":{"injectables/ContentService.html":{}}}],["this.contentrepository.findone",{"_index":848,"title":{},"body":{"injectables/ContentService.html":{}}}],["this.contentrepository.save(target",{"_index":850,"title":{},"body":{"injectables/ContentService.html":{}}}],["this.contentservice.findonebyid(id",{"_index":822,"title":{},"body":{"classes/ContentController.html":{}}}],["this.contentservice.query(payload",{"_index":823,"title":{},"body":{"classes/ContentController.html":{}}}],["this.contentservice.remove(payload.selectedrows.split",{"_index":825,"title":{},"body":{"classes/ContentController.html":{}}}],["this.contentservice.save(dto",{"_index":824,"title":{},"body":{"classes/ContentController.html":{}}}],["this.dispatch",{"_index":1032,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{}}}],["this.ex_info.carousels",{"_index":472,"title":{},"body":{"classes/Carousel.html":{}}}],["this.ex_info.carousels.map((item",{"_index":473,"title":{},"body":{"classes/Carousel.html":{}}}],["this.ex_info.setting.logodark",{"_index":1859,"title":{},"body":{"classes/Setting.html":{}}}],["this.ex_info.setting.logolight",{"_index":1858,"title":{},"body":{"classes/Setting.html":{}}}],["this.findone",{"_index":2140,"title":{},"body":{"injectables/UserService.html":{}}}],["this.findonebyid(payload.id",{"_index":2158,"title":{},"body":{"injectables/UserService.html":{}}}],["this.flow",{"_index":441,"title":{},"body":{"classes/BaseFlow.html":{}}}],["this.flowrepository",{"_index":1250,"title":{},"body":{"injectables/FlowService.html":{}}}],["this.flowrepository.createquerybuilder('t",{"_index":1242,"title":{},"body":{"injectables/FlowService.html":{}}}],["this.flowrepository.findone",{"_index":1249,"title":{},"body":{"injectables/FlowService.html":{}}}],["this.flowrepository.save(flow",{"_index":1240,"title":{},"body":{"injectables/FlowService.html":{}}}],["this.flowrepository.save(target",{"_index":1261,"title":{},"body":{"injectables/FlowService.html":{}}}],["this.flowservice.create(user",{"_index":2170,"title":{},"body":{"injectables/UserService.html":{}}}],["this.flowservice.dispatch(payload",{"_index":1217,"title":{},"body":{"classes/FlowController.html":{}}}],["this.flowservice.findonebyid(id",{"_index":1214,"title":{},"body":{"classes/FlowController.html":{}}}],["this.flowservice.findonebyuser(user",{"_index":2169,"title":{},"body":{"injectables/UserService.html":{}}}],["this.flowservice.query(payload",{"_index":1215,"title":{},"body":{"classes/FlowController.html":{}}}],["this.flowservice.remove(payload.selectedrows.split",{"_index":1219,"title":{},"body":{"classes/FlowController.html":{}}}],["this.flowservice.save(dto",{"_index":1218,"title":{},"body":{"classes/FlowController.html":{}}}],["this.flowtemplaterepository.createquerybuilder('t",{"_index":1297,"title":{},"body":{"injectables/FlowTemplateService.html":{}}}],["this.flowtemplaterepository.findone",{"_index":442,"title":{},"body":{"classes/BaseFlow.html":{},"injectables/FlowService.html":{}}}],["this.flowtemplaterepository.findone(id",{"_index":1298,"title":{},"body":{"injectables/FlowTemplateService.html":{}}}],["this.flowtemplaterepository.save(target",{"_index":454,"title":{},"body":{"classes/BaseFlow.html":{},"injectables/FlowTemplateService.html":{}}}],["this.flowtemplateservice.findonebyid(id",{"_index":1286,"title":{},"body":{"classes/FlowTemplateController.html":{}}}],["this.flowtemplateservice.query(payload",{"_index":1287,"title":{},"body":{"classes/FlowTemplateController.html":{}}}],["this.flowtemplateservice.remove(payload.selectedrows.split",{"_index":1289,"title":{},"body":{"classes/FlowTemplateController.html":{}}}],["this.flowtemplateservice.save(dto",{"_index":1288,"title":{},"body":{"classes/FlowTemplateController.html":{}}}],["this.id",{"_index":288,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/ServiceCategory.html":{}}}],["this.importauthorities",{"_index":1695,"title":{},"body":{"injectables/Seed.html":{}}}],["this.importcategorys",{"_index":1692,"title":{},"body":{"injectables/Seed.html":{}}}],["this.importcontents(file",{"_index":1351,"title":{},"body":{"injectables/ImportService.html":{}}}],["this.importorganizations",{"_index":1694,"title":{},"body":{"injectables/Seed.html":{}}}],["this.importorganizations(file",{"_index":1353,"title":{},"body":{"injectables/ImportService.html":{}}}],["this.importroles",{"_index":1696,"title":{},"body":{"injectables/Seed.html":{}}}],["this.importservice.handlefile(file",{"_index":1978,"title":{},"body":{"classes/StorageController.html":{}}}],["this.importservicecategorys",{"_index":1693,"title":{},"body":{"injectables/Seed.html":{}}}],["this.initelasticsearchindices",{"_index":1687,"title":{},"body":{"injectables/Seed.html":{}}}],["this.jwtservice.sign(_.toplainobject(user",{"_index":2146,"title":{},"body":{"injectables/UserService.html":{}}}],["this.name",{"_index":287,"title":{},"body":{"classes/Authority.html":{},"classes/BaseFlow.html":{},"classes/Category.html":{},"classes/Organization.html":{},"classes/ServiceCategory.html":{}}}],["this.organizationrepository.findbyids(ids",{"_index":1536,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationrepository.findone",{"_index":1526,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationrepository.findone(payload.id",{"_index":1531,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationrepository.findone(payload.parentid",{"_index":1529,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationrepository.findroots",{"_index":1533,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationrepository.findtrees",{"_index":1525,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationrepository.remove",{"_index":1535,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationrepository.save(organization",{"_index":1530,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationrepository.save(target",{"_index":1532,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationservice.findonebyid(id",{"_index":1509,"title":{},"body":{"classes/OrganizationController.html":{}}}],["this.organizationservice.parent(dto",{"_index":1512,"title":{},"body":{"classes/OrganizationController.html":{}}}],["this.organizationservice.query(payload",{"_index":1510,"title":{},"body":{"classes/OrganizationController.html":{}}}],["this.organizationservice.remove(payload.selectedrows.split",{"_index":1513,"title":{},"body":{"classes/OrganizationController.html":{}}}],["this.organizationservice.save(dto",{"_index":1511,"title":{},"body":{"classes/OrganizationController.html":{}}}],["this.password",{"_index":2052,"title":{},"body":{"classes/User.html":{}}}],["this.publish_at",{"_index":786,"title":{},"body":{"classes/Content.html":{},"classes/Service.html":{}}}],["this.register",{"_index":439,"title":{},"body":{"classes/BaseFlow.html":{}}}],["this.reject",{"_index":135,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["this.repository.findbyids(ids",{"_index":462,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.findone(id",{"_index":460,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.remove(await",{"_index":461,"title":{},"body":{"classes/BaseService.html":{}}}],["this.role",{"_index":2048,"title":{},"body":{"classes/User.html":{}}}],["this.role.token",{"_index":2049,"title":{},"body":{"classes/User.html":{}}}],["this.rolerepository.createquerybuilder('t",{"_index":1603,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.findone",{"_index":1602,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["this.rolerepository.save(role",{"_index":1606,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roleservice.findoneandrelations(id",{"_index":1587,"title":{},"body":{"classes/RoleController.html":{}}}],["this.roleservice.query(payload",{"_index":1588,"title":{},"body":{"classes/RoleController.html":{}}}],["this.roleservice.remove(payload.selectedrows.split",{"_index":1590,"title":{},"body":{"classes/RoleController.html":{}}}],["this.roleservice.save(dto",{"_index":1589,"title":{},"body":{"classes/RoleController.html":{}}}],["this.save(user",{"_index":2167,"title":{},"body":{"injectables/UserService.html":{}}}],["this.searchservice.search(payload",{"_index":1646,"title":{},"body":{"classes/SearchController.html":{}}}],["this.server.clients",{"_index":1318,"title":{},"body":{"classes/IO.html":{}}}],["this.server.emit('status",{"_index":1942,"title":{},"body":{"classes/StatusTask.html":{}}}],["this.server.on('connect",{"_index":1314,"title":{},"body":{"classes/IO.html":{}}}],["this.server.use((socket",{"_index":1311,"title":{},"body":{"classes/IO.html":{}}}],["this.servicerepository.createquerybuilder('t",{"_index":1832,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.servicerepository.findone",{"_index":1833,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.servicerepository.save(target",{"_index":1835,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.serviceservice.findonebyid(id",{"_index":1819,"title":{},"body":{"classes/ServiceController.html":{}}}],["this.serviceservice.query(payload",{"_index":1820,"title":{},"body":{"classes/ServiceController.html":{}}}],["this.serviceservice.remove(payload.selectedrows.split",{"_index":1822,"title":{},"body":{"classes/ServiceController.html":{}}}],["this.serviceservice.save(dto",{"_index":1821,"title":{},"body":{"classes/ServiceController.html":{}}}],["this.settingrepository.findone",{"_index":1878,"title":{},"body":{"injectables/SettingService.html":{}}}],["this.settingrepository.save(target",{"_index":1880,"title":{},"body":{"injectables/SettingService.html":{}}}],["this.settingservice.getsettingbytoken",{"_index":686,"title":{},"body":{"injectables/CommonService.html":{},"classes/SettingController.html":{}}}],["this.settingservice.save(dto",{"_index":1867,"title":{},"body":{"classes/SettingController.html":{}}}],["this.socketio",{"_index":1310,"title":{},"body":{"classes/IO.html":{}}}],["this.state",{"_index":1194,"title":{},"body":{"classes/Flow.html":{}}}],["this.summary",{"_index":792,"title":{},"body":{"classes/Content.html":{},"classes/Service.html":{}}}],["this.template",{"_index":443,"title":{},"body":{"classes/BaseFlow.html":{},"classes/Flow.html":{}}}],["this.template.ex_info",{"_index":1195,"title":{},"body":{"classes/Flow.html":{}}}],["this.text",{"_index":799,"title":{},"body":{"classes/Content.html":{}}}],["this.thumbnailpath",{"_index":801,"title":{},"body":{"classes/Content.html":{}}}],["this.title",{"_index":798,"title":{},"body":{"classes/Content.html":{}}}],["this.token",{"_index":1573,"title":{},"body":{"classes/Role.html":{}}}],["this.userrepository.createquerybuilder('t",{"_index":2120,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":2147,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(user",{"_index":2144,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.applyvolunteer(dto",{"_index":2089,"title":{},"body":{"classes/UserController.html":{}}}],["this.userservice.changepassword(user.id",{"_index":2092,"title":{},"body":{"classes/UserController.html":{}}}],["this.userservice.findonebyid(params.id",{"_index":2083,"title":{},"body":{"classes/UserController.html":{}}}],["this.userservice.findonebyid(payload.id",{"_index":1398,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userservice.findonebyid(user.id",{"_index":2087,"title":{},"body":{"classes/UserController.html":{}}}],["this.userservice.login(dto.account",{"_index":1435,"title":{},"body":{"classes/LoginController.html":{}}}],["this.userservice.query(payload",{"_index":2084,"title":{},"body":{"classes/UserController.html":{}}}],["this.userservice.remove(payload.selectedrows.split",{"_index":2094,"title":{},"body":{"classes/UserController.html":{}}}],["this.userservice.save(dto",{"_index":2093,"title":{},"body":{"classes/UserController.html":{}}}],["this.verify",{"_index":134,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["this.videopath",{"_index":802,"title":{},"body":{"classes/Content.html":{}}}],["this.views",{"_index":803,"title":{},"body":{"classes/Content.html":{}}}],["this.vip",{"_index":2055,"title":{},"body":{"classes/User.html":{}}}],["throw",{"_index":338,"title":{},"body":{"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ExcelHelper.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"injectables/JwtStrategy.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/StorageController.html":{},"injectables/UserService.html":{}}}],["thumbnail",{"_index":716,"title":{},"body":{"classes/Content.html":{},"classes/CreateContentDto.html":{},"classes/Service.html":{},"classes/UpdateContentDto.html":{},"miscellaneous/variables.html":{}}}],["thumbnailpath",{"_index":721,"title":{},"body":{"classes/Content.html":{},"classes/Service.html":{}}}],["timeout",{"_index":1895,"title":{},"body":{"classes/StatusTask.html":{}}}],["timeout(5000",{"_index":1909,"title":{},"body":{"classes/StatusTask.html":{}}}],["timestamp",{"_index":737,"title":{},"body":{"classes/Content.html":{},"classes/ExceptionsFilter.html":{},"classes/Service.html":{},"miscellaneous/variables.html":{}}}],["timewindow",{"_index":2381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":216,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/CreateContentDto.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/UpdateContentDto.html":{},"miscellaneous/variables.html":{}}}],["titlearr",{"_index":1085,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["titlearr[cellnumber",{"_index":1089,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["titlearr[cellnumber].split",{"_index":1091,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["todo",{"_index":2157,"title":{},"body":{"injectables/UserService.html":{}}}],["tohtml",{"_index":1172,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["token",{"_index":185,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/Authority.html":{},"classes/Carousel.html":{},"classes/CarouselController.html":{},"injectables/CarouselService.html":{},"classes/Role.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["toplainonly",{"_index":2041,"title":{},"body":{"classes/User.html":{}}}],["tort",{"_index":2354,"title":{},"body":{"license.html":{}}}],["trace",{"_index":870,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["trace(...args",{"_index":930,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["transaction",{"_index":120,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/UserService.html":{}}}],["transactionrepository",{"_index":140,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/UserService.html":{}}}],["transactionrepository(flow",{"_index":166,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["transactionrepository(role",{"_index":183,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/UserService.html":{}}}],["transactionrepository(user",{"_index":165,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/UserService.html":{}}}],["transformclasstoplain",{"_index":509,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/ContentService.html":{},"injectables/FlowService.html":{},"injectables/RoleService.html":{},"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["transformclasstoplain()@transaction",{"_index":2112,"title":{},"body":{"injectables/UserService.html":{}}}],["transformer",{"_index":274,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"injectables/CarouselService.html":{},"classes/Category.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/Flow.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"injectables/ServiceService.html":{},"classes/Setting.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["tree",{"_index":277,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Organization.html":{},"classes/ServiceCategory.html":{}}}],["tree('materialized",{"_index":282,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Organization.html":{},"classes/ServiceCategory.html":{}}}],["treechildren",{"_index":219,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Organization.html":{},"classes/ServiceCategory.html":{}}}],["treeparent",{"_index":233,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Organization.html":{},"classes/ServiceCategory.html":{}}}],["treerepository",{"_index":358,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"injectables/OrganizationService.html":{},"injectables/ServiceCategoryService.html":{}}}],["true",{"_index":231,"title":{},"body":{"classes/Authority.html":{},"classes/Carousel.html":{},"injectables/CommonService.html":{},"classes/ContextTrace.html":{},"classes/FlowTemplate.html":{},"injectables/ImportService.html":{},"classes/Logger.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/StorageController.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["true})@column({comment",{"_index":2020,"title":{},"body":{"classes/User.html":{}}}],["try",{"_index":1026,"title":{},"body":{"classes/Engine.html":{},"interfaces/IFlow.html":{},"classes/SMS.html":{},"classes/StorageController.html":{}}}],["ttl",{"_index":2399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":284,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/ContextTrace.html":{},"classes/ExceptionsFilter.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Logger.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/SMS.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/StatusTask.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":887,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["typeorm",{"_index":141,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/Authority.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseFlow.html":{},"classes/BaseService.html":{},"classes/Carousel.html":{},"injectables/CarouselService.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/Engine.html":{},"classes/Flow.html":{},"injectables/FlowService.html":{},"classes/FlowTemplate.html":{},"injectables/FlowTemplateService.html":{},"interfaces/IFlow.html":{},"injectables/ImportService.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"injectables/OrganizationService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"injectables/Seed.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"injectables/ServiceCategoryService.html":{},"injectables/ServiceService.html":{},"classes/Setting.html":{},"injectables/SettingService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["typeormmodule",{"_index":617,"title":{},"body":{"modules/CommonModule.html":{}}}],["typeormmodule.forfeature",{"_index":664,"title":{},"body":{"modules/CommonModule.html":{}}}],["typeormmodule.forroot(config.orm",{"_index":663,"title":{},"body":{"modules/CommonModule.html":{}}}],["typeormmoduleoptions",{"_index":618,"title":{},"body":{"modules/CommonModule.html":{}}}],["typeoutput",{"_index":894,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["unauthorizedexception",{"_index":1392,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":227,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["undefined)@jointable",{"_index":1556,"title":{},"body":{"classes/Role.html":{}}}],["unique",{"_index":230,"title":{},"body":{"classes/Authority.html":{},"classes/Carousel.html":{},"classes/FlowTemplate.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["unknown",{"_index":1130,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["unlink",{"_index":1928,"title":{},"body":{"classes/StatusTask.html":{}}}],["unlinkdir",{"_index":1929,"title":{},"body":{"classes/StatusTask.html":{}}}],["update",{"_index":294,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"classes/UserController.html":{}}}],["update(@body",{"_index":345,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"classes/UserController.html":{}}}],["update(dto",{"_index":315,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"classes/UserController.html":{}}}],["update_at",{"_index":212,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["updatecontentdto",{"_index":973,"title":{"classes/UpdateContentDto.html":{}},"body":{"classes/CreateContentDto.html":{},"classes/UpdateContentDto.html":{},"coverage.html":{}}}],["updatedatecolumn",{"_index":416,"title":{},"body":{"classes/Base.html":{}}}],["updatedatecolumn({comment",{"_index":257,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Carousel.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Flow.html":{},"classes/FlowTemplate.html":{},"classes/Notice.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Service.html":{},"classes/ServiceCategory.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["upload",{"_index":1944,"title":{},"body":{"classes/StorageController.html":{},"miscellaneous/enumerations.html":{}}}],["upload(@req",{"_index":1966,"title":{},"body":{"classes/StorageController.html":{}}}],["upload(req",{"_index":1948,"title":{},"body":{"classes/StorageController.html":{}}}],["uploadactiontype",{"_index":1960,"title":{},"body":{"classes/StorageController.html":{},"miscellaneous/enumerations.html":{}}}],["uploadactiontype.import",{"_index":1973,"title":{},"body":{"classes/StorageController.html":{}}}],["uploadactiontype.upload",{"_index":1972,"title":{},"body":{"classes/StorageController.html":{}}}],["uploaddirpath",{"_index":1911,"title":{},"body":{"classes/StatusTask.html":{}}}],["uploadpath",{"_index":2391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploads",{"_index":1708,"title":{},"body":{"injectables/Seed.html":{},"classes/StatusTask.html":{},"miscellaneous/variables.html":{}}}],["uploadtoken",{"_index":1945,"title":{},"body":{"classes/StorageController.html":{}}}],["url",{"_index":1167,"title":{},"body":{"classes/ExceptionsFilter.html":{},"classes/Setting.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":2314,"title":{},"body":{"license.html":{}}}],["useguards",{"_index":320,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{}}}],["useguards(authguard",{"_index":334,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{}}}],["useinterceptors",{"_index":325,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"classes/UserController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":335,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CarouselController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/FlowController.html":{},"classes/FlowTemplateController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/ServiceCategoryController.html":{},"classes/ServiceController.html":{},"classes/SettingController.html":{},"classes/UserController.html":{}}}],["usepipes",{"_index":1428,"title":{},"body":{"classes/LoginController.html":{},"classes/UserController.html":{}}}],["usepipes(new",{"_index":1433,"title":{},"body":{"classes/LoginController.html":{},"classes/UserController.html":{}}}],["user",{"_index":142,"title":{"classes/User.html":{}},"body":{"injectables/ApplyVolunteerFlow.html":{},"modules/CommonModule.html":{},"classes/Engine.html":{},"classes/Flow.html":{},"injectables/FlowService.html":{},"interfaces/IFlow.html":{},"injectables/JwtStrategy.html":{},"classes/Organization.html":{},"classes/Role.html":{},"injectables/Seed.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.account",{"_index":2142,"title":{},"body":{"injectables/UserService.html":{}}}],["user.address",{"_index":2165,"title":{},"body":{"injectables/UserService.html":{}}}],["user.create",{"_index":1700,"title":{},"body":{"injectables/Seed.html":{}}}],["user.create(options.operator",{"_index":180,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["user.create(payload",{"_index":2150,"title":{},"body":{"injectables/UserService.html":{}}}],["user.entity",{"_index":1189,"title":{},"body":{"classes/Flow.html":{},"classes/Organization.html":{},"classes/Role.html":{}}}],["user.flows",{"_index":1191,"title":{},"body":{"classes/Flow.html":{}}}],["user.id",{"_index":1256,"title":{},"body":{"injectables/FlowService.html":{}}}],["user.idcard",{"_index":2163,"title":{},"body":{"injectables/UserService.html":{}}}],["user.org",{"_index":1495,"title":{},"body":{"classes/Organization.html":{}}}],["user.password",{"_index":2143,"title":{},"body":{"injectables/UserService.html":{}}}],["user.phone",{"_index":2161,"title":{},"body":{"injectables/UserService.html":{}}}],["user.points",{"_index":2154,"title":{},"body":{"injectables/UserService.html":{}}}],["user.realname",{"_index":2159,"title":{},"body":{"injectables/UserService.html":{}}}],["user.role",{"_index":191,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/Role.html":{},"injectables/UserService.html":{}}}],["user.status",{"_index":170,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/UserService.html":{}}}],["user_register",{"_index":1611,"title":{},"body":{"classes/SMS.html":{},"miscellaneous/enumerations.html":{}}}],["usercontroller",{"_index":19,"title":{"classes/UserController.html":{}},"body":{"modules/ApiModule.html":{},"classes/UserController.html":{},"coverage.html":{}}}],["userid",{"_index":1255,"title":{},"body":{"injectables/FlowService.html":{}}}],["username",{"_index":2414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrepos",{"_index":118,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/UserService.html":{}}}],["userrepos.findone",{"_index":187,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["userrepos.save(user",{"_index":172,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/UserService.html":{}}}],["userrepository",{"_index":2099,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":1482,"title":{},"body":{"classes/Organization.html":{},"classes/Role.html":{}}}],["userservice",{"_index":609,"title":{"injectables/UserService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginController.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["util",{"_index":864,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["util.inspect(value",{"_index":888,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["util.promisify(fs.readfile",{"_index":2448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uuid",{"_index":1956,"title":{},"body":{"classes/StorageController.html":{}}}],["v0",{"_index":2232,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["v1",{"_index":2233,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["v2",{"_index":2234,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["v3",{"_index":2235,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["v4",{"_index":2236,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["v5",{"_index":2237,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["val",{"_index":1115,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["validate",{"_index":1383,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":1386,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationpipe",{"_index":1426,"title":{},"body":{"classes/LoginController.html":{},"classes/UserController.html":{}}}],["validator",{"_index":94,"title":{},"body":{"classes/ApplyVolunteerDto.html":{},"classes/CreateContentDto.html":{},"classes/LoginDto.html":{},"classes/PasswordDto.html":{},"classes/UpdateContentDto.html":{}}}],["value",{"_index":218,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/ContextTrace.html":{},"classes/Logger.html":{},"classes/Organization.html":{},"classes/ServiceCategory.html":{}}}],["value.columnnumber",{"_index":886,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["value.context",{"_index":884,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["value.linenumber",{"_index":885,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["var",{"_index":1612,"title":{},"body":{"classes/SMS.html":{}}}],["variable",{"_index":2186,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2363,"title":{"miscellaneous/variables.html":{}},"body":{}}],["var}，您好，您的密码是：{$var}，{$var",{"_index":1614,"title":{},"body":{"classes/SMS.html":{}}}],["verify",{"_index":109,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["verify(flow",{"_index":128,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["video",{"_index":717,"title":{},"body":{"classes/Content.html":{},"classes/Service.html":{},"miscellaneous/variables.html":{}}}],["videopath",{"_index":722,"title":{},"body":{"classes/Content.html":{},"classes/Service.html":{}}}],["views",{"_index":718,"title":{},"body":{"classes/Content.html":{},"classes/CreateContentDto.html":{},"classes/Service.html":{},"classes/UpdateContentDto.html":{}}}],["vip",{"_index":2006,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["vip.v0",{"_index":2043,"title":{},"body":{"classes/User.html":{}}}],["void",{"_index":11,"title":{},"body":{"modules/ApiModule.html":{},"classes/Engine.html":{},"classes/Logger.html":{}}}],["volunteer",{"_index":186,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/User.html":{}}}],["volunteer.dto.ts",{"_index":76,"title":{},"body":{"classes/ApplyVolunteerDto.html":{},"coverage.html":{}}}],["volunteer.dto.ts:18",{"_index":90,"title":{},"body":{"classes/ApplyVolunteerDto.html":{}}}],["volunteer.dto.ts:24",{"_index":85,"title":{},"body":{"classes/ApplyVolunteerDto.html":{}}}],["volunteer.dto.ts:30",{"_index":84,"title":{},"body":{"classes/ApplyVolunteerDto.html":{}}}],["volunteer.dto.ts:9",{"_index":91,"title":{},"body":{"classes/ApplyVolunteerDto.html":{}}}],["volunteer.flow",{"_index":653,"title":{},"body":{"modules/CommonModule.html":{}}}],["volunteer.flow.ts",{"_index":101,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"coverage.html":{}}}],["volunteer.flow.ts:111",{"_index":125,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["volunteer.flow.ts:122",{"_index":123,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["volunteer.flow.ts:14",{"_index":138,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["volunteer.flow.ts:30",{"_index":114,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["volunteer.flow.ts:40",{"_index":121,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["volunteer.flow.ts:64",{"_index":130,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["volunteer.flow.ts:90",{"_index":127,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["warn",{"_index":872,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["warn(...args",{"_index":938,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["warning",{"_index":1401,"title":{},"body":{"classes/Logger.html":{}}}],["warning(...args",{"_index":940,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["warranties",{"_index":2340,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2335,"title":{},"body":{"license.html":{}}}],["watchfiles",{"_index":1884,"title":{},"body":{"classes/StatusTask.html":{}}}],["week",{"_index":1903,"title":{},"body":{"classes/StatusTask.html":{}}}],["wf",{"_index":1038,"title":{},"body":{"classes/Engine.html":{},"injectables/FlowService.html":{},"interfaces/IFlow.html":{},"classes/MQ.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["wf.dispatch(flow.id",{"_index":1241,"title":{},"body":{"injectables/FlowService.html":{},"injectables/UserService.html":{}}}],["wfresult",{"_index":154,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/Engine.html":{},"classes/Flow.html":{},"injectables/FlowService.html":{},"interfaces/IFlow.html":{},"miscellaneous/enumerations.html":{}}}],["wfresult.failure",{"_index":196,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["wfresult.running",{"_index":175,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/FlowService.html":{}}}],["wfresult.success",{"_index":193,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["wfstatus",{"_index":155,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"classes/Engine.html":{},"classes/Flow.html":{},"injectables/FlowService.html":{},"interfaces/IFlow.html":{},"miscellaneous/enumerations.html":{}}}],["wfstatus.canceled",{"_index":197,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["wfstatus.over",{"_index":194,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{}}}],["wfstatus.running",{"_index":177,"title":{},"body":{"injectables/ApplyVolunteerFlow.html":{},"injectables/FlowService.html":{}}}],["where('role.id",{"_index":395,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["where('user.id",{"_index":1254,"title":{},"body":{"injectables/FlowService.html":{}}}],["where(`role.id",{"_index":392,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["where.account",{"_index":2138,"title":{},"body":{"injectables/UserService.html":{}}}],["whether",{"_index":2352,"title":{},"body":{"license.html":{}}}],["without",{"_index":2309,"title":{},"body":{"license.html":{}}}],["work_or",{"_index":2223,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["workbook",{"_index":1050,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["workbook.addworksheet(sheetsmap.map",{"_index":1101,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["workbook.eachsheet((worksheet",{"_index":1065,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["workbook.xlsx.load(buffer",{"_index":1064,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["workbook.xlsx.readfile(filepath",{"_index":1062,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["workbook.xlsx.writebuffer",{"_index":1125,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["workorderflow",{"_index":611,"title":{"injectables/WorkOrderFlow.html":{}},"body":{"modules/CommonModule.html":{},"injectables/WorkOrderFlow.html":{},"coverage.html":{},"overview.html":{}}}],["worksheet.eachrow((row",{"_index":1074,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["worksheet.getrow(1).eachcell((cell",{"_index":1086,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["worksheet.name",{"_index":1080,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["yarn",{"_index":2270,"title":{},"body":{"index.html":{}}}],["yarn:ic",{"_index":2271,"title":{},"body":{"index.html":{}}}],["youch",{"_index":1135,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["youch(exception",{"_index":1163,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["yyxyepuckk2vdpjkkcwzqaac_uauaxx1eqd26hl6",{"_index":2433,"title":{},"body":{"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/ApiModule.html":{"url":"modules/ApiModule.html","title":"module - ApiModule","body":"\n                   \n\n\n\n\n    模块列表\n    ApiModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            server/src/api/api.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/api/api.module.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, NestModule, MiddlewareConsumer } from '@nestjs/common';\nimport { logger } from '../common/aspects/middlewares';\nimport { LoginController } from './controllers/login.controller';\nimport { UserController } from './controllers/user.controller';\nimport { StorageController } from './controllers/storage.controller';\nimport { ContentController } from './controllers/content.controller';\nimport { SettingController } from './controllers/setting.controller';\nimport { CategoryController } from './controllers/category.controller';\nimport { OrganizationController } from './controllers/organization.controller';\nimport { RoleController } from './controllers/role.controller';\nimport { AuthorityController } from './controllers/authority.controller';\nimport { SearchController } from './controllers/search.controller';\nimport { ServiceCategoryController } from './controllers/service-category.controller';\nimport { ServiceController } from './controllers/service.controller';\nimport { CarouselController } from './controllers/carousel.controller';\nimport { FlowTemplateController } from './controllers/flow-template.controller';\nimport { FlowController } from './controllers/flow.controller';\n\n@Module({\n    controllers: [\n        StorageController,\n        SettingController,\n        LoginController,\n        UserController,\n        ContentController,\n        CategoryController,\n        CarouselController,\n        ServiceController,\n        ServiceCategoryController,\n        OrganizationController,\n        AuthorityController,\n        RoleController,\n        SearchController,\n        FlowController,\n        FlowTemplateController\n    ]\n})\nexport class ApiModule implements NestModule {\n    configure(consumer: MiddlewareConsumer): void {\n        consumer.apply(logger).forRoutes('*');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    模块列表\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nApiModule\n\nApiModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nSSRModule\n\nSSRModule\n\nAppModule -->\n\nSSRModule->AppModule\n\n\n\n\n\nSeed\n\nSeed\n\nAppModule -->\n\nSeed->AppModule\n\n\n\n\n\n\n    \n    \n    \n        放大\n        重置\n        缩小\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            server/src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    提供商列表\n                    \n                        \n                            Seed\n                        \n                    \n                \n                \n                    引入\n                    \n                        \n                            ApiModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            SSRModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Seed } from './seed';\nimport { CommonModule } from './common/common.module';\nimport { ApiModule } from './api/api.module';\nimport { SSRModule } from './ssr/ssr.module';\n\n@Module({\n    imports: [CommonModule, ApiModule, SSRModule],\n    providers: [Seed]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/ApplyVolunteerDto.html":{"url":"classes/ApplyVolunteerDto.html","title":"class - ApplyVolunteerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  ApplyVolunteerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/dtos/apply-volunteer.dto.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                address\n                            \n                            \n                                    Readonly\n                                idCard\n                            \n                            \n                                    Readonly\n                                phone\n                            \n                            \n                                    Readonly\n                                realName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@IsNotEmpty({message: '联系地址不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/apply-volunteer.dto.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            idCard\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@IsNotEmpty({message: '身份证号不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/apply-volunteer.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@IsMobilePhone('zh-CN', {message: '手机号无效'})@IsNotEmpty({message: '手机号不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/apply-volunteer.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            realName\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@IsNotEmpty({message: '姓名不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/apply-volunteer.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMobilePhone, IsNotEmpty } from 'class-validator';\nimport { ApiModelProperty } from '@nestjs/swagger';\n\nexport class ApplyVolunteerDto {\n    @ApiModelProperty()\n    @IsNotEmpty({\n        message: '姓名不能为空'\n    })\n    readonly realName: string;\n\n    @ApiModelProperty()\n    @IsMobilePhone('zh-CN', {\n        message: '手机号无效'\n    })\n    @IsNotEmpty({\n        message: '手机号不能为空'\n    })\n    readonly phone: string;\n\n    @ApiModelProperty()\n    @IsNotEmpty({\n        message: '身份证号不能为空'\n    })\n    readonly idCard: string;\n\n    @ApiModelProperty()\n    @IsNotEmpty({\n        message: '联系地址不能为空'\n    })\n    readonly address: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/ApplyVolunteerFlow.html":{"url":"injectables/ApplyVolunteerFlow.html","title":"injectable - ApplyVolunteerFlow","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  ApplyVolunteerFlow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/flows/apply-volunteer.flow.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseFlow\n            \n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                flow\n                            \n                            \n                                flow\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                apply\n                            \n                            \n                                    Async\n                                cancel\n                            \n                            \n                                    Async\n                                complete\n                            \n                            \n                                    Async\n                                reject\n                            \n                            \n                                    Async\n                                verify\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(flowTemplateRepository: Repository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/flows/apply-volunteer.flow.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        flowTemplateRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            apply\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    apply(flow, options, userRepos?: Repository, flowRepos?: Repository)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Transaction()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/flows/apply-volunteer.flow.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    flow\n                                    \n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    userRepos\n                                    \n                                                Repository\n                                    \n\n                                    \n                                        是\n                                    \n\n\n                                \n                                \n                                    flowRepos\n                                    \n                                                Repository\n                                    \n\n                                    \n                                        是\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel(flow, options, userRepos?: Repository, flowRepos?: Repository)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Transaction()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/flows/apply-volunteer.flow.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    flow\n                                    \n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    userRepos\n                                    \n                                                Repository\n                                    \n\n                                    \n                                        是\n                                    \n\n\n                                \n                                \n                                    flowRepos\n                                    \n                                                Repository\n                                    \n\n                                    \n                                        是\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            complete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    complete(flow, options, flowRepos?: Repository)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Transaction()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/flows/apply-volunteer.flow.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    flow\n                                    \n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    flowRepos\n                                    \n                                                Repository\n                                    \n\n                                    \n                                        是\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            reject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reject(flow, options, userRepos?: Repository, flowRepos?: Repository)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Transaction()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/flows/apply-volunteer.flow.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    flow\n                                    \n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    userRepos\n                                    \n                                                Repository\n                                    \n\n                                    \n                                        是\n                                    \n\n\n                                \n                                \n                                    flowRepos\n                                    \n                                                Repository\n                                    \n\n                                    \n                                        是\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verify\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verify(flow, options, userRepos?: Repository, roleRepos?: Repository, flowRepos?: Repository)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Transaction()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/flows/apply-volunteer.flow.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    flow\n                                    \n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    userRepos\n                                    \n                                                Repository\n                                    \n\n                                    \n                                        是\n                                    \n\n\n                                \n                                \n                                    roleRepos\n                                    \n                                                Repository\n                                    \n\n                                    \n                                        是\n                                    \n\n\n                                \n                                \n                                    flowRepos\n                                    \n                                                Repository\n                                    \n\n                                    \n                                        是\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    继承自         BaseFlow\n\n                \n            \n            \n                \n                        被定义在         BaseFlow:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register()\n                \n            \n\n\n            \n                \n                    继承自         BaseFlow\n\n                \n            \n            \n                \n                        被定义在         BaseFlow:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flow\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n        未审核: {\n            申请: this.apply\n        },\n        待审核: {\n            审核: this.verify,\n            驳回: this.reject,\n            取消: this.cancel\n        },\n        已驳回: {\n            重新申请: this.apply,\n            取消: this.cancel\n        },\n        已审核: {\n            完成: this.complete\n        }\n    }\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/flows/apply-volunteer.flow.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flow\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                            \n                                \n                                    继承自         BaseFlow\n\n                                \n                            \n                        \n                            \n                                    被定义在         BaseFlow:10\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Transaction, TransactionRepository, Repository } from 'typeorm';\nimport { User } from '../entities/user.entity';\nimport { FlowTemplateEnum } from '../aspects/enum';\nimport { Flow } from '../entities/flow.entity';\nimport { FlowTemplate } from '../entities/flow-template.entity';\nimport { BaseFlow } from './base.flow';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { OVER, WFResult, WFStatus } from '../lib/wf';\nimport { Role } from '../entities/role.entity';\n\n@Injectable()\nexport class ApplyVolunteerFlow extends BaseFlow {\n    flow: any = {\n        未审核: {\n            申请: this.apply\n        },\n        待审核: {\n            审核: this.verify,\n            驳回: this.reject,\n            取消: this.cancel\n        },\n        已驳回: {\n            重新申请: this.apply,\n            取消: this.cancel\n        },\n        已审核: {\n            完成: this.complete\n        }\n    };\n\n    constructor(\n        @InjectRepository(FlowTemplate)\n        protected readonly flowTemplateRepository: Repository\n    ) {\n        super('志愿者申请', FlowTemplateEnum.APPLY_VR, flowTemplateRepository);\n    }\n\n    @Transaction()\n    async apply(\n        flow,\n        options,\n        @TransactionRepository(User) userRepos?: Repository,\n        @TransactionRepository(Flow) flowRepos?: Repository\n    ) {\n        const nextState = '待审核';\n\n        const user = flow.user;\n        user.status = nextState;\n        await userRepos.save(user);\n\n        flow = Flow.create(flow) as Flow;\n        flow.wfResult = WFResult.RUNNING;\n        flow.wfStatus = WFStatus.RUNNING;\n        flow.state = nextState;\n\n        flow.operator = User.create(options.operator) as User;\n\n        await flowRepos.save(flow);\n        return nextState;\n    }\n\n    @Transaction()\n    async verify(\n        flow,\n        options,\n        @TransactionRepository(User) userRepos?: Repository,\n        @TransactionRepository(Role) roleRepos?: Repository,\n        @TransactionRepository(Flow) flowRepos?: Repository\n    ) {\n        const nextState = '已审核';\n\n        const role = await roleRepos.findOne({ where: { token: 'volunteer' } });\n\n        const user = await userRepos.findOne({ where: { id: flow.user.id }, relations: ['role'] });\n        user.status = nextState;\n        user.role = role;\n\n        await userRepos.save(user);\n\n        flow = Flow.create(flow) as Flow;\n        flow.state = nextState;\n        flow.operator = User.create(options.operator) as User;\n\n        await flowRepos.save(flow);\n        return [nextState, { nextStep: '完成' }];\n    }\n\n    @Transaction()\n    async reject(\n        flow,\n        options,\n        @TransactionRepository(User) userRepos?: Repository,\n        @TransactionRepository(Flow) flowRepos?: Repository\n    ) {\n        const nextState = '已驳回';\n        const user = flow.user;\n        user.status = nextState;\n\n        await userRepos.save(user);\n\n        flow = Flow.create(flow) as Flow;\n        flow.state = nextState;\n        flow.operator = User.create(options.operator) as User;\n\n        await flowRepos.save(flow);\n        return nextState;\n    }\n\n    @Transaction()\n    async complete(flow, options, @TransactionRepository(Flow) flowRepos?: Repository) {\n        flow = Flow.create(flow) as Flow;\n        flow.wfResult = WFResult.SUCCESS;\n        flow.wfStatus = WFStatus.OVER;\n        flow.operator = User.create(options.operator) as User;\n\n        await flowRepos.delete(flow.id);\n        return OVER;\n    }\n\n    @Transaction()\n    async cancel(\n        flow,\n        options,\n        @TransactionRepository(User) userRepos?: Repository,\n        @TransactionRepository(Flow) flowRepos?: Repository\n    ) {\n        const user = flow.user;\n        user.status = '';\n        await userRepos.save(user);\n\n        flow = Flow.create(flow) as Flow;\n        flow.state = '已取消';\n        flow.wfResult = WFResult.FAILURE;\n        flow.wfStatus = WFStatus.CANCELED;\n        flow.operator = User.create(options.operator) as User;\n\n        await flowRepos.save(flow);\n        return [OVER, { nextStep: '完成' }];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Authority.html":{"url":"classes/Authority.html","title":"class - Authority","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Authority\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/authority.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                desc\n                            \n                            \n                                ex_info\n                            \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                            \n                                roles\n                            \n                            \n                                    Static\n                                    Readonly\n                                sheetsMap\n                            \n                            \n                                sort\n                            \n                            \n                                token\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    label\n                                \n                                \n                                    title\n                                \n                                \n                                    key\n                                \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Authority[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @TreeChildren()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/authority.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desc\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '描述', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/authority.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/authority.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '名称', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/authority.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Authority\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @TreeParent()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/authority.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Role[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ManyToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/authority.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            sheetsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n        权限: {\n            map: 'authorities',\n            handleType: ExcelHandleType.ARRAY,\n            cellsMap: {\n                ID: 'id',\n                名称: 'name',\n                标识: 'token',\n                描述: 'desc',\n                排序: 'sort',\n                PID: 'parent'\n            }\n        }\n    }\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/authority.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '排序', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/authority.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '标识', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/authority.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: Object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/authority.entity.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                Object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(info: any)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    info\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n\n                \n                    \n                        getlabel()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/authority.entity.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/authority.entity.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n\n                \n                    \n                        getkey()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/authority.entity.ts:49\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/authority.entity.ts:54\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { plainToClass, Expose } from 'class-transformer';\nimport { Base } from './base';\nimport { Entity, Column, Tree, TreeParent, TreeChildren, ManyToMany } from 'typeorm';\nimport { ExcelHandleType } from '../lib/excel';\nimport { Role } from '../../common/entities/role.entity';\n\n@Entity()\n@Tree('materialized-path')\nexport class Authority extends Base {\n    @Column({\n        comment: '名称',\n        unique: true\n    })\n    name: string;\n\n    @Column({\n        comment: '标识',\n        unique: true\n    })\n    token: string;\n\n    @Column({ comment: '描述', default: '' })\n    desc: string;\n\n    @Column({ comment: '排序', default: 0 })\n    sort: number;\n\n    @Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n    ex_info: any;\n\n    @TreeChildren() children: Authority[];\n\n    @TreeParent() parent: Authority;\n\n    @ManyToMany((type) => Role, (role) => role.authorities)\n    roles: Role[];\n\n    @Expose()\n    get label(): string {\n        return this.name;\n    }\n\n    @Expose()\n    get title(): string {\n        return this.name;\n    }\n\n    @Expose()\n    get key(): string {\n        return this.id;\n    }\n\n    @Expose()\n    get value(): string {\n        return this.id;\n    }\n\n    static readonly sheetsMap: object = {\n        权限: {\n            map: 'authorities',\n            handleType: ExcelHandleType.ARRAY,\n            cellsMap: {\n                ID: 'id',\n                名称: 'name',\n                标识: 'token',\n                描述: 'desc',\n                排序: 'sort',\n                PID: 'parent'\n            }\n        }\n    };\n\n    static create(target: Object) {\n        return plainToClass(Authority, target);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/AuthorityController.html":{"url":"classes/AuthorityController.html","title":"class - AuthorityController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  AuthorityController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/authority.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                parent\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(authorityService: AuthorityService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/authority.controller.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        authorityService\n                                                  \n                                                        \n                                                                        AuthorityService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/authority.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/authority.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('list')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/authority.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            parent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parent(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put('parent')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/authority.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/authority.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/authority.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport {\n    UseGuards,\n    Get,\n    Query,\n    Delete,\n    Param,\n    BadRequestException,\n    Post,\n    Put,\n    Body,\n    UseInterceptors\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ClassSerializerInterceptor } from '@nestjs/common';\nimport { Api } from '../../common/aspects/decorator';\nimport { AuthorityService } from '../../common/services/authority.service';\n\n@Api('authority')\n@ApiUseTags('authority')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\n@UseInterceptors(ClassSerializerInterceptor)\nexport class AuthorityController {\n    constructor(private readonly authorityService: AuthorityService) {}\n\n    @Get(':id')\n    async findOne(@Param('id') id) {\n        if (!id) throw new BadRequestException('参数 id 错误');\n\n        return await this.authorityService.findOneById(id);\n    }\n\n    @Get('list')\n    async list(@Query() payload) {\n        return await this.authorityService.query(payload);\n    }\n\n    @Post()\n    async create(@Body() dto: any) {\n        return await this.authorityService.save(dto);\n    }\n\n    @Put()\n    async update(@Body() dto: any) {\n        return await this.authorityService.save(dto);\n    }\n\n    @Put('parent')\n    async parent(@Body() dto: any) {\n        return await this.authorityService.parent(dto);\n    }\n\n    @Delete()\n    async remove(@Query() payload) {\n        return await this.authorityService.delete(payload.selectedRows.split(','));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/AuthorityService.html":{"url":"injectables/AuthorityService.html","title":"injectable - AuthorityService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  AuthorityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/authority.service.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseService\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findByRoleId\n                            \n                            \n                                    Async\n                                findByRoles\n                            \n                            \n                                    Async\n                                findOneByName\n                            \n                            \n                                    Async\n                                parent\n                            \n                            \n                                    Async\n                                query\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(authorityRepository: TreeRepository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/authority.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        authorityRepository\n                                                  \n                                                        \n                                                                        TreeRepository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(ids: string[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/authority.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByRoleId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByRoleId(roleId: string)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/authority.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    roleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByRoles(roles: string[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/authority.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByName(name: string)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/authority.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            parent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parent(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/authority.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/authority.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/authority.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { Injectable, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TreeRepository } from 'typeorm';\nimport { BaseService } from './base.service';\nimport { Authority } from '../entities/authority.entity';\n\n@Injectable()\nexport class AuthorityService extends BaseService {\n    constructor(\n        @InjectRepository(Authority) private readonly authorityRepository: TreeRepository\n    ) {\n        super(authorityRepository);\n    }\n\n    async query(payload: any) {\n        return await this.authorityRepository.findTrees();\n    }\n\n    async findByRoles(roles: string[]) {\n        return await this.authorityRepository\n            .createQueryBuilder('t')\n            .leftJoin('t.roles', 'role')\n            .where(`role.id IN(${roles.join(',')})`)\n            .getMany();\n    }\n\n    async findByRoleId(roleId: string) {\n        return await this.authorityRepository\n            .createQueryBuilder('t')\n            .leftJoin('t.roles', 'role')\n            .where('role.id =:roleId', { roleId })\n            .getMany();\n    }\n\n    async findOneByName(name: string) {\n        return await this.authorityRepository.findOne({ name });\n    }\n\n    async save(payload: any) {\n        const target = Authority.create(payload) as Authority;\n\n        if (!!payload.parentId) {\n            target.parent = await this.authorityRepository.findOne(payload.parentId);\n        }\n\n        return await this.authorityRepository.save(target);\n    }\n\n    async parent(payload: any) {\n        const target = await this.authorityRepository.findOne(payload.id);\n        target.parent = await this.authorityRepository.findOne(payload.parentId);\n\n        return await this.authorityRepository.save(target);\n    }\n\n    async delete(ids: string[]) {\n        const roots = await this.authorityRepository.findRoots();\n\n        // roots.forEach(root => {\n        // \tif (ids.includes(root.id)) throw new BadRequestException('不能删除根节点');\n        // });\n\n        return await this.authorityRepository.delete(ids);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/base.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/base.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/base.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/base.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/base.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(info: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/base.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    info\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn, Column } from 'typeorm';\nimport { config } from '../../config';\nimport { RowStatus, StorageType } from '../aspects/enum';\nimport { Exclude } from 'class-transformer';\n\nexport abstract class Base {\n    @PrimaryGeneratedColumn('uuid') id: string;\n\n    @Exclude()\n    @Column({\n        type: 'enum',\n        default: RowStatus.NORMAL,\n        enum: RowStatus,\n        comment: '行状态'\n    })\n    row_status: RowStatus;\n\n    @CreateDateColumn({\n        comment: '创建时间'\n    })\n    create_at: number;\n\n    @UpdateDateColumn({\n        comment: '更新时间'\n    })\n    update_at: number;\n\n    static getFullPath(info: any) {\n        if (!!info) {\n            switch (info.storageType) {\n                case StorageType.LOCAL:\n                    return info.path.startsWith('/')\n                        ? `${config.serverUrl}/${config.static.root}${info.path}`\n                        : info.path;\n                case StorageType.QINIU:\n                    return `${config.qiniu.domain}/${info.path}`;\n                default:\n                    return info.path;\n            }\n        }\n\n        return '';\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/BaseFlow.html":{"url":"classes/BaseFlow.html","title":"class - BaseFlow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  BaseFlow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/flows/base.flow.ts\n        \n\n\n\n            \n                实现\n            \n            \n                        OnModuleInit\n            \n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                flow\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(name: string, template: FlowTemplateEnum, flowTemplateRepository: Repository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/flows/base.flow.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                        FlowTemplateEnum\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        flowTemplateRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flow\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/flows/base.flow.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/flows/base.flow.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/flows/base.flow.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { FlowTemplateEnum } from '../aspects/enum';\nimport { Logger } from '../lib/logger';\nimport { FlowTemplate } from '../entities/flow-template.entity';\nimport { OnModuleInit } from '@nestjs/common';\nimport { Engine } from '../lib/wf';\nimport { Repository } from 'typeorm';\n\nexport abstract class BaseFlow implements OnModuleInit {\n    flow: any;\n\n    constructor(\n        protected readonly name: string,\n        protected readonly template: FlowTemplateEnum,\n        protected readonly flowTemplateRepository: Repository\n    ) {}\n\n    async onModuleInit() {\n        await this.register();\n    }\n\n    async register() {\n        Engine.register(FlowTemplateEnum.APPLY_VR, this.flow);\n\n        let target = await this.flowTemplateRepository.findOne({\n            where: { template: this.template }\n        });\n\n        if (!target) {\n            target = new FlowTemplate();\n\n            const flowSteps = Object.keys(this.flow).map((item) => {\n                return {\n                    name: item,\n                    steps: Object.keys(this.flow[item]).map((action) => ({ name: action }))\n                };\n            });\n\n            target.ex_info = { flowSteps };\n        }\n\n        target.name = this.name;\n        target.template = this.template;\n\n        Logger.log(`Register flow ${this.template}`);\n\n        await this.flowTemplateRepository.save(target);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/BaseService.html":{"url":"classes/BaseService.html","title":"class - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/base.service.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/base.service.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/base.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/base.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Repository } from 'typeorm';\n\nexport abstract class BaseService {\n    constructor(private readonly repository: Repository) {}\n\n    async findOneById(id: string) {\n        return await this.repository.findOne(id);\n    }\n\n    async remove(ids: string[]) {\n        return await this.repository.remove(await this.repository.findByIds(ids));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Carousel.html":{"url":"classes/Carousel.html","title":"class - Carousel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Carousel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/carousel.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                ex_info\n                            \n                            \n                                token\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    carousels\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/carousel.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '标题', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/carousel.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/carousel.entity.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         Carousel | []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(info: any)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    info\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        carousels\n                    \n                \n\n                \n                    \n                        getcarousels()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/carousel.entity.ts:19\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { Entity, Column } from 'typeorm';\nimport { plainToClass, Expose } from 'class-transformer';\nimport { Base } from './base';\n\n@Entity()\nexport class Carousel extends Base {\n    @Column({ comment: '标题', unique: true })\n    token: string;\n\n    @Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n    ex_info: any;\n\n    static create(target: object): Carousel | Carousel[] {\n        return plainToClass(Carousel, target);\n    }\n\n    @Expose()\n    get carousels() {\n        return !this.ex_info.carousels\n            ? []\n            : this.ex_info.carousels.map((item) => {\n                  const newItem = { ...item };\n                  newItem.image = Base.getFullPath(item.image);\n                  return newItem;\n              });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/CarouselController.html":{"url":"classes/CarouselController.html","title":"class - CarouselController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  CarouselController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/carousel.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                detail\n                            \n                            \n                                    Async\n                                export\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(carouseService: CarouselService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/carousel.controller.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        carouseService\n                                                  \n                                                        \n                                                                        CarouselService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/carousel.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            detail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    detail(token)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('detail/:token')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/carousel.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            export\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    export(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('export')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/carousel.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/carousel.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('list')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/carousel.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/carousel.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/carousel.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport {\n    UseGuards,\n    Get,\n    Query,\n    Delete,\n    Param,\n    BadRequestException,\n    Post,\n    Put,\n    Body,\n    UseInterceptors,\n    ClassSerializerInterceptor\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Api } from '../../common/aspects/decorator';\nimport { CarouselService } from '../../common/services/carousel.service';\n\n@Api('carousel')\n@ApiUseTags('carousel')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\n@UseInterceptors(ClassSerializerInterceptor)\nexport class CarouselController {\n    constructor(private readonly carouseService: CarouselService) {}\n\n    @Get(':id')\n    async findOne(@Param('id') id) {\n        if (!id) throw new BadRequestException('参数 id 错误');\n\n        return await this.carouseService.findOneById(id);\n    }\n\n    @Get('detail/:token')\n    async detail(@Param('token') token) {\n        return await this.carouseService.findOneByToken(token);\n    }\n\n    @Get('list')\n    async list(@Query() payload) {\n        return await this.carouseService.query(payload);\n    }\n\n    @Get('export')\n    async export(@Query() payload) {\n        return await this.carouseService.query(payload);\n    }\n\n    @Post()\n    async create(@Body() dto: any) {\n        return await this.carouseService.save(dto);\n    }\n\n    @Put()\n    async update(@Body() dto: any) {\n        return await this.carouseService.save(dto);\n    }\n\n    @Delete()\n    async remove(@Query() payload) {\n        return await this.carouseService.remove(payload.selectedRows.split(','));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/CarouselService.html":{"url":"injectables/CarouselService.html","title":"injectable - CarouselService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  CarouselService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/carousel.service.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseService\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByToken\n                            \n                            \n                                    Async\n                                query\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(carouselRepository: Repository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/carousel.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        carouselRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/carousel.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByToken(token)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/carousel.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(payload: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/carousel.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/carousel.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { Injectable, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { BaseService } from './base.service';\nimport { Carousel } from '../entities/carousel.entity';\nimport { TransformClassToPlain } from 'class-transformer';\n\n@Injectable()\nexport class CarouselService extends BaseService {\n    constructor(\n        @InjectRepository(Carousel) private readonly carouselRepository: Repository\n    ) {\n        super(carouselRepository);\n    }\n\n    @TransformClassToPlain()\n    async query(payload: any) {\n        const qb = this.carouselRepository.createQueryBuilder('t');\n\n        if (!payload.page) {\n            payload.page = 0;\n        }\n\n        if (!payload.pageSize) {\n            payload.pageSize = 10;\n        }\n\n        if (!!payload.keyword) {\n            qb.andWhere(`t.token LIKE '%${payload.keyword}%'`);\n        }\n\n        if (!!payload.sort && !!payload.order) {\n            qb.addOrderBy(`t.${payload.sort}`, payload.order);\n        } else {\n            qb.addOrderBy('t.update_at', 'DESC');\n        }\n\n        if (!!payload.isExport) {\n            if (!payload.category) throw new BadRequestException('分类参数错误');\n\n            return await qb.getMany();\n        } else {\n            qb.skip(payload.page * payload.pageSize);\n            qb.take(payload.pageSize);\n        }\n\n        return await qb.getManyAndCount();\n    }\n\n    @TransformClassToPlain()\n    async findOneById(id) {\n        return await this.carouselRepository.findOne({\n            where: { id }\n        });\n    }\n\n    @TransformClassToPlain()\n    async findOneByToken(token) {\n        return await this.carouselRepository.findOne({\n            where: { token }\n        });\n    }\n\n    async save(payload: any) {\n        const target = Carousel.create(payload) as Carousel;\n\n        return await this.carouselRepository.save(target);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/category.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                contents\n                            \n                            \n                                ex_info\n                            \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                            \n                                    Static\n                                    Readonly\n                                sheetsMap\n                            \n                            \n                                sort\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    title\n                                \n                                \n                                    key\n                                \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Category[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @TreeChildren()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/category.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Content[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/category.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/category.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '名称'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/category.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Category\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @TreeParent()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/category.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            sheetsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n\t\t分类: {\n\t\t\tmap: 'categorys',\n\t\t\thandleType: ExcelHandleType.ARRAY,\n\t\t\tcellsMap: { ID: 'id', 名称: 'name', 排序: 'sort', PID: 'parent' }\n\t\t}\n\t}\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/category.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '排序', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/category.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/category.entity.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(info: any)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    info\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/category.entity.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n\n                \n                    \n                        getkey()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/category.entity.ts:32\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/category.entity.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Base } from './base';\nimport { Entity, Column, Tree, TreeChildren, TreeParent, OneToMany } from 'typeorm';\nimport { plainToClass, Expose } from 'class-transformer';\nimport { ExcelHandleType } from '../lib/excel';\nimport { Content } from './content.entity';\n\n@Entity()\n@Tree('materialized-path')\nexport class Category extends Base {\n\t@Column({ comment: '名称' })\n\tname: string;\n\n\t@Column({ comment: '排序', default: 0 })\n\tsort: number;\n\n\t@Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n\tex_info: any;\n\n\t@OneToMany((type) => Content, (content) => content.category)\n\tcontents: Content[];\n\n\t@TreeChildren() children: Category[];\n\n\t@TreeParent() parent: Category;\n\n\t@Expose()\n\tget title(): string {\n\t\treturn this.name;\n\t}\n\n\t@Expose()\n\tget key(): string {\n\t\treturn this.id;\n\t}\n\n\t@Expose()\n\tget value(): string {\n\t\treturn this.id;\n\t}\n\n\tstatic readonly sheetsMap: object = {\n\t\t分类: {\n\t\t\tmap: 'categorys',\n\t\t\thandleType: ExcelHandleType.ARRAY,\n\t\t\tcellsMap: { ID: 'id', 名称: 'name', 排序: 'sort', PID: 'parent' }\n\t\t}\n\t};\n\n\tstatic create(target: object) {\n\t\treturn plainToClass(Category, target);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/CategoryController.html":{"url":"classes/CategoryController.html","title":"class - CategoryController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  CategoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/category.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/category.controller.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/category.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/category.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('list')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/category.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/category.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/category.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport {\n\tUseGuards,\n\tGet,\n\tQuery,\n\tDelete,\n\tParam,\n\tBadRequestException,\n\tPost,\n\tPut,\n\tBody,\n\tUseInterceptors\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ClassSerializerInterceptor } from '@nestjs/common';\nimport { Api } from '../../common/aspects/decorator';\nimport { CategoryService } from '../../common/services/category.service';\n\n@Api('category')\n@ApiUseTags('category')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\n@UseInterceptors(ClassSerializerInterceptor)\nexport class CategoryController {\n\tconstructor(private readonly categoryService: CategoryService) { }\n\n\t@Get(':id')\n\tasync findOne(@Param('id') id) {\n\t\tif (!id) throw new BadRequestException('参数 id 错误');\n\n\t\treturn await this.categoryService.findOneById(id);\n\t}\n\n\t@Get('list')\n\tasync list(@Query() payload) {\n\t\treturn await this.categoryService.query(payload);\n\t}\n\n\t// @Get('export')\n\t// async export(@Query() payload) {\n\t// \treturn await this.categoryService.query(payload);\n\t// }\n\n\t@Post()\n\tasync create(@Body() dto: any) {\n\t\treturn await this.categoryService.save(dto);\n\t}\n\n\t@Put()\n\tasync update(@Body() dto: any) {\n\t\treturn await this.categoryService.save(dto);\n\t}\n\n\t@Delete()\n\tasync remove(@Query() payload) {\n\t\treturn await this.categoryService.remove(payload.selectedRows.split(','));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/category.service.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseService\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneByName\n                            \n                            \n                                    Async\n                                findParentsTree\n                            \n                            \n                                    Async\n                                query\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(categoryRepository: TreeRepository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/category.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        categoryRepository\n                                                  \n                                                        \n                                                                        TreeRepository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByName(name: string)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/category.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findParentsTree\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findParentsTree(category: Category)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/category.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                Category\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/category.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/category.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TreeRepository } from 'typeorm';\nimport { BaseService } from './base.service';\nimport { Category } from '../entities/category.entity';\n\n@Injectable()\nexport class CategoryService extends BaseService {\n\tconstructor(@InjectRepository(Category) private readonly categoryRepository: TreeRepository) {\n\t\tsuper(categoryRepository);\n\t}\n\n\tasync query(payload: any) {\n\n\t\treturn await this.categoryRepository.findTrees();\n\t}\n\n\tasync findOneByName(name: string) {\n\t\treturn await this.categoryRepository.findOne({ name });\n\t}\n\n\tasync findParentsTree(category: Category) {\n\t\treturn await this.categoryRepository.findAncestorsTree(category);\n\t}\n\n\tasync save(payload: any) {\n\t\tconst target = Category.create(payload) as Category;\n\n\t\tif (!!payload.parentId) {\n\t\t\ttarget.parent = await this.categoryRepository.findOne(payload.parentId);\n\t\t}\n\n\t\treturn await this.categoryRepository.save(target);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    模块列表\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nAuthorityService \n\nAuthorityService \n\n\n\nCarouselService \n\nCarouselService \n\n\n\nCategoryService \n\nCategoryService \n\n\n\nCommonService \n\nCommonService \n\n\n\nContentService \n\nContentService \n\n\n\nFlowService \n\nFlowService \n\n\n\nFlowTemplateService \n\nFlowTemplateService \n\n\n\nImportService \n\nImportService \n\n\n\nOrganizationService \n\nOrganizationService \n\n\n\nRoleService \n\nRoleService \n\n\n\nSearchService \n\nSearchService \n\n\n\nServiceCategoryService \n\nServiceCategoryService \n\n\n\nServiceService \n\nServiceService \n\n\n\nSettingService \n\nSettingService \n\n\n\nUserService \n\nUserService \n\n\n\nCommonModule\n\nCommonModule\n\nAuthorityService  -->\n\nCommonModule->AuthorityService \n\n\n\nCarouselService  -->\n\nCommonModule->CarouselService \n\n\n\nCategoryService  -->\n\nCommonModule->CategoryService \n\n\n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\nContentService  -->\n\nCommonModule->ContentService \n\n\n\nFlowService  -->\n\nCommonModule->FlowService \n\n\n\nFlowTemplateService  -->\n\nCommonModule->FlowTemplateService \n\n\n\nImportService  -->\n\nCommonModule->ImportService \n\n\n\nOrganizationService  -->\n\nCommonModule->OrganizationService \n\n\n\nRoleService  -->\n\nCommonModule->RoleService \n\n\n\nSearchService  -->\n\nCommonModule->SearchService \n\n\n\nServiceCategoryService  -->\n\nCommonModule->ServiceCategoryService \n\n\n\nServiceService  -->\n\nCommonModule->ServiceService \n\n\n\nSettingService  -->\n\nCommonModule->SettingService \n\n\n\nUserService  -->\n\nCommonModule->UserService \n\n\n\n\n\nApplyVolunteerFlow\n\nApplyVolunteerFlow\n\nCommonModule -->\n\nApplyVolunteerFlow->CommonModule\n\n\n\n\n\nAuthorityService\n\nAuthorityService\n\nCommonModule -->\n\nAuthorityService->CommonModule\n\n\n\n\n\nCarouselService\n\nCarouselService\n\nCommonModule -->\n\nCarouselService->CommonModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCommonModule -->\n\nCategoryService->CommonModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\nContentService\n\nContentService\n\nCommonModule -->\n\nContentService->CommonModule\n\n\n\n\n\nFlowService\n\nFlowService\n\nCommonModule -->\n\nFlowService->CommonModule\n\n\n\n\n\nFlowTemplateService\n\nFlowTemplateService\n\nCommonModule -->\n\nFlowTemplateService->CommonModule\n\n\n\n\n\nImportService\n\nImportService\n\nCommonModule -->\n\nImportService->CommonModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nCommonModule -->\n\nJwtStrategy->CommonModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nCommonModule -->\n\nOrganizationService->CommonModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nCommonModule -->\n\nRoleService->CommonModule\n\n\n\n\n\nSearchService\n\nSearchService\n\nCommonModule -->\n\nSearchService->CommonModule\n\n\n\n\n\nServiceCategoryService\n\nServiceCategoryService\n\nCommonModule -->\n\nServiceCategoryService->CommonModule\n\n\n\n\n\nServiceService\n\nServiceService\n\nCommonModule -->\n\nServiceService->CommonModule\n\n\n\n\n\nSettingService\n\nSettingService\n\nCommonModule -->\n\nSettingService->CommonModule\n\n\n\n\n\nUserService\n\nUserService\n\nCommonModule -->\n\nUserService->CommonModule\n\n\n\n\n\nWorkOrderFlow\n\nWorkOrderFlow\n\nCommonModule -->\n\nWorkOrderFlow->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        放大\n        重置\n        缩小\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            server/src/common/common.module.ts\n        \n\n\n\n\n        \n            \n                \n                    提供商列表\n                    \n                        \n                            ApplyVolunteerFlow\n                        \n                        \n                            AuthorityService\n                        \n                        \n                            CarouselService\n                        \n                        \n                            CategoryService\n                        \n                        \n                            CommonService\n                        \n                        \n                            ContentService\n                        \n                        \n                            FlowService\n                        \n                        \n                            FlowTemplateService\n                        \n                        \n                            ImportService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            OrganizationService\n                        \n                        \n                            RoleService\n                        \n                        \n                            SearchService\n                        \n                        \n                            ServiceCategoryService\n                        \n                        \n                            ServiceService\n                        \n                        \n                            SettingService\n                        \n                        \n                            UserService\n                        \n                        \n                            WorkOrderFlow\n                        \n                    \n                \n                \n                    导出\n                    \n                        \n                            AuthorityService\n                        \n                        \n                            CarouselService\n                        \n                        \n                            CategoryService\n                        \n                        \n                            CommonService\n                        \n                        \n                            ContentService\n                        \n                        \n                            FlowService\n                        \n                        \n                            FlowTemplateService\n                        \n                        \n                            ImportService\n                        \n                        \n                            OrganizationService\n                        \n                        \n                            RoleService\n                        \n                        \n                            SearchService\n                        \n                        \n                            ServiceCategoryService\n                        \n                        \n                            ServiceService\n                        \n                        \n                            SettingService\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, Global } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport { ScheduleModule } from 'nest-schedule';\nimport { config } from '../config';\nimport { UserService } from './services/user.service';\nimport { JwtStrategy } from './strategys/jwt.strategy';\nimport { User } from './entities/user.entity';\nimport { Content } from './entities/content.entity';\nimport { Flow } from './entities/flow.entity';\nimport { Category } from './entities/category.entity';\nimport { Setting } from './entities/setting.entity';\nimport { Organization } from './entities/organization.entity';\nimport { Role } from './entities/role.entity';\nimport { Authority } from './entities/authority.entity';\nimport { ServiceCategory } from './entities/service-category.entity';\nimport { Service } from './entities/service.entity';\nimport { CommonService } from './services/common.service';\nimport { SettingService } from './services/setting.service';\nimport { ImportService } from './services/import.service';\nimport { CategoryService } from './services/category.service';\nimport { ContentService } from './services/content.service';\nimport { StatusTask } from './tasks/status.task';\nimport { OrganizationService } from './services/organization.service';\nimport { RoleService } from './services/role.service';\nimport { AuthorityService } from './services/authority.service';\nimport { SearchService } from './services/search.service';\nimport { FlowService } from './services/flow.service';\nimport { WorkOrderFlow } from './flows/work-order.flow';\nimport { ServiceCategoryService } from './services/service-category.service';\nimport { ServiceService } from './services/service.service';\nimport { Carousel } from './entities/carousel.entity';\nimport { CarouselService } from './services/carousel.service';\nimport { ApplyVolunteerFlow } from './flows/apply-volunteer.flow';\nimport { FlowTemplate } from './entities/flow-template.entity';\nimport { FlowTemplateService } from './services/flow-template.service';\nimport { Notice } from './entities/notice.entity';\n\n@Global()\n@Module({\n    imports: [\n        ScheduleModule.register(),\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n        JwtModule.register(config.jwt),\n        TypeOrmModule.forRoot(config.orm as TypeOrmModuleOptions),\n        TypeOrmModule.forFeature([\n            Setting,\n            Flow,\n            FlowTemplate,\n            Category,\n            Carousel,\n            User,\n            Content,\n            Organization,\n            Role,\n            Authority,\n            Service,\n            ServiceCategory,\n            Notice\n        ])\n    ],\n    providers: [\n        JwtStrategy,\n        ImportService,\n        CommonService,\n        FlowService,\n        CarouselService,\n        CategoryService,\n        ContentService,\n        ServiceCategoryService,\n        ServiceService,\n        UserService,\n        SettingService,\n        OrganizationService,\n        AuthorityService,\n        RoleService,\n        SearchService,\n        FlowTemplateService,\n        StatusTask,\n        WorkOrderFlow,\n        ApplyVolunteerFlow\n    ],\n    exports: [\n        ImportService,\n        CommonService,\n        FlowService,\n        CarouselService,\n        CategoryService,\n        ServiceCategoryService,\n        ServiceService,\n        ContentService,\n        UserService,\n        SettingService,\n        OrganizationService,\n        AuthorityService,\n        RoleService,\n        SearchService,\n        FlowTemplateService\n    ]\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/common.service.ts\n        \n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkSVGCode\n                            \n                            \n                                    Async\n                                getSiteInfo\n                            \n                            \n                                    Async\n                                getSVGCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(settingService: SettingService, categoryRepository: TreeRepository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/common.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        settingService\n                                                  \n                                                        \n                                                                        SettingService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        categoryRepository\n                                                  \n                                                        \n                                                                        TreeRepository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkSVGCode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkSVGCode(svg_hash: string, svg_text: string)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/common.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    svg_hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    svg_text\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSiteInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSiteInfo()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/common.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSVGCode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSVGCode()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/common.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as crypto from 'crypto';\nimport * as svgCaptcha from 'svg-captcha';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Category } from '../entities/category.entity';\nimport { TreeRepository } from 'typeorm';\nimport { SettingService } from './setting.service';\nimport { redis } from '../lib/redis';\n\n@Injectable()\nexport class CommonService {\n\n\tconstructor(\n\t\tprivate readonly settingService: SettingService,\n\t\t@InjectRepository(Category) private readonly categoryRepository: TreeRepository\n\t) { }\n\n\tasync getSiteInfo() {\n\t\tconst menus = await this.categoryRepository.findTrees();\n\t\tconst setting = await this.settingService.getSettingByToken();\n\t\treturn {\n\t\t\tmenus,\n\t\t\t...setting.ex_info\n\t\t};\n\t}\n\n\tasync getSVGCode() {\n\t\tconst { text, data } = svgCaptcha.create({\n\t\t\tsize: 4, // 验证码长度\n\t\t\tignoreChars: '0oO1I1k', // 验证码字符中排除 0o1i\n\t\t\tnoise: 4, // 干扰线条的数量\n\t\t\tcolor: true, // 验证码的字符是否有颜色，默认没有，如果设定了背景，则默认有\n\t\t\tbackground: '#cc9966' // 验证码图片背景颜色\n\t\t});\n\t\tconst svg_hash = crypto.createHash('md5').update(data).digest('hex');\n\n\t\tawait redis.set(svg_hash,\n\t\t\ttext,\n\t\t\t'EX',\n\t\t\t60 * 2);\n\n\t\treturn {\n\t\t\tsvg_hash,\n\t\t\tsvg_code: data\n\t\t};\n\t}\n\n\tasync checkSVGCode(svg_hash: string, svg_text: string) {\n\t\tconst svg_text_in_redis = await redis.get(svg_hash);\n\n\t\tif (svg_text_in_redis && svg_text_in_redis.toUpperCase() === svg_text.toUpperCase()) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Content.html":{"url":"classes/Content.html","title":"class - Content","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Content\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/content.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                author\n                            \n                            \n                                category\n                            \n                            \n                                    Static\n                                    Readonly\n                                esIndex\n                            \n                            \n                                ex_info\n                            \n                            \n                                publish_at\n                            \n                            \n                                    Static\n                                    Readonly\n                                sheetsMap\n                            \n                            \n                                sort\n                            \n                            \n                                source\n                            \n                            \n                                summary\n                            \n                            \n                                text\n                            \n                            \n                                thumbnail\n                            \n                            \n                                title\n                            \n                            \n                                video\n                            \n                            \n                                views\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                beforeInsert\n                            \n                            \n                                    Async\n                                beforeUpdate\n                            \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thumbnailPath\n                                \n                                \n                                    videoPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '地址', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '作者', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Category\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            esIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         IndicesCreateParams\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n        index: 'contents',\n        body: {\n            mappings: {\n                content: {\n                    properties: {\n                        title: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        text: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        summary: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        category: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        thumbnail: {\n                            type: 'string'\n                        },\n                        video: {\n                            type: 'string'\n                        },\n                        author: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        views: {\n                            type: 'integer'\n                        },\n                        publish_at: {\n                            type: 'string'\n                        }\n                    }\n                }\n            }\n        }\n    }\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:201\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publish_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'timestamp', default: undefined, comment: '发布时间'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            sheetsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n        景区介绍: {\n            handleType,\n            cellsMap\n        },\n        地理概况: {\n            handleType,\n            cellsMap\n        },\n        人文历史: {\n            handleType,\n            cellsMap\n        },\n        工艺特色: {\n            handleType,\n            cellsMap\n        },\n        发展规划: {\n            handleType,\n            cellsMap\n        },\n        当地特产: {\n            handleType,\n            cellsMap\n        },\n        特色工艺品: {\n            handleType,\n            cellsMap\n        },\n        游览须知: {\n            handleType,\n            cellsMap\n        },\n\n        景点一览: {\n            handleType,\n            cellsMap\n        },\n        全景720度: {\n            map: '720度全景',\n            handleType,\n            cellsMap\n        },\n        电子导游导览: {\n            handleType,\n            cellsMap\n        },\n        摄影佳作: {\n            handleType,\n            cellsMap\n        },\n        视频赏析: {\n            handleType,\n            cellsMap\n        },\n\n        特色餐饮: {\n            handleType,\n            cellsMap\n        },\n        周边住宿: {\n            handleType,\n            cellsMap\n        },\n        旅游购物: {\n            handleType,\n            cellsMap\n        },\n        周边娱乐: {\n            handleType,\n            cellsMap\n        },\n        游程推荐: {\n            handleType,\n            cellsMap\n        },\n        美文游记: {\n            handleType,\n            cellsMap\n        },\n\n        官方公告: {\n            handleType,\n            cellsMap\n        },\n        精彩活动: {\n            handleType,\n            cellsMap\n        },\n        新闻动态: {\n            handleType,\n            cellsMap\n        },\n        联系方式: {\n            handleType,\n            cellsMap: {\n                公司名称: 'ex_info.company',\n                电话: 'ex_info.phone',\n                传真: 'ex_info.fax',\n                销售: 'ex_info.sale',\n                地址: 'ex_info.address',\n                邮编: 'ex_info.postcode'\n            }\n        },\n        留言咨询: {\n            handleType,\n            cellsMap: {\n                问题: 'ex_info.question',\n                回复: 'ex_info.reply'\n            }\n        },\n        投诉建议: {\n            handleType,\n            cellsMap: {\n                昵称: 'ex_info.nickname',\n                标题: 'ex_info.title',\n                内容: 'ex_info.content',\n                电话: 'ex_info.phone'\n            }\n        }\n    }\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '排序', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '来源', default: '本站'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            summary\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '摘要', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '正文', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbnail\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '图片'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '标题', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            video\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '视频'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'bigint', comment: '浏览量', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            beforeInsert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beforeInsert()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @BeforeInsert()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/entities/content.entity.ts:265\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            beforeUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beforeUpdate()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @BeforeUpdate()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/entities/content.entity.ts:274\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/content.entity.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         Content | []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(info: any)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    info\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        thumbnailPath\n                    \n                \n\n                \n                    \n                        getthumbnailPath()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/content.entity.ts:255\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        videoPath\n                    \n                \n\n                \n                    \n                        getvideoPath()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/content.entity.ts:260\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport * as moment from 'moment';\nimport {\n    Entity,\n    Column,\n    ManyToOne,\n    BeforeInsert,\n    BeforeUpdate,\n    AfterInsert,\n    AfterUpdate,\n    BeforeRemove\n} from 'typeorm';\nimport { plainToClass, Expose } from 'class-transformer';\nimport { Base } from './base';\nimport { Category } from './category.entity';\nimport { ExcelHandleType } from '../lib/excel';\nimport { es } from '../lib/es';\nimport { textInterception, extractionTextInHtml } from '../lib/helper';\nimport { IndicesCreateParams } from 'elasticsearch';\n\nconst handleType = ExcelHandleType.ARRAY;\nconst cellsMap = {\n    标题: 'title',\n    作者: 'author',\n    来源: 'source',\n    地址: 'address',\n    排序: 'sort',\n    发布时间: 'publish_at',\n    正文: 'text',\n    图片: 'thumbnail',\n    视频: 'video'\n};\n\n@Entity()\nexport class Content extends Base {\n    @Column({ comment: '标题', default: '' })\n    title: string;\n\n    @Column({ comment: '作者', default: '' })\n    author: string;\n\n    @Column({ comment: '来源', default: '本站' })\n    source: string;\n\n    @Column({ comment: '地址', default: '' })\n    address: string;\n\n    @Column({ comment: '排序', default: 0 })\n    sort: number;\n\n    @Column({ type: 'simple-json', default: null, comment: '图片' })\n    thumbnail: any;\n\n    @Column({ type: 'simple-json', default: null, comment: '视频' })\n    video: any;\n\n    @Column({ comment: '摘要', default: '' })\n    summary: string;\n\n    @Column({ comment: '正文', default: '' })\n    text: string;\n\n    @Column({ type: 'bigint', comment: '浏览量', default: 0 })\n    views: number;\n\n    @Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n    ex_info: any;\n\n    @Column({\n        type: 'timestamp',\n        default: null,\n        comment: '发布时间'\n    })\n    publish_at: string;\n\n    @ManyToOne((type) => Category, (category) => category.contents)\n    category: Category;\n\n    static readonly sheetsMap: object = {\n        景区介绍: {\n            handleType,\n            cellsMap\n        },\n        地理概况: {\n            handleType,\n            cellsMap\n        },\n        人文历史: {\n            handleType,\n            cellsMap\n        },\n        工艺特色: {\n            handleType,\n            cellsMap\n        },\n        发展规划: {\n            handleType,\n            cellsMap\n        },\n        当地特产: {\n            handleType,\n            cellsMap\n        },\n        特色工艺品: {\n            handleType,\n            cellsMap\n        },\n        游览须知: {\n            handleType,\n            cellsMap\n        },\n\n        景点一览: {\n            handleType,\n            cellsMap\n        },\n        全景720度: {\n            map: '720度全景',\n            handleType,\n            cellsMap\n        },\n        电子导游导览: {\n            handleType,\n            cellsMap\n        },\n        摄影佳作: {\n            handleType,\n            cellsMap\n        },\n        视频赏析: {\n            handleType,\n            cellsMap\n        },\n\n        特色餐饮: {\n            handleType,\n            cellsMap\n        },\n        周边住宿: {\n            handleType,\n            cellsMap\n        },\n        旅游购物: {\n            handleType,\n            cellsMap\n        },\n        周边娱乐: {\n            handleType,\n            cellsMap\n        },\n        游程推荐: {\n            handleType,\n            cellsMap\n        },\n        美文游记: {\n            handleType,\n            cellsMap\n        },\n\n        官方公告: {\n            handleType,\n            cellsMap\n        },\n        精彩活动: {\n            handleType,\n            cellsMap\n        },\n        新闻动态: {\n            handleType,\n            cellsMap\n        },\n        联系方式: {\n            handleType,\n            cellsMap: {\n                公司名称: 'ex_info.company',\n                电话: 'ex_info.phone',\n                传真: 'ex_info.fax',\n                销售: 'ex_info.sale',\n                地址: 'ex_info.address',\n                邮编: 'ex_info.postcode'\n            }\n        },\n        留言咨询: {\n            handleType,\n            cellsMap: {\n                问题: 'ex_info.question',\n                回复: 'ex_info.reply'\n            }\n        },\n        投诉建议: {\n            handleType,\n            cellsMap: {\n                昵称: 'ex_info.nickname',\n                标题: 'ex_info.title',\n                内容: 'ex_info.content',\n                电话: 'ex_info.phone'\n            }\n        }\n    };\n\n    static readonly esIndex: IndicesCreateParams = {\n        index: 'contents',\n        body: {\n            mappings: {\n                content: {\n                    properties: {\n                        title: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        text: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        summary: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        category: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        thumbnail: {\n                            type: 'string'\n                        },\n                        video: {\n                            type: 'string'\n                        },\n                        author: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        views: {\n                            type: 'integer'\n                        },\n                        publish_at: {\n                            type: 'string'\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    static create(target: object): Content | Content[] {\n        return plainToClass(Content, target);\n    }\n\n    @Expose()\n    get thumbnailPath(): string {\n        return Base.getFullPath(this.thumbnail);\n    }\n\n    @Expose()\n    get videoPath(): string {\n        return Base.getFullPath(this.video);\n    }\n\n    @BeforeInsert()\n    async beforeInsert() {\n        if (_.isEmpty(this.publish_at)) {\n            this.publish_at = moment().format('YYYY-MM-DD HH:mm:ss');\n        }\n        const text = extractionTextInHtml(this.text);\n        this.summary = textInterception(text, 120);\n    }\n\n    @BeforeUpdate()\n    async beforeUpdate() {\n        const text = extractionTextInHtml(this.text);\n        this.summary = textInterception(text, 120);\n    }\n\n    // @AfterInsert()\n    // async afterInsert() {\n    //     await es.index({\n    //         index: Content.esIndex.index,\n    //         type: Content.esIndex.body.type,\n    //         id: this.id,\n    //         body: {\n    //             title: this.title,\n    //             text: this.text,\n    //             summary: this.summary,\n    //             category: this.category.name,\n    //             thumbnail: this.thumbnailPath,\n    //             video: this.videoPath,\n    //             views: this.views,\n    //             author: this.author,\n    //             publish_at: this.publish_at\n    //         }\n    //     });\n    // }\n\n    // @AfterUpdate()\n    // async afterUpdate() {\n    //     const doc = {\n    //         title: this.title,\n    //         text: this.text,\n    //         summary: this.summary,\n    //         thumbnail: this.thumbnailPath,\n    //         video: this.videoPath,\n    //         views: this.views,\n    //         author: this.author,\n    //         publish_at: this.publish_at\n    //     };\n\n    //     if (!!this.category) {\n    //         doc['category'] = this.category.name;\n    //     }\n\n    //     await es.update({\n    //         index: Content.esIndex.index,\n    //         type: Content.esIndex.body.type,\n    //         id: this.id,\n    //         body: {\n    //             doc\n    //         }\n    //     });\n    // }\n\n    // @BeforeRemove()\n    // async beforeRemove() {\n    //     await es.delete({\n    //         index: Content.esIndex.index,\n    //         type: Content.esIndex.body.type,\n    //         id: this.id\n    //     });\n    // }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/ContentController.html":{"url":"classes/ContentController.html","title":"class - ContentController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  ContentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/content.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                export\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(contentService: ContentService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/content.controller.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        contentService\n                                                  \n                                                        \n                                                                        ContentService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/content.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            export\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    export(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('export')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/content.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/content.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('list')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/content.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/content.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/content.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport {\n\tUseGuards,\n\tGet,\n\tQuery,\n\tDelete,\n\tParam,\n\tBadRequestException,\n\tPost,\n\tPut,\n\tBody,\n\tUseInterceptors\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Api } from '../../common/aspects/decorator';\nimport { ContentService } from '../../common/services/content.service';\nimport { ClassSerializerInterceptor } from '@nestjs/common';\n\n@Api('content')\n@ApiUseTags('content')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\n@UseInterceptors(ClassSerializerInterceptor)\nexport class ContentController {\n\tconstructor(private readonly contentService: ContentService) { }\n\n\t@Get(':id')\n\tasync findOne(@Param('id') id) {\n\t\tif (!id) throw new BadRequestException('参数 id 错误');\n\n\t\treturn await this.contentService.findOneById(id);\n\t}\n\n\t@Get('list')\n\tasync list(@Query() payload) {\n\t\treturn await this.contentService.query(payload);\n\t}\n\n\t@Get('export')\n\tasync export(@Query() payload) {\n\t\treturn await this.contentService.query(payload);\n\t}\n\n\t@Post()\n\tasync create(@Body() dto: any) {\n\t\treturn await this.contentService.save(dto);\n\t}\n\n\t@Put()\n\tasync update(@Body() dto: any) {\n\t\treturn await this.contentService.save(dto);\n\t}\n\n\t@Delete()\n\tasync remove(@Query() payload) {\n\t\treturn await this.contentService.remove(payload.selectedRows.split(','));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/ContentService.html":{"url":"injectables/ContentService.html","title":"injectable - ContentService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  ContentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/content.service.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseService\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                query\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(contentRepository: Repository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/content.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        contentRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/content.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(payload: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/content.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/content.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { Injectable, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { TransformClassToPlain } from 'class-transformer';\nimport { BaseService } from './base.service';\nimport { Content } from '../entities/content.entity';\n\n@Injectable()\nexport class ContentService extends BaseService {\n    constructor(\n        @InjectRepository(Content) private readonly contentRepository: Repository\n    ) {\n        super(contentRepository);\n    }\n\n    @TransformClassToPlain()\n    async query(payload: any) {\n        const qb = this.contentRepository.createQueryBuilder('t');\n\n        qb.leftJoinAndSelect('t.category', 'category');\n\n        if (!payload.page) {\n            payload.page = 0;\n        }\n\n        if (!payload.pageSize) {\n            payload.pageSize = 10;\n        }\n\n        if (!!payload.category) {\n            qb.andWhere('category.id =:category', { category: payload.category });\n        }\n\n        if (!!payload.keyword) {\n            qb.andWhere(`t.title LIKE '%${payload.keyword}%'`);\n        }\n\n        if (!!payload.publish_at) {\n            payload.publish_at = payload.publish_at.split(',');\n            qb.andWhere(\n                `t.publish_at BETWEEN '${payload.publish_at.shift()}' AND '${payload.publish_at.pop()}'`\n            );\n        }\n\n        if (!!payload.sort && !!payload.order) {\n            qb.addOrderBy(`t.${payload.sort}`, payload.order);\n        } else {\n            // 默认排序规则\n            qb.addOrderBy('t.sort', 'DESC');\n            qb.addOrderBy('t.publish_at', 'DESC');\n        }\n\n        if (!!payload.isExport) {\n            if (!payload.category) throw new BadRequestException('分类参数错误');\n\n            return await qb.getMany();\n        } else {\n            qb.skip(payload.page * payload.pageSize);\n            qb.take(payload.pageSize);\n        }\n\n        return await qb.getManyAndCount();\n    }\n\n    @TransformClassToPlain()\n    async findOneById(id) {\n        return await this.contentRepository.findOne({\n            where: { id },\n            relations: ['category']\n        });\n    }\n\n    async save(payload: any) {\n        const target = Content.create(payload) as Content;\n\n        return await this.contentRepository.save(target);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/ContextTrace.html":{"url":"classes/ContextTrace.html","title":"class - ContextTrace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  ContextTrace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/lib/logger.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    可选的\n                                columnNumber\n                            \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    Public\n                                    Readonly\n                                    可选的\n                                lineNumber\n                            \n                            \n                                    Public\n                                    Readonly\n                                    可选的\n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(context: string, path?: string, lineNumber?: number, columnNumber?: number)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/lib/logger.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            是\n                                                    \n                                                    \n                                                \n                                                \n                                                        lineNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            是\n                                                    \n                                                    \n                                                \n                                                \n                                                        columnNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            是\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                可选的\n                            columnNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/lib/logger.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/lib/logger.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                可选的\n                            lineNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/lib/logger.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                可选的\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/lib/logger.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport * as Path from 'path';\nimport * as Log4js from 'log4js';\nimport * as Util from 'util';\nimport * as Moment from 'moment';\nimport * as StackTrace from 'stacktrace-js';\nimport Chalk from 'chalk';\n\nexport enum LoggerLevel {\n    ALL = 'ALL',\n    MARK = 'MARK',\n    TRACE = 'TRACE',\n    DEBUG = 'DEBUG',\n    INFO = 'INFO',\n    WARN = 'WARN',\n    ERROR = 'ERROR',\n    FATAL = 'FATAL',\n    OFF = 'OFF'\n}\n\nexport class ContextTrace {\n    constructor(\n        public readonly context: string,\n        public readonly path?: string,\n        public readonly lineNumber?: number,\n        public readonly columnNumber?: number\n    ) { }\n}\n\nLog4js.addLayout('Nestify', (logConfig: any) => {\n    return (logEvent: Log4js.LoggingEvent): string => {\n        let moduleName: string = '';\n        let position: string = '';\n\n        const messageList: string[] = [];\n        logEvent.data.forEach((value: any) => {\n            if (value instanceof ContextTrace) {\n                moduleName = value.context;\n                if (value.lineNumber && value.columnNumber) {\n                    position = `${value.lineNumber}, ${value.columnNumber}`;\n                }\n                return;\n            }\n\n            if (typeof value !== 'string') {\n                value = Util.inspect(value, false, 3, true);\n            }\n\n            messageList.push(value);\n        });\n\n        const messageOutput: string = messageList.join(' ');\n        const positionOutput: string = position ? ` [${position}]` : '';\n        const typeOutput: string = `[${logConfig.type}] ${logEvent.pid.toString()}   - `;\n        const dateOutput: string = `${Moment(logEvent.startTime).format('YYYY-MM-DD HH:mm:ss')}`;\n        const moduleOutput: string = moduleName ? `[${moduleName}] ` : '[LoggerService] ';\n        let levelOutput: string = `[${logEvent.level}] ${messageOutput}`;\n\n        switch (logEvent.level.toString()) {\n            case LoggerLevel.DEBUG:\n                levelOutput = Chalk.green(levelOutput);\n                break;\n            case LoggerLevel.INFO:\n                levelOutput = Chalk.cyan(levelOutput);\n                break;\n            case LoggerLevel.WARN:\n                levelOutput = Chalk.yellow(levelOutput);\n                break;\n            case LoggerLevel.ERROR:\n                levelOutput = Chalk.red(levelOutput);\n                break;\n            case LoggerLevel.FATAL:\n                levelOutput = Chalk.hex('#DD4C35')(levelOutput);\n                break;\n            default:\n                levelOutput = Chalk.grey(levelOutput);\n                break;\n        }\n\n        return `${Chalk.green(typeOutput)}${dateOutput}    ${Chalk.yellow(\n            moduleOutput\n        )}${levelOutput}${positionOutput}`;\n    };\n});\n\nLog4js.configure({\n    appenders: {\n        console: {\n            type: 'stdout',\n            layout: { type: 'Nestify' }\n        }\n    },\n    categories: {\n        default: {\n            appenders: ['console'],\n            level: 'debug'\n        }\n    }\n});\n\nconst logger = Log4js.getLogger();\nlogger.level = LoggerLevel.TRACE;\n\nexport class Logger {\n    static trace(...args) {\n        logger.trace(Logger.getStackTrace(), ...args);\n    }\n\n    static debug(...args) {\n        logger.debug(Logger.getStackTrace(), ...args);\n    }\n\n    static log(...args) {\n        logger.info(Logger.getStackTrace(), ...args);\n    }\n\n    static info(...args) {\n        logger.info(Logger.getStackTrace(), ...args);\n    }\n\n    static warn(...args) {\n        logger.warn(Logger.getStackTrace(), ...args);\n    }\n\n    static warning(...args) {\n        logger.warn(Logger.getStackTrace(), ...args);\n    }\n\n    static error(...args) {\n        logger.error(Logger.getStackTrace(), ...args);\n    }\n\n    static fatal(...args) {\n        logger.fatal(Logger.getStackTrace(), ...args);\n    }\n\n    static getStackTrace(deep: number = 2): ContextTrace {\n        const stackList: StackTrace.StackFrame[] = StackTrace.getSync();\n        const stackInfo: StackTrace.StackFrame = stackList[deep];\n\n        const lineNumber: number = stackInfo.lineNumber;\n        const columnNumber: number = stackInfo.columnNumber;\n        const fileName: string = stackInfo.fileName;\n\n        const extnameLength: number = Path.extname(fileName).length;\n        let basename: string = Path.basename(fileName);\n        basename = basename.substr(0, basename.length - extnameLength);\n        const context: string = _.upperFirst(_.camelCase(basename));\n\n        return new ContextTrace(context, fileName, lineNumber, columnNumber);\n    }\n\n    trace(...args) {\n        logger.trace(Logger.getStackTrace(), ...args);\n    }\n\n    debug(...args) {\n        logger.debug(Logger.getStackTrace(), ...args);\n    }\n\n    log(...args) {\n        logger.info(Logger.getStackTrace(), ...args);\n    }\n\n    info(...args) {\n        logger.info(Logger.getStackTrace(), ...args);\n    }\n\n    warn(...args) {\n        logger.warn(Logger.getStackTrace(), ...args);\n    }\n\n    warning(...args) {\n        logger.warn(Logger.getStackTrace(), ...args);\n    }\n\n    error(...args) {\n        logger.error(Logger.getStackTrace(), ...args);\n    }\n\n    fatal(...args) {\n        logger.fatal(Logger.getStackTrace(), ...args);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/CreateContentDto.html":{"url":"classes/CreateContentDto.html","title":"class - CreateContentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  CreateContentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/dtos/content.dto.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                author\n                            \n                            \n                                    Readonly\n                                publish_at\n                            \n                            \n                                    Readonly\n                                sort\n                            \n                            \n                                    Readonly\n                                summary\n                            \n                            \n                                    Readonly\n                                text\n                            \n                            \n                                    Readonly\n                                thumbnail\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                views\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            publish_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@IsNotEmpty({message: '发布时间不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            summary\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            thumbnail\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@IsNotEmpty({message: '标题不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateContentDto {\n\t@ApiModelProperty()\n\t@IsNotEmpty({\n\t\tmessage: '标题不能为空'\n\t})\n\treadonly title: string;\n\n\t@ApiModelProperty() readonly author: string;\n\n\t@ApiModelProperty() readonly sort: number;\n\n\t@ApiModelProperty() readonly thumbnail: string;\n\n\t@ApiModelProperty() readonly summary: string;\n\n\t@ApiModelProperty() readonly text: string;\n\n\t@ApiModelProperty() readonly views: number;\n\n\t@ApiModelProperty()\n\t@IsNotEmpty({\n\t\tmessage: '发布时间不能为空'\n\t})\n\treadonly publish_at: string;\n}\n\nexport class CreateContentDto {\n\t@ApiModelProperty()\n\t@IsNotEmpty({\n\t\tmessage: '标题不能为空'\n\t})\n\treadonly title: string;\n\n\t@ApiModelProperty() readonly author: string;\n\n\t@ApiModelProperty() readonly sort: number;\n\n\t@ApiModelProperty() readonly thumbnail: string;\n\n\t@ApiModelProperty() readonly summary: string;\n\n\t@ApiModelProperty() readonly text: string;\n\n\t@ApiModelProperty() readonly views: number;\n\n\t@ApiModelProperty()\n\t@IsNotEmpty({\n\t\tmessage: '发布时间不能为空'\n\t})\n\treadonly publish_at: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Engine.html":{"url":"classes/Engine.html","title":"class - Engine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Engine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/lib/wf.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                flowTemplates\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                consume\n                            \n                            \n                                    Public\n                                    Async\n                                dispatch\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Static\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            flowTemplates\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            缺省值 : {}\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/lib/wf.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            consume\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consume()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/wf.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(id, taskName, options: object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/wf.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                    缺省值\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        否\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    taskName\n                                    \n                                    \n\n                                    \n                                        否\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                object\n                                    \n\n                                    \n                                        否\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/wf.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(template: FlowTemplateEnum, flow: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/wf.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                                FlowTemplateEnum\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    flow\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { isArray } from 'lodash';\nimport { Logger } from './logger';\nimport { mq, MQChannel } from './mq';\nimport { Flow } from '../entities/flow.entity';\nimport { FlowTemplateEnum } from '../aspects/enum';\nimport { getRepository } from 'typeorm';\n\nexport const OVER = 'OVER';\n\nexport interface IFlow {\n    id: string;\n    State: string;\n    ExecutableTasks: string[];\n}\n\nexport enum WFStatus {\n    RUNNING, // 运行中\n    OVER, // 已完成\n    CANCELED // 已取消\n}\n\nexport enum WFResult {\n    RUNNING, // 进行中\n    SUCCESS, //成功\n    FAILURE // 失败\n}\n\nexport class Engine {\n    static flowTemplates: any = {};\n\n    public static register(template: FlowTemplateEnum, flow: any) {\n        Engine.flowTemplates[template] = flow;\n    }\n\n    public async init() {\n        Logger.trace('Workflow Engine Starting');\n\n        await mq.Channel.assertQueue(MQChannel.WF);\n        await this.consume();\n\n        Logger.trace('Workflow Engine Started');\n    }\n\n    public async dispatch(id, taskName, options = {}) {\n        Logger.log(`WF:${id} dispatch`, taskName, options);\n\n        return await mq.Channel.sendToQueue(\n            MQChannel.WF,\n            Buffer.from(JSON.stringify({ id, name: taskName, options }))\n        );\n    }\n\n    private async consume() {\n        await mq.Channel.consume(MQChannel.WF, async (msg) => {\n            const task = JSON.parse(msg.content.toString());\n\n            const flow = await getRepository(Flow).findOne({\n                where: { id: task.id },\n                relations: ['user', 'template', 'operator']\n            });\n            Logger.log('WF: flow', flow);\n\n            if (!!flow) {\n                Logger.log('WF: current ExecutableTasks', flow.ExecutableTasks);\n\n                if (flow.ExecutableTasks.includes(task.name)) {\n                    const template = Engine.flowTemplates[flow.template.template];\n                    const res = await template[flow.state][task.name](flow, task.options);\n\n                    Logger.log('WF: next state', flow.state);\n\n                    let nextState = res;\n                    let nextStep = null;\n\n                    if (isArray(res)) {\n                        try {\n                            nextState = res[0];\n                            nextStep = res[1];\n                        } catch (err) {\n                            Logger.error(err);\n                        }\n                    }\n\n                    flow.state = nextState;\n\n                    if (!!nextStep) {\n                        await this.dispatch(\n                            nextStep.id || flow.id,\n                            nextStep.nextStep,\n                            nextStep.options || {}\n                        );\n                    }\n\n                    Logger.log('WF: next ExecutableTasks', flow.ExecutableTasks);\n                }\n            }\n\n            await mq.Channel.ack(msg);\n        });\n    }\n}\n\nconst wf = new Engine();\n\nexport { wf };\nexport default wf;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/ExcelHelper.html":{"url":"classes/ExcelHelper.html","title":"class - ExcelHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  ExcelHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/lib/excel.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                export\n                            \n                            \n                                    Static\n                                    Async\n                                load\n                            \n                            \n                                    Static\n                                    Async\n                                loadFromBuffer\n                            \n                            \n                                    Static\n                                    Async\n                                loadFromFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            export\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    export(dataSource, sheetsMap, fields)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/excel.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dataSource\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    sheetsMap\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    fields\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(workbook, sheetsMap)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/excel.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    workbook\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    sheetsMap\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            loadFromBuffer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadFromBuffer(buffer, sheetsMap)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/excel.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    buffer\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    sheetsMap\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            loadFromFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadFromFile(filePath, sheetsMap)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/excel.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    filePath\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    sheetsMap\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport * as Excel from 'exceljs';\n\nexport enum ExcelHandleType {\n    KV,\n    ARRAY\n}\n\nexport class ExcelHelper {\n    static async loadFromFile(filePath, sheetsMap) {\n        const workbook = new Excel.Workbook();\n        await workbook.xlsx.readFile(filePath);\n\n        return await ExcelHelper.load(workbook, sheetsMap);\n    }\n\n    static async loadFromBuffer(buffer, sheetsMap) {\n        const workbook = new Excel.Workbook();\n        await workbook.xlsx.load(buffer);\n\n        return await ExcelHelper.load(workbook, sheetsMap);\n    }\n\n    static async load(workbook, sheetsMap) {\n        const info = {};\n\n        workbook.eachSheet((worksheet) => {\n            const sheetMap = sheetsMap[worksheet.name];\n            if (!sheetMap) {\n                console.error(`${worksheet.name} 工作表映射加载失败！`);\n                return;\n            }\n\n            let item = null;\n\n            switch (sheetMap.handleType) {\n                case ExcelHandleType.KV:\n                    const rowsMap = sheetMap.rowsMap;\n                    if (!rowsMap) throw new Error(`${worksheet.name} 行映射加载失败！`);\n\n                    item = {};\n                    worksheet.eachRow((row, rowNumber) => {\n                        const cellKey = row.getCell(1);\n                        if (!cellKey) return false;\n\n                        const mapKey = rowsMap[cellKey.value.toString()];\n                        if (!mapKey)\n                            throw new Error(\n                                `${worksheet.name} [row:${rowNumber}] 列映射加载失败！`\n                            );\n\n                        item[mapKey] = row.getCell(2).value;\n                    });\n\n                    break;\n                case ExcelHandleType.ARRAY:\n                    const cellsMap = sheetMap.cellsMap;\n                    if (!cellsMap) throw new Error(`${worksheet.name} 表头映射加载失败！`);\n\n                    const titleArr = [];\n\n                    item = [];\n                    worksheet.getRow(1).eachCell((cell, cellNumber) => {\n                        const mapKey = cellsMap[cell.value.toString()];\n                        if (!mapKey) throw new Error(`${worksheet.name} 表头列映射加载失败！`);\n\n                        titleArr[cellNumber] = mapKey;\n                    });\n\n                    worksheet.eachRow((row, rowNumber) => {\n                        if (rowNumber  {\n                            const obj = titleArr[cellNumber].split('.');\n\n                            if (_.isArray(obj) && obj.length >= 2) {\n                                if (!cellObj[obj[0]]) {\n                                    cellObj[obj[0]] = {};\n                                }\n\n                                cellObj[obj[0]][obj[1]] = cell.value;\n                            } else {\n                                cellObj[titleArr[cellNumber]] = cell.value;\n                            }\n                        });\n\n                        item.push(cellObj);\n                    });\n                default:\n                    break;\n            }\n\n            info[sheetMap.map || worksheet.name] = item;\n        });\n\n        return info;\n    }\n\n    static async export(dataSource, sheetsMap, fields) {\n        const workbook = new Excel.Workbook();\n        const sheet = workbook.addWorksheet(sheetsMap.map);\n        const rowsMap = sheetsMap.rowsMap;\n\n        const columns = fields\n            .map((item) => {\n                if (!!rowsMap[item]) {\n                    rowsMap[item].key = rowsMap[item].key ? rowsMap[item].key : item;\n                    return rowsMap[item];\n                }\n            })\n            .filter((item) => !!item);\n\n        const rows = dataSource.map((item) => {\n            const row = {};\n\n            Object.keys(rowsMap).forEach((key) => {\n                if (fields.includes(key)) {\n                    const handler = rowsMap[key].handler || ((val) => val);\n                    const headerKey = rowsMap[key].key || key;\n\n                    const obj = key.split('.');\n\n                    if (_.isArray(obj) && obj.length >= 2) {\n                        row[key] = handler(item[obj[0]]);\n                    } else {\n                        row[headerKey] = handler(item[headerKey]);\n                    }\n                }\n            });\n\n            return row;\n        });\n\n        sheet.columns = columns;\n        sheet.addRows(rows);\n\n        return await workbook.xlsx.writeBuffer();\n    }\n}\n\nexport default ExcelHelper;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/ExceptionsFilter.html":{"url":"classes/ExceptionsFilter.html","title":"class - ExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  ExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/aspects/exceptions.filter.ts\n        \n\n\n\n            \n                实现\n            \n            \n                            ExceptionFilter\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    catch(exception: unknown, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/aspects/exceptions.filter.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as Youch from 'youch';\nimport * as moment from 'moment';\nimport { Catch, ArgumentsHost, HttpException, ExceptionFilter, HttpStatus } from '@nestjs/common';\nimport { Logger } from '../lib/logger';\n\n@Catch()\nexport class ExceptionsFilter implements ExceptionFilter {\n    async catch(exception: unknown, host: ArgumentsHost) {\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n\n        Logger.error('exception', exception);\n        Logger.error(request.headers.xhr);\n\n        const timestamp = moment().format('YYYY-MM-DD HH:mm:ss');\n\n        if (exception instanceof HttpException) {\n            const status = exception.getStatus();\n            Logger.error(\n                `Catch http exception at ${request.raw.method} ${request.raw.url} ${status}`\n            );\n\n            response\n                .code(status)\n                .header('Content-Type', 'application/json; charset=utf-8')\n                .send({\n                    ...exception,\n                    timestamp,\n                    path: request.url\n                });\n        } else {\n            if (process.env.NODE_ENV !== 'production' && !request.headers.xhr) {\n                Logger.error('INTERNAL_SERVER_ERROR --->');\n                const youch = new Youch(exception, request.raw);\n\n                const html = await youch\n                    .addLink(({ message }) => {\n                        const url = `https://cn.bing.com/search?q=${encodeURIComponent(\n                            `[adonis.js] ${message}`\n                        )}`;\n                        return `Search Bing`;\n                    })\n                    .toHTML();\n\n                response.type('text/html');\n                response.code(HttpStatus.INTERNAL_SERVER_ERROR).send(html);\n            } else {\n                response\n                    .code(HttpStatus.INTERNAL_SERVER_ERROR)\n                    .header('Content-Type', 'application/json; charset=utf-8')\n                    .send({\n                        ...exception,\n                        timestamp,\n                        path: request.url\n                    });\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Flow.html":{"url":"classes/Flow.html","title":"class - Flow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Flow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/flow.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n            \n                实现\n            \n            \n                            IFlow\n            \n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                ex_info\n                            \n                            \n                                operator\n                            \n                            \n                                state\n                            \n                            \n                                template\n                            \n                            \n                                user\n                            \n                            \n                                wfResult\n                            \n                            \n                                wfStatus\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    State\n                                \n                                \n                                    ExecutableTasks\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/flow.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            operator\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         User\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/flow.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '任务状态'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/flow.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         FlowTemplate\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/flow.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         User\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/flow.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wfResult\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         WFResult\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '流程结果'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/flow.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wfStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         WFStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '流程状态'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/flow.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: Object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/flow.entity.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                Object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(info: any)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    info\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        State\n                    \n                \n\n                \n                    \n                        getState()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/flow.entity.ts:42\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ExecutableTasks\n                    \n                \n\n                \n                    \n                        getExecutableTasks()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/flow.entity.ts:48\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Base } from './base';\nimport { Entity, Column, ManyToOne } from 'typeorm';\nimport { IFlow, WFStatus, WFResult } from '../lib/wf';\nimport { FlowTemplate } from './flow-template.entity';\nimport { plainToClass, Expose } from 'class-transformer';\nimport { User } from './user.entity';\n\n@Entity()\nexport class Flow extends Base implements IFlow {\n    @Column({\n        comment: '任务状态'\n    })\n    state: string;\n\n    @Column({\n        comment: '流程状态'\n    })\n    wfStatus: WFStatus;\n\n    @Column({\n        comment: '流程结果'\n    })\n    wfResult: WFResult;\n\n    @Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n    ex_info: any;\n\n    @ManyToOne((type) => FlowTemplate, (template) => template.flows)\n    template: FlowTemplate;\n\n    @ManyToOne((type) => User, (user) => user.flows)\n    user: User;\n\n    @ManyToOne((type) => User, (operator) => operator.operatorFlows)\n    operator: User;\n\n    static create(target: Object) {\n        return plainToClass(Flow, target);\n    }\n\n    // 当前任务状态\n    get State() {\n        return this.state;\n    }\n\n    // 当前状态可执行任务\n    @Expose()\n    get ExecutableTasks() {\n        if (!!this.template) {\n            const { flowSteps } = this.template.ex_info;\n\n            if (!!flowSteps) {\n                const flow = flowSteps.find((item) => item.name === this.state);\n                if (!!flow) {\n                    return flow.steps.map((item) => item.name);\n                }\n            }\n        }\n\n        return [];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/FlowController.html":{"url":"classes/FlowController.html","title":"class - FlowController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  FlowController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/flow.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                dispatch\n                            \n                            \n                                    Async\n                                export\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(flowService: FlowService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/flow.controller.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        flowService\n                                                  \n                                                        \n                                                                        FlowService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/flow.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post('dispatch')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/flow.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            export\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    export(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('export')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/flow.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/flow.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('list')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/flow.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/flow.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/flow.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport {\n    UseGuards,\n    Get,\n    Query,\n    Delete,\n    Param,\n    BadRequestException,\n    Post,\n    Put,\n    Body,\n    UseInterceptors\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Api } from '../../common/aspects/decorator';\nimport { ClassSerializerInterceptor } from '@nestjs/common';\nimport { FlowService } from '../../common/services/flow.service';\n\n@Api('flow')\n@ApiUseTags('flow')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\n@UseInterceptors(ClassSerializerInterceptor)\nexport class FlowController {\n    constructor(private readonly flowService: FlowService) {}\n\n    @Get(':id')\n    async findOne(@Param('id') id) {\n        if (!id) throw new BadRequestException('参数 id 错误');\n\n        return await this.flowService.findOneById(id);\n    }\n\n    @Get('list')\n    async list(@Query() payload) {\n        return await this.flowService.query(payload);\n    }\n\n    @Post('dispatch')\n    async dispatch(@Body() payload) {\n        return await this.flowService.dispatch(payload);\n    }\n\n    @Get('export')\n    async export(@Query() payload) {\n        return await this.flowService.query(payload);\n    }\n\n    @Post()\n    async create(@Body() dto: any) {\n        return await this.flowService.save(dto);\n    }\n\n    @Put()\n    async update(@Body() dto: any) {\n        return await this.flowService.save(dto);\n    }\n\n    @Delete()\n    async remove(@Query() payload) {\n        return await this.flowService.remove(payload.selectedRows.split(','));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/FlowService.html":{"url":"injectables/FlowService.html","title":"injectable - FlowService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  FlowService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/flow.service.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseService\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                dispatch\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByUser\n                            \n                            \n                                    Async\n                                query\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(flowRepository: Repository, flowTemplateRepository: Repository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/flow.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        flowRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        flowTemplateRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: User, template: FlowTemplateEnum, initState?: string)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/flow.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    template\n                                    \n                                                FlowTemplateEnum\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    initState\n                                    \n                                                string\n                                    \n\n                                    \n                                        是\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/flow.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/flow.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/flow.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByUser(user: User, template: FlowTemplateEnum)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/flow.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    template\n                                    \n                                                FlowTemplateEnum\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(payload: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/flow.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/flow.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { BaseService } from './base.service';\nimport { Flow } from '../entities/flow.entity';\nimport { WFStatus, WFResult, Engine, wf } from '../lib/wf';\nimport { FlowTemplate } from '../entities/flow-template.entity';\nimport { FlowTemplateEnum } from '../aspects/enum';\nimport { TransformClassToPlain } from 'class-transformer';\nimport { User } from '../entities/user.entity';\n\n@Injectable()\nexport class FlowService extends BaseService {\n    constructor(\n        @InjectRepository(Flow) private readonly flowRepository: Repository,\n        @InjectRepository(FlowTemplate)\n        private readonly flowTemplateRepository: Repository\n    ) {\n        super(flowRepository);\n    }\n\n    async create(user: User, template: FlowTemplateEnum, initState?: string) {\n        const flow = new Flow();\n\n        flow.state = initState || Object.keys(Engine.flowTemplates[template])[0];\n\n        flow.wfStatus = WFStatus.RUNNING;\n        flow.wfResult = WFResult.RUNNING;\n\n        flow.template = await this.flowTemplateRepository.findOne({ where: { template } });\n        flow.user = user;\n\n        return await this.flowRepository.save(flow);\n    }\n\n    async dispatch(payload: any) {\n        const { flow, action, options } = payload;\n\n        return wf.dispatch(flow.id, action, options);\n    }\n\n    @TransformClassToPlain()\n    async query(payload: any) {\n        const qb = this.flowRepository.createQueryBuilder('t');\n\n        qb.leftJoinAndSelect('t.template', 'template');\n        qb.leftJoinAndSelect('t.user', 'user');\n        qb.leftJoinAndSelect('t.operator', 'operator');\n\n        if (!payload.page) {\n            payload.page = 0;\n        }\n\n        if (!payload.pageSize) {\n            payload.pageSize = 10;\n        }\n\n        if (!!payload.keyword) {\n            qb.andWhere(`t.name LIKE '%${payload.keyword}%'`);\n        }\n\n        if (!!payload.sort && !!payload.order) {\n            qb.addOrderBy(`t.${payload.sort}`, payload.order);\n        } else {\n            qb.addOrderBy('t.create_at', 'DESC');\n        }\n\n        qb.skip(payload.page * payload.pageSize);\n        qb.take(payload.pageSize);\n\n        return await qb.getManyAndCount();\n    }\n\n    @TransformClassToPlain()\n    async findAll() {\n        const qb = this.flowRepository.createQueryBuilder('t');\n\n        qb.leftJoinAndSelect('t.template', 'template');\n        qb.leftJoinAndSelect('t.user', 'user');\n        qb.leftJoinAndSelect('t.operator', 'operator');\n\n        qb.where('t.wfResult =:wfResult', { wfResult: WFResult.RUNNING });\n\n        return await qb.getMany();\n    }\n\n    async findOneById(id) {\n        const target = await this.flowRepository.findOne({\n            where: { id },\n            relations: ['user', 'template', 'operator']\n        });\n\n        return target;\n    }\n\n    async findOneByUser(user: User, template: FlowTemplateEnum) {\n        return this.flowRepository\n            .createQueryBuilder('t')\n            .leftJoinAndSelect('t.template', 'template')\n            .leftJoinAndSelect('t.user', 'user')\n            .leftJoinAndSelect('t.operator', 'operator')\n            .where('user.id =:userId', { userId: user.id })\n            .andWhere('template.template =:template', { template })\n            .andWhere('t.wfResult =:wfResult', { wfResult: WFResult.RUNNING })\n            .getOne();\n    }\n\n    async save(payload: any) {\n        const target = Flow.create(payload) as Flow;\n\n        return await this.flowRepository.save(target);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/FlowTemplate.html":{"url":"classes/FlowTemplate.html","title":"class - FlowTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  FlowTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/flow-template.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                ex_info\n                            \n                            \n                                flows\n                            \n                            \n                                name\n                            \n                            \n                                template\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/flow-template.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flows\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Flow[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/flow-template.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({unique: true, comment: '模板名称'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/flow-template.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         FlowTemplateEnum\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({unique: true, comment: '模板'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/flow-template.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: Object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/flow-template.entity.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                Object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(info: any)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    info\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Base } from './base';\nimport { Entity, Column, OneToMany } from 'typeorm';\nimport { FlowTemplateEnum } from '../aspects/enum';\nimport { Flow } from './flow.entity';\nimport { plainToClass } from 'class-transformer';\n\n@Entity()\nexport class FlowTemplate extends Base {\n    @Column({\n        unique: true,\n        comment: '模板名称'\n    })\n    name: string;\n\n    @Column({\n        unique: true,\n        comment: '模板'\n    })\n    template: FlowTemplateEnum;\n\n    @Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n    ex_info: any;\n\n    @OneToMany((type) => Flow, (flow) => flow.template)\n    flows: Flow[];\n\n    static create(target: Object) {\n        return plainToClass(FlowTemplate, target);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/FlowTemplateController.html":{"url":"classes/FlowTemplateController.html","title":"class - FlowTemplateController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  FlowTemplateController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/flow-template.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                export\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(flowTemplateService: FlowTemplateService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/flow-template.controller.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        flowTemplateService\n                                                  \n                                                        \n                                                                        FlowTemplateService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/flow-template.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            export\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    export(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('export')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/flow-template.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/flow-template.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('list')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/flow-template.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/flow-template.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/flow-template.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport {\n    UseGuards,\n    Get,\n    Query,\n    Delete,\n    Param,\n    BadRequestException,\n    Post,\n    Put,\n    Body,\n    UseInterceptors\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Api } from '../../common/aspects/decorator';\nimport { ClassSerializerInterceptor } from '@nestjs/common';\nimport { FlowTemplateService } from '../../common/services/flow-template.service';\n\n@Api('flow/template')\n@ApiUseTags('flow/template')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\n@UseInterceptors(ClassSerializerInterceptor)\nexport class FlowTemplateController {\n    constructor(private readonly flowTemplateService: FlowTemplateService) {}\n\n    @Get(':id')\n    async findOne(@Param('id') id) {\n        if (!id) throw new BadRequestException('参数 id 错误');\n\n        return await this.flowTemplateService.findOneById(id);\n    }\n\n    @Get('list')\n    async list(@Query() payload) {\n        return await this.flowTemplateService.query(payload);\n    }\n\n    @Get('export')\n    async export(@Query() payload) {\n        return await this.flowTemplateService.query(payload);\n    }\n\n    @Post()\n    async create(@Body() dto: any) {\n        return await this.flowTemplateService.save(dto);\n    }\n\n    @Put()\n    async update(@Body() dto: any) {\n        return await this.flowTemplateService.save(dto);\n    }\n\n    @Delete()\n    async remove(@Query() payload) {\n        return await this.flowTemplateService.remove(payload.selectedRows.split(','));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/FlowTemplateService.html":{"url":"injectables/FlowTemplateService.html","title":"injectable - FlowTemplateService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  FlowTemplateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/flow-template.service.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseService\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                query\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(flowTemplateRepository: Repository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/flow-template.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        flowTemplateRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/flow-template.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/flow-template.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/flow-template.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { BaseService } from './base.service';\nimport { FlowTemplate } from '../entities/flow-template.entity';\n\n@Injectable()\nexport class FlowTemplateService extends BaseService {\n    constructor(\n        @InjectRepository(FlowTemplate)\n        private readonly flowTemplateRepository: Repository\n    ) {\n        super(flowTemplateRepository);\n    }\n\n    async query(payload: any) {\n        const qb = this.flowTemplateRepository.createQueryBuilder('t');\n\n        if (!payload.page) {\n            payload.page = 0;\n        }\n\n        if (!payload.pageSize) {\n            payload.pageSize = 10;\n        }\n\n        if (!!payload.keyword) {\n            qb.andWhere(`t.name LIKE '%${payload.keyword}%'`);\n        }\n\n        if (!!payload.sort && !!payload.order) {\n            qb.addOrderBy(`t.${payload.sort}`, payload.order);\n        } else {\n            qb.addOrderBy('t.update_at', 'DESC');\n        }\n\n        qb.skip(payload.page * payload.pageSize);\n        qb.take(payload.pageSize);\n\n        return await qb.getManyAndCount();\n    }\n\n    async findOneById(id) {\n        return await this.flowTemplateRepository.findOne(id);\n    }\n\n    async save(payload: any) {\n        const target = FlowTemplate.create(payload) as FlowTemplate;\n\n        return await this.flowTemplateRepository.save(target);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IFlow.html":{"url":"interfaces/IFlow.html","title":"interface - IFlow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IFlow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/lib/wf.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ExecutableTasks\n                                \n                                \n                                        id\n                                \n                                \n                                        State\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        ExecutableTasks\n                                    \n                                \n                                \n                                    \n                                        ExecutableTasks:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        State\n                                    \n                                \n                                \n                                    \n                                        State:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { isArray } from 'lodash';\nimport { Logger } from './logger';\nimport { mq, MQChannel } from './mq';\nimport { Flow } from '../entities/flow.entity';\nimport { FlowTemplateEnum } from '../aspects/enum';\nimport { getRepository } from 'typeorm';\n\nexport const OVER = 'OVER';\n\nexport interface IFlow {\n    id: string;\n    State: string;\n    ExecutableTasks: string[];\n}\n\nexport enum WFStatus {\n    RUNNING, // 运行中\n    OVER, // 已完成\n    CANCELED // 已取消\n}\n\nexport enum WFResult {\n    RUNNING, // 进行中\n    SUCCESS, //成功\n    FAILURE // 失败\n}\n\nexport class Engine {\n    static flowTemplates: any = {};\n\n    public static register(template: FlowTemplateEnum, flow: any) {\n        Engine.flowTemplates[template] = flow;\n    }\n\n    public async init() {\n        Logger.trace('Workflow Engine Starting');\n\n        await mq.Channel.assertQueue(MQChannel.WF);\n        await this.consume();\n\n        Logger.trace('Workflow Engine Started');\n    }\n\n    public async dispatch(id, taskName, options = {}) {\n        Logger.log(`WF:${id} dispatch`, taskName, options);\n\n        return await mq.Channel.sendToQueue(\n            MQChannel.WF,\n            Buffer.from(JSON.stringify({ id, name: taskName, options }))\n        );\n    }\n\n    private async consume() {\n        await mq.Channel.consume(MQChannel.WF, async (msg) => {\n            const task = JSON.parse(msg.content.toString());\n\n            const flow = await getRepository(Flow).findOne({\n                where: { id: task.id },\n                relations: ['user', 'template', 'operator']\n            });\n            Logger.log('WF: flow', flow);\n\n            if (!!flow) {\n                Logger.log('WF: current ExecutableTasks', flow.ExecutableTasks);\n\n                if (flow.ExecutableTasks.includes(task.name)) {\n                    const template = Engine.flowTemplates[flow.template.template];\n                    const res = await template[flow.state][task.name](flow, task.options);\n\n                    Logger.log('WF: next state', flow.state);\n\n                    let nextState = res;\n                    let nextStep = null;\n\n                    if (isArray(res)) {\n                        try {\n                            nextState = res[0];\n                            nextStep = res[1];\n                        } catch (err) {\n                            Logger.error(err);\n                        }\n                    }\n\n                    flow.state = nextState;\n\n                    if (!!nextStep) {\n                        await this.dispatch(\n                            nextStep.id || flow.id,\n                            nextStep.nextStep,\n                            nextStep.options || {}\n                        );\n                    }\n\n                    Logger.log('WF: next ExecutableTasks', flow.ExecutableTasks);\n                }\n            }\n\n            await mq.Channel.ack(msg);\n        });\n    }\n}\n\nconst wf = new Engine();\n\nexport { wf };\nexport default wf;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/IO.html":{"url":"classes/IO.html","title":"class - IO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  IO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/lib/io.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                socketIO\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    server\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/lib/io.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            socketIO\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         SocketIO.Server\n\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/lib/io.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/io.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        server\n                    \n                \n\n                \n                    \n                        getserver()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/lib/io.ts:11\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import * as SocketIO from 'socket.io';\nimport { Logger } from './logger';\n\nexport class IO {\n    private readonly socketIO: SocketIO.Server;\n\n    constructor() {\n        this.socketIO = SocketIO();\n    }\n\n    get server() {\n        return this.socketIO;\n    }\n\n    async init() {\n        this.server.use((socket, next) => {\n            Logger.log('id', socket.id);\n            next();\n        });\n\n        this.server.on('connect', (socket) => {\n            Logger.log('connect');\n            Logger.log('clients', this.server.clients);\n            Logger.log('headers', socket.request.headers);\n\n            socket.on('disconnectcting', (reason) => {\n                Logger.warn('disconnectcting', socket.id, reason);\n            });\n            socket.on('disconnect', (reason) => {\n                Logger.warn('disconnect', socket.id, reason);\n            });\n            socket.on('error', (error) => {\n                Logger.error('error', socket.id, error);\n            });\n        });\n    }\n}\n\nconst io = new IO();\n\nconst IOServer = {\n    status: io.server.of('/status'),\n    notices: io.server.of('/notices')\n};\n\nIOServer.status.use((socket, next) => {\n    Logger.log('/status ---> id', socket.id);\n    next();\n});\n\nIOServer.notices.use((socket, next) => {\n    Logger.log('/notices ---> id', socket.id);\n    next();\n});\n\nexport { io, IOServer };\nexport default io;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/ImportService.html":{"url":"injectables/ImportService.html","title":"injectable - ImportService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  ImportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/import.service.ts\n        \n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleFile\n                            \n                            \n                                    Async\n                                importContents\n                            \n                            \n                                    Async\n                                importOrganizations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(connection: Connection, categoryService: CategoryService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/import.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                        Connection\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handleFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFile(file, target)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/import.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    file\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    target\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            importContents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    importContents(file)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/import.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    file\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            importOrganizations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    importOrganizations(file)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/import.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    file\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ExcelHelper } from '../lib/excel';\nimport { Content } from '../entities/content.entity';\nimport { Organization } from '../entities/organization.entity';\nimport { CategoryService } from './category.service';\nimport { InjectConnection } from '@nestjs/typeorm';\nimport { Connection } from 'typeorm';\n\n\n@Injectable()\nexport class ImportService {\n\tconstructor(\n\t\t@InjectConnection() private readonly connection: Connection,\n\t\tprivate readonly categoryService: CategoryService\n\t) { }\n\n\tasync handleFile(file, target) {\n\t\tswitch (target) {\n\t\t\tcase 'contents':\n\t\t\t\treturn await this.importContents(file);\n\t\t\tcase 'organizations':\n\t\t\t\treturn await this.importOrganizations(file);\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync importContents(file) {\n\t\tconst res = await ExcelHelper.loadFromBuffer(file.data, Content.sheetsMap);\n\n\t\tObject.keys(res).forEach(async (key) => {\n\t\t\tconst category = await this.categoryService.findOneByName(key);\n\n\t\t\tif (!category) return false;\n\n\t\t\tconst news = Content.create(res[key]) as Content[];\n\t\t\tconst list = news.map((item) => {\n\t\t\t\titem.category = category;\n\t\t\t\treturn item;\n\t\t\t});\n\n\t\t\tawait this.connection.getRepository(Content).save(list);\n\t\t});\n\n\t\treturn true;\n\t}\n\n\tasync importOrganizations(file) {\n\t\tconst res = await ExcelHelper.loadFromBuffer(file.data, Organization.sheetsMap);\n\t\tconst organizations = res['organizations'];\n\t\tconst organizationArr = [];\n\n\t\torganizations.forEach((item) => {\n\t\t\tif (!!item.parent) {\n\t\t\t\titem.parent = organizationArr.find((org) => org.id === item.parent);\n\t\t\t}\n\t\t\torganizationArr.push(Organization.create(item));\n\t\t});\n\n\t\tawait this.connection.getTreeRepository(Organization).save(organizationArr);\n\n\t\treturn true;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"controllers/IndexController.html":{"url":"controllers/IndexController.html","title":"controller - IndexController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IndexController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/ssr/controllers/index.controller.ts\n        \n\n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                index\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            index\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    index(res)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    被定义在 server/src/ssr/controllers/index.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Res, Get } from '@nestjs/common';\nimport { CommonService } from '../../common/services/common.service';\n\n@Controller()\nexport class IndexController {\n    constructor(private readonly commonService: CommonService) { }\n\n    @Get()\n    async index(@Res() res) {\n        const siteInfo = await this.commonService.getSiteInfo();\n\n        return res.render('/', {\n            siteInfo\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/strategys/jwt.strategy.ts\n        \n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/strategys/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: User)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/strategys/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                User\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { config } from '../../config';\nimport { User } from '../entities/user.entity';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor(private readonly userService: UserService) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tsecretOrKey: config.jwt.secretOrPrivateKey\n\t\t});\n\t}\n\n\tasync validate(payload: User) {\n\t\tconst user = await this.userService.findOneById(payload.id);\n\t\tif (!user) {\n\t\t\tthrow new UnauthorizedException('身份验证失败');\n\t\t}\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/lib/logger.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                debug\n                            \n                            \n                                debug\n                            \n                            \n                                    Static\n                                error\n                            \n                            \n                                error\n                            \n                            \n                                    Static\n                                fatal\n                            \n                            \n                                fatal\n                            \n                            \n                                    Static\n                                getStackTrace\n                            \n                            \n                                    Static\n                                info\n                            \n                            \n                                info\n                            \n                            \n                                    Static\n                                log\n                            \n                            \n                                log\n                            \n                            \n                                    Static\n                                trace\n                            \n                            \n                                trace\n                            \n                            \n                                    Static\n                                warn\n                            \n                            \n                                warn\n                            \n                            \n                                    Static\n                                warning\n                            \n                            \n                                warning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    debug(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fatal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fatal(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fatal\n                        \n                        \n                    \n                \n            \n            \n                \nfatal(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getStackTrace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStackTrace(deep: number)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                    缺省值\n                                \n                            \n                            \n                                \n                                    deep\n                                    \n                                                number\n                                    \n\n                                    \n                                        否\n                                    \n\n                                    \n                                        2\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         ContextTrace\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            info\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    info(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            trace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trace(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trace\n                        \n                        \n                    \n                \n            \n            \n                \ntrace(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            warning\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    warning(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warning\n                        \n                        \n                    \n                \n            \n            \n                \nwarning(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport * as Path from 'path';\nimport * as Log4js from 'log4js';\nimport * as Util from 'util';\nimport * as Moment from 'moment';\nimport * as StackTrace from 'stacktrace-js';\nimport Chalk from 'chalk';\n\nexport enum LoggerLevel {\n    ALL = 'ALL',\n    MARK = 'MARK',\n    TRACE = 'TRACE',\n    DEBUG = 'DEBUG',\n    INFO = 'INFO',\n    WARN = 'WARN',\n    ERROR = 'ERROR',\n    FATAL = 'FATAL',\n    OFF = 'OFF'\n}\n\nexport class ContextTrace {\n    constructor(\n        public readonly context: string,\n        public readonly path?: string,\n        public readonly lineNumber?: number,\n        public readonly columnNumber?: number\n    ) { }\n}\n\nLog4js.addLayout('Nestify', (logConfig: any) => {\n    return (logEvent: Log4js.LoggingEvent): string => {\n        let moduleName: string = '';\n        let position: string = '';\n\n        const messageList: string[] = [];\n        logEvent.data.forEach((value: any) => {\n            if (value instanceof ContextTrace) {\n                moduleName = value.context;\n                if (value.lineNumber && value.columnNumber) {\n                    position = `${value.lineNumber}, ${value.columnNumber}`;\n                }\n                return;\n            }\n\n            if (typeof value !== 'string') {\n                value = Util.inspect(value, false, 3, true);\n            }\n\n            messageList.push(value);\n        });\n\n        const messageOutput: string = messageList.join(' ');\n        const positionOutput: string = position ? ` [${position}]` : '';\n        const typeOutput: string = `[${logConfig.type}] ${logEvent.pid.toString()}   - `;\n        const dateOutput: string = `${Moment(logEvent.startTime).format('YYYY-MM-DD HH:mm:ss')}`;\n        const moduleOutput: string = moduleName ? `[${moduleName}] ` : '[LoggerService] ';\n        let levelOutput: string = `[${logEvent.level}] ${messageOutput}`;\n\n        switch (logEvent.level.toString()) {\n            case LoggerLevel.DEBUG:\n                levelOutput = Chalk.green(levelOutput);\n                break;\n            case LoggerLevel.INFO:\n                levelOutput = Chalk.cyan(levelOutput);\n                break;\n            case LoggerLevel.WARN:\n                levelOutput = Chalk.yellow(levelOutput);\n                break;\n            case LoggerLevel.ERROR:\n                levelOutput = Chalk.red(levelOutput);\n                break;\n            case LoggerLevel.FATAL:\n                levelOutput = Chalk.hex('#DD4C35')(levelOutput);\n                break;\n            default:\n                levelOutput = Chalk.grey(levelOutput);\n                break;\n        }\n\n        return `${Chalk.green(typeOutput)}${dateOutput}    ${Chalk.yellow(\n            moduleOutput\n        )}${levelOutput}${positionOutput}`;\n    };\n});\n\nLog4js.configure({\n    appenders: {\n        console: {\n            type: 'stdout',\n            layout: { type: 'Nestify' }\n        }\n    },\n    categories: {\n        default: {\n            appenders: ['console'],\n            level: 'debug'\n        }\n    }\n});\n\nconst logger = Log4js.getLogger();\nlogger.level = LoggerLevel.TRACE;\n\nexport class Logger {\n    static trace(...args) {\n        logger.trace(Logger.getStackTrace(), ...args);\n    }\n\n    static debug(...args) {\n        logger.debug(Logger.getStackTrace(), ...args);\n    }\n\n    static log(...args) {\n        logger.info(Logger.getStackTrace(), ...args);\n    }\n\n    static info(...args) {\n        logger.info(Logger.getStackTrace(), ...args);\n    }\n\n    static warn(...args) {\n        logger.warn(Logger.getStackTrace(), ...args);\n    }\n\n    static warning(...args) {\n        logger.warn(Logger.getStackTrace(), ...args);\n    }\n\n    static error(...args) {\n        logger.error(Logger.getStackTrace(), ...args);\n    }\n\n    static fatal(...args) {\n        logger.fatal(Logger.getStackTrace(), ...args);\n    }\n\n    static getStackTrace(deep: number = 2): ContextTrace {\n        const stackList: StackTrace.StackFrame[] = StackTrace.getSync();\n        const stackInfo: StackTrace.StackFrame = stackList[deep];\n\n        const lineNumber: number = stackInfo.lineNumber;\n        const columnNumber: number = stackInfo.columnNumber;\n        const fileName: string = stackInfo.fileName;\n\n        const extnameLength: number = Path.extname(fileName).length;\n        let basename: string = Path.basename(fileName);\n        basename = basename.substr(0, basename.length - extnameLength);\n        const context: string = _.upperFirst(_.camelCase(basename));\n\n        return new ContextTrace(context, fileName, lineNumber, columnNumber);\n    }\n\n    trace(...args) {\n        logger.trace(Logger.getStackTrace(), ...args);\n    }\n\n    debug(...args) {\n        logger.debug(Logger.getStackTrace(), ...args);\n    }\n\n    log(...args) {\n        logger.info(Logger.getStackTrace(), ...args);\n    }\n\n    info(...args) {\n        logger.info(Logger.getStackTrace(), ...args);\n    }\n\n    warn(...args) {\n        logger.warn(Logger.getStackTrace(), ...args);\n    }\n\n    warning(...args) {\n        logger.warn(Logger.getStackTrace(), ...args);\n    }\n\n    error(...args) {\n        logger.error(Logger.getStackTrace(), ...args);\n    }\n\n    fatal(...args) {\n        logger.fatal(Logger.getStackTrace(), ...args);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/LoginController.html":{"url":"classes/LoginController.html","title":"class - LoginController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  LoginController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/login.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/login.controller.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(dto: LoginDto)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/login.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Post, UsePipes, ValidationPipe, Body } from '@nestjs/common';\nimport { ApiUseTags } from '@nestjs/swagger';\nimport { Api } from '../../common/aspects/decorator';\nimport { LoginDto } from '../../common/dtos/login.dto';\nimport { UserService } from '../../common/services/user.service';\n\n@Api('login')\n@ApiUseTags('login')\nexport class LoginController {\n    constructor(private readonly userService: UserService) {}\n\n    @Post()\n    @UsePipes(new ValidationPipe())\n    async login(@Body() dto: LoginDto) {\n        return await this.userService.login(dto.account, dto.password);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/dtos/login.dto.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                account\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@IsNotEmpty({message: '帐号不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/login.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@MinLength(8, {message: '密码不能少于8位'})@MaxLength(12, {message: '密码不能大于12位'})@IsNotEmpty({message: '密码不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/login.dto.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMobilePhone, MinLength, MaxLength, IsNotEmpty } from 'class-validator';\nimport { ApiModelProperty } from '@nestjs/swagger';\n\nexport class LoginDto {\n\t@ApiModelProperty()\n\t// @IsMobilePhone('zh-CN', {\n\t// \tmessage: '手机号无效'\n\t// })\n\t@IsNotEmpty({\n\t\tmessage: '帐号不能为空'\n\t})\n\treadonly account: string;\n\n\t@ApiModelProperty()\n\t@MinLength(8, {\n\t\tmessage: '密码不能少于8位'\n\t})\n\t@MaxLength(12, {\n\t\tmessage: '密码不能大于12位'\n\t})\n\t@IsNotEmpty({\n\t\tmessage: '密码不能为空'\n\t})\n\treadonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/MQ.html":{"url":"classes/MQ.html","title":"class - MQ","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  MQ\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/lib/mq.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                client\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Channel\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            channel\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         AMQP.Channel\n\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/lib/mq.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         AMQP.Connection\n\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/lib/mq.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/mq.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        Channel\n                    \n                \n\n                \n                    \n                        getChannel()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/lib/mq.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import * as AMQP from 'amqplib';\nimport { config } from '../../config';\nimport { Logger } from './logger';\n\nexport enum MQChannel {\n    WF = 'WF',\n}\n\nexport class MQ {\n    private client: AMQP.Connection;\n    private channel: AMQP.Channel;\n\n    async init() {\n        Logger.trace('Message Queue Connecting');\n\n        this.client = await AMQP.connect(config.mq.url, config.mq.options);\n        this.channel = await this.client.createChannel();\n\n        Logger.trace('Message Queue Connected');\n    }\n\n    get Channel() {\n        return this.channel;\n    }\n}\n\nconst mq = new MQ();\n\nexport { mq };\nexport default mq;\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Notice.html":{"url":"classes/Notice.html","title":"class - Notice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Notice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/notice.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                ex_info\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '摘要', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/notice.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/notice.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '标题'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/notice.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         NoticeType\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '类型', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/notice.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: Object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/notice.entity.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                Object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(info: any)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    info\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column } from 'typeorm';\nimport { Base } from './base';\nimport { plainToClass } from 'class-transformer';\nimport { NoticeType } from '../aspects/enum';\n\n@Entity()\nexport class Notice extends Base {\n    @Column({\n        comment: '标题'\n    })\n    title: string;\n\n    @Column({\n        comment: '摘要',\n        default: ''\n    })\n    description: string;\n\n    @Column({\n        comment: '类型',\n        default: NoticeType.MESSAGE\n    })\n    type: NoticeType;\n\n    @Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n    ex_info: any;\n\n    static create(target: Object) {\n        return plainToClass(Notice, target);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Organization.html":{"url":"classes/Organization.html","title":"class - Organization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/organization.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                desc\n                            \n                            \n                                ex_info\n                            \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                            \n                                    Static\n                                    Readonly\n                                sheetsMap\n                            \n                            \n                                sort\n                            \n                            \n                                users\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    title\n                                \n                                \n                                    key\n                                \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Organization[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @TreeChildren()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/organization.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desc\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '描述', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/organization.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/organization.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '名称'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/organization.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Organization\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @TreeParent()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/organization.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            sheetsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n        组织架构: {\n            map: 'organizations',\n            handleType: ExcelHandleType.ARRAY,\n            cellsMap: { ID: 'id', 名称: 'name', 描述: 'desc', 排序: 'sort', PID: 'parent' }\n        }\n    }\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/organization.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '排序', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/organization.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         User[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/organization.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: Object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/organization.entity.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                Object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(info: any)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    info\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/organization.entity.ts:32\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n\n                \n                    \n                        getkey()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/organization.entity.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/organization.entity.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { plainToClass, Expose } from 'class-transformer';\nimport { Base } from './base';\nimport { Entity, Column, Tree, TreeChildren, TreeParent, OneToMany } from 'typeorm';\nimport { ExcelHandleType } from '../lib/excel';\nimport { User } from './user.entity';\n\n@Entity()\n@Tree('materialized-path')\nexport class Organization extends Base {\n    @Column({\n        comment: '名称'\n    })\n    name: string;\n\n    @Column({ comment: '描述', default: '' })\n    desc: string;\n\n    @Column({ comment: '排序', default: 0 })\n    sort: number;\n\n    @Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n    ex_info: any;\n\n    @TreeChildren() children: Organization[];\n\n    @TreeParent() parent: Organization;\n\n    @OneToMany((type) => User, (user) => user.org)\n    users: User[];\n\n    @Expose()\n    get title(): string {\n        return this.name;\n    }\n\n    @Expose()\n    get key(): string {\n        return this.id;\n    }\n\n    @Expose()\n    get value(): string {\n        return this.id;\n    }\n\n    static readonly sheetsMap: object = {\n        组织架构: {\n            map: 'organizations',\n            handleType: ExcelHandleType.ARRAY,\n            cellsMap: { ID: 'id', 名称: 'name', 描述: 'desc', 排序: 'sort', PID: 'parent' }\n        }\n    };\n\n    static create(target: Object) {\n        return plainToClass(Organization, target);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/OrganizationController.html":{"url":"classes/OrganizationController.html","title":"class - OrganizationController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  OrganizationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/organization.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                parent\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/organization.controller.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/organization.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/organization.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('list')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/organization.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            parent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parent(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put('parent')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/organization.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/organization.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/organization.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport {\n\tUseGuards,\n\tGet,\n\tQuery,\n\tDelete,\n\tParam,\n\tBadRequestException,\n\tPost,\n\tPut,\n\tBody,\n\tUseInterceptors\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ClassSerializerInterceptor } from '@nestjs/common';\nimport { Api } from '../../common/aspects/decorator';\nimport { OrganizationService } from '../../common/services/organization.service';\n\n@Api('organization')\n@ApiUseTags('organization')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\n@UseInterceptors(ClassSerializerInterceptor)\nexport class OrganizationController {\n\tconstructor(private readonly organizationService: OrganizationService) { }\n\n\t@Get(':id')\n\tasync findOne(@Param('id') id) {\n\t\tif (!id) throw new BadRequestException('参数 id 错误');\n\n\t\treturn await this.organizationService.findOneById(id);\n\t}\n\n\t@Get('list')\n\tasync list(@Query() payload) {\n\t\treturn await this.organizationService.query(payload);\n\t}\n\n\t@Post()\n\tasync create(@Body() dto: any) {\n\t\treturn await this.organizationService.save(dto);\n\t}\n\n\t@Put()\n\tasync update(@Body() dto: any) {\n\t\treturn await this.organizationService.save(dto);\n\t}\n\n\t@Put('parent')\n\tasync parent(@Body() dto: any) {\n\t\treturn await this.organizationService.parent(dto);\n\t}\n\n\t@Delete()\n\tasync remove(@Query() payload) {\n\t\treturn await this.organizationService.remove(payload.selectedRows.split(','));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/organization.service.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseService\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneByName\n                            \n                            \n                                    Async\n                                parent\n                            \n                            \n                                    Async\n                                query\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(organizationRepository: TreeRepository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/organization.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        organizationRepository\n                                                  \n                                                        \n                                                                        TreeRepository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByName(name: string)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/organization.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            parent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parent(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/organization.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/organization.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/organization.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/organization.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { Injectable, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TreeRepository } from 'typeorm';\nimport { BaseService } from './base.service';\nimport { Organization } from '../entities/organization.entity';\n\n@Injectable()\nexport class OrganizationService extends BaseService {\n    constructor(\n        @InjectRepository(Organization)\n        private readonly organizationRepository: TreeRepository\n    ) {\n        super(organizationRepository);\n    }\n\n    async query(payload: any) {\n        return await this.organizationRepository.findTrees();\n    }\n\n    async findOneByName(name: string) {\n        return await this.organizationRepository.findOne({ name });\n    }\n\n    async save(payload: any) {\n        const organization = Organization.create(payload) as Organization;\n\n        if (!!payload.parentId) {\n            organization.parent = await this.organizationRepository.findOne(payload.parentId);\n        }\n\n        return await this.organizationRepository.save(organization);\n    }\n\n    async parent(payload: any) {\n        const target = await this.organizationRepository.findOne(payload.id);\n        target.parent = await this.organizationRepository.findOne(payload.parentId);\n\n        return await this.organizationRepository.save(target);\n    }\n\n    async remove(ids: string[]) {\n        const roots = await this.organizationRepository.findRoots();\n\n        roots.forEach((root) => {\n            if (ids.includes(root.id)) throw new BadRequestException('不能删除根节点');\n        });\n\n        return await this.organizationRepository.remove(\n            await this.organizationRepository.findByIds(ids)\n        );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/PasswordDto.html":{"url":"classes/PasswordDto.html","title":"class - PasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  PasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/dtos/password.dto.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                oldPassword\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            oldPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@MinLength(8, {message: '旧密码不能少于8位'})@MaxLength(12, {message: '旧密码不能大于12位'})@IsNotEmpty({message: '旧密码不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/password.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@MinLength(8, {message: '密码不能少于8位'})@MaxLength(12, {message: '密码不能大于12位'})@IsNotEmpty({message: '密码不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/password.dto.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MinLength, MaxLength, IsNotEmpty } from 'class-validator';\nimport { ApiModelProperty } from '@nestjs/swagger';\n\nexport class PasswordDto {\n\n\t@ApiModelProperty()\n\t@MinLength(8, {\n\t\tmessage: '旧密码不能少于8位'\n\t})\n\t@MaxLength(12, {\n\t\tmessage: '旧密码不能大于12位'\n\t})\n\t@IsNotEmpty({\n\t\tmessage: '旧密码不能为空'\n\t})\n\treadonly oldPassword: string;\n\n\t@ApiModelProperty()\n\t@MinLength(8, {\n\t\tmessage: '密码不能少于8位'\n\t})\n\t@MaxLength(12, {\n\t\tmessage: '密码不能大于12位'\n\t})\n\t@IsNotEmpty({\n\t\tmessage: '密码不能为空'\n\t})\n\treadonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Qiniu.html":{"url":"classes/Qiniu.html","title":"class - Qiniu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Qiniu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/lib/qiniu.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mac\n                            \n                            \n                                    Static\n                                putPolicy\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createUploadToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            mac\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new qiniu.auth.digest.Mac(config.qiniu.accessKey, config.qiniu.secretKey)\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/lib/qiniu.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            putPolicy\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new qiniu.rs.PutPolicy(config.qiniu.policy)\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/lib/qiniu.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createUploadToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUploadToken()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/qiniu.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as qiniu from 'qiniu';\nimport { config } from '../../config';\n\nexport class Qiniu {\n\n    static mac = new qiniu.auth.digest.Mac(config.qiniu.accessKey, config.qiniu.secretKey);\n\n    static putPolicy = new qiniu.rs.PutPolicy(config.qiniu.policy);\n\n    static createUploadToken() {\n        return Qiniu.putPolicy.uploadToken(Qiniu.mac);\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/role.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                authorities\n                            \n                            \n                                desc\n                            \n                            \n                                ex_info\n                            \n                            \n                                name\n                            \n                            \n                                    Static\n                                    Readonly\n                                sheetsMap\n                            \n                            \n                                sort\n                            \n                            \n                                token\n                            \n                            \n                                users\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isSuperAdmin\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authorities\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Authority[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ManyToMany(undefined, undefined)@JoinTable()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/role.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desc\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '描述', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/role.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/role.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '名称', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/role.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            sheetsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n        角色: {\n            map: 'roles',\n            handleType: ExcelHandleType.ARRAY,\n            cellsMap: { ID: 'id', 名称: 'name', 标识: 'token', 描述: 'desc', 排序: 'sort' }\n        }\n    }\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/role.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '排序', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/role.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '标识', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/role.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         User[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/role.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: Object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/role.entity.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                Object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(info: any)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    info\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        isSuperAdmin\n                    \n                \n\n                \n                    \n                        getisSuperAdmin()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/role.entity.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { plainToClass, Expose } from 'class-transformer';\nimport { Base } from './base';\nimport { Entity, Column, ManyToMany, JoinTable, OneToMany } from 'typeorm';\nimport { ExcelHandleType } from '../lib/excel';\nimport { Authority } from './authority.entity';\nimport { User } from './user.entity';\n\n@Entity()\nexport class Role extends Base {\n    @Column({\n        comment: '名称',\n        unique: true\n    })\n    name: string;\n\n    @Column({\n        comment: '标识',\n        unique: true\n    })\n    token: string;\n\n    @Column({ comment: '描述', default: '' })\n    desc: string;\n\n    @Column({ comment: '排序', default: 0 })\n    sort: number;\n\n    @Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n    ex_info: any;\n\n    @ManyToMany((type) => Authority, (authority) => authority.roles)\n    @JoinTable()\n    authorities: Authority[];\n\n    @OneToMany((type) => User, (user) => user.role)\n    users: User[];\n\n    static readonly sheetsMap: object = {\n        角色: {\n            map: 'roles',\n            handleType: ExcelHandleType.ARRAY,\n            cellsMap: { ID: 'id', 名称: 'name', 标识: 'token', 描述: 'desc', 排序: 'sort' }\n        }\n    };\n\n    static create(target: Object) {\n        return plainToClass(Role, target);\n    }\n\n    @Expose()\n    get isSuperAdmin(): boolean {\n        return this.token === 'superAdmin';\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/RoleController.html":{"url":"classes/RoleController.html","title":"class - RoleController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  RoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/role.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                export\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(roleService: RoleService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/role.controller.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/role.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            export\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    export(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('export')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/role.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/role.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('list')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/role.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/role.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/role.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport {\n\tUseGuards,\n\tGet,\n\tQuery,\n\tDelete,\n\tParam,\n\tBadRequestException,\n\tPost,\n\tPut,\n\tBody,\n\tUseInterceptors\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Api } from '../../common/aspects/decorator';\nimport { ClassSerializerInterceptor } from '@nestjs/common';\nimport { RoleService } from '../../common/services/role.service';\n\n@Api('role')\n@ApiUseTags('role')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\n@UseInterceptors(ClassSerializerInterceptor)\nexport class RoleController {\n\tconstructor(private readonly roleService: RoleService) { }\n\n\t@Get(':id')\n\tasync findOne(@Param('id') id) {\n\t\tif (!id) throw new BadRequestException('参数 id 错误');\n\n\t\treturn await this.roleService.findOneAndRelations(id);\n\t}\n\n\t@Get('list')\n\tasync list(@Query() payload) {\n\t\treturn await this.roleService.query(payload);\n\t}\n\n\t@Get('export')\n\tasync export(@Query() payload) {\n\t\treturn await this.roleService.query(payload);\n\t}\n\n\t@Post()\n\tasync create(@Body() dto: any) {\n\t\treturn await this.roleService.save(dto);\n\t}\n\n\t@Put()\n\tasync update(@Body() dto: any) {\n\t\treturn await this.roleService.save(dto);\n\t}\n\n\t@Delete()\n\tasync remove(@Query() payload) {\n\t\treturn await this.roleService.remove(payload.selectedRows.split(','));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/role.service.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseService\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneAndRelations\n                            \n                            \n                                    Async\n                                query\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(roleRepository: Repository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/role.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneAndRelations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAndRelations(id: string)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/role.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(payload: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/role.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/role.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { TransformClassToPlain } from 'class-transformer';\nimport { BaseService } from './base.service';\nimport { Role } from '../entities/role.entity';\n\n@Injectable()\nexport class RoleService extends BaseService {\n    constructor(@InjectRepository(Role) private readonly roleRepository: Repository) {\n        super(roleRepository);\n    }\n\n    @TransformClassToPlain()\n    async findOneAndRelations(id: string) {\n        return await this.roleRepository.findOne({ where: { id }, relations: ['authorities'] });\n    }\n\n    @TransformClassToPlain()\n    async query(payload: any) {\n        const qb = this.roleRepository.createQueryBuilder('t');\n\n        qb.leftJoinAndSelect('t.authorities', 'authorities');\n\n        if (!!payload.keyword) {\n            qb.andWhere(`t.name LIKE '%${payload.keyword}%'`);\n        }\n\n        if (!!payload.sort && !!payload.order) {\n            qb.addOrderBy(`t.${payload.sort}`, payload.order);\n        } else {\n            // 默认排序规则\n            qb.addOrderBy('t.sort', 'DESC');\n        }\n\n        qb.skip(payload.page * payload.pageSize);\n        qb.take(payload.pageSize);\n\n        return await qb.getManyAndCount();\n    }\n\n    async save(payload: any) {\n        const role = Role.create(payload) as Role;\n\n        return await this.roleRepository.save(role);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/SMS.html":{"url":"classes/SMS.html","title":"class - SMS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  SMS\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/lib/sms.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                templates\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            templates\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n        USER_REGISTER:\n            '【文明实践中心】尊敬的用户，您的注册验证码是{$var}, {$var}分钟内有效, 打死都不要告诉别人！',\n        PASSWORD_RESET: '【文明实践中心】尊敬的{$var}，您好，您的密码是：{$var}，{$var}分钟内有效'\n    }\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/lib/sms.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(phonenumber: string, template: SMSTemplates, parameters: string[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/sms.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    phonenumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    template\n                                    \n                                                SMSTemplates\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    parameters\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as SuperAgent from 'superagent';\nimport { Logger } from './logger';\n\nexport enum SMSTemplates {\n    USER_REGISTER = 'USER_REGISTER',\n    PASSWORD_RESET = 'PASSWORD_RESET'\n}\n\n// SMS_ACCOUNT=xxx\n// SMS_SECRET=xxx\n// SMS_URL=http://smssh1.253.com/msg/send/json\n// SMS_DOMAIN=smssh1.253.com\n\nexport class SMS {\n    static templates: object = {\n        USER_REGISTER:\n            '【文明实践中心】尊敬的用户，您的注册验证码是{$var}, {$var}分钟内有效, 打死都不要告诉别人！',\n        PASSWORD_RESET: '【文明实践中心】尊敬的{$var}，您好，您的密码是：{$var}，{$var}分钟内有效'\n    };\n\n    static async sendMessage(phonenumber: string, template: SMSTemplates, parameters: string[]) {\n        let msg = SMS.templates[template];\n        parameters.forEach((item, index) => (msg = msg.replace(`{s${index + 1}}`, item)));\n\n        Logger.debug('Send SMS', phonenumber, msg);\n\n        try {\n            return await SuperAgent.post(process.env['SMS_URL'])\n                .set('Content-Type', 'application/json; charset=UTF-8')\n                .send({\n                    account: process.env['SMS_ACCOUNT'],\n                    password: process.env['SMS_SECRET'],\n                    msg,\n                    phone: phonenumber\n                });\n        } catch (err) {\n            Logger.error(err);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules/SSRModule.html":{"url":"modules/SSRModule.html","title":"module - SSRModule","body":"\n                   \n\n\n\n\n    模块列表\n    SSRModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            server/src/ssr/ssr.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            IndexController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IndexController } from './controllers/index.controller';\n\n@Module({\n\tcontrollers: [ IndexController ]\n})\nexport class SSRModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/SearchController.html":{"url":"classes/SearchController.html","title":"class - SearchController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  SearchController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/search.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(searchService: SearchService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/search.controller.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        searchService\n                                                  \n                                                        \n                                                                        SearchService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/search.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport { UseGuards, Post, Body } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Api } from '../../common/aspects/decorator';\nimport { SearchService } from '../../common/services/search.service';\n\n@Api('search')\n@ApiUseTags('search')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\nexport class SearchController {\n    constructor(private readonly searchService: SearchService) {}\n\n    @Post()\n    async search(@Body() payload) {\n        return await this.searchService.search(payload);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/SearchService.html":{"url":"injectables/SearchService.html","title":"injectable - SearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  SearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/search.service.ts\n        \n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/search.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { es, esb } from '../lib/es';\nimport { Content } from '../entities/content.entity';\n\n@Injectable()\nexport class SearchService {\n    async search(payload: any) {\n        const qb = new esb.RequestBodySearch();\n\n        if (!!payload.keyword) {\n            qb.query(new esb.MatchQuery(payload.field, payload.keyword));\n        }\n\n        if (!payload.page) {\n            payload.page = 1;\n        }\n\n        if (!payload.pageSize) {\n            payload.pageSize = 10;\n        }\n        qb.size(payload.pageSize).from((payload.page - 1) * payload.pageSize);\n\n        return await es.search({\n            index: payload.index || Content.esIndex.index,\n            type: payload.type || Content.esIndex.body.type,\n            body: qb.toJSON()\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/Seed.html":{"url":"injectables/Seed.html","title":"injectable - Seed","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  Seed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/seed/index.ts\n        \n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                importAuthorities\n                            \n                            \n                                    Async\n                                importCategorys\n                            \n                            \n                                    Async\n                                importOrganizations\n                            \n                            \n                                    Async\n                                importRoles\n                            \n                            \n                                    Async\n                                importServiceCategorys\n                            \n                            \n                                    Async\n                                initElasticSearchIndices\n                            \n                            \n                                    Async\n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n                        \n                            \n                                被定义在 server/src/seed/index.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                        Connection\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            importAuthorities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    importAuthorities()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/seed/index.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            importCategorys\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    importCategorys()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/seed/index.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            importOrganizations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    importOrganizations()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/seed/index.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            importRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    importRoles()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/seed/index.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            importServiceCategorys\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    importServiceCategorys()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/seed/index.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            initElasticSearchIndices\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initElasticSearchIndices()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/seed/index.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/seed/index.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { resolve } from 'path';\nimport { Injectable } from '@nestjs/common';\nimport { User } from '../common/entities/user.entity';\nimport { Category } from '../common/entities/category.entity';\nimport { Setting } from '../common/entities/setting.entity';\nimport { ExcelHelper } from '../common/lib/excel';\nimport { InjectConnection } from '@nestjs/typeorm';\nimport { Connection } from 'typeorm';\nimport { Logger } from '../common/lib/logger';\nimport { es } from '../common/lib/es';\nimport { Organization } from '../common/entities/organization.entity';\nimport { Role } from '../common/entities/role.entity';\nimport { Authority } from '../common/entities/authority.entity';\nimport { Content } from '../common/entities/content.entity';\nimport { StorageType } from '../common/aspects/enum';\nimport { ServiceCategory } from '../common/entities/service-category.entity';\n\n@Injectable()\nexport class Seed {\n    constructor(@InjectConnection() private readonly connection: Connection) {}\n\n    async start() {\n        Logger.log('seed start');\n\n        // await this.initElasticSearchIndices();\n\n        await this.connection.getRepository(Setting).save({\n            token: 'default',\n            ex_info: await ExcelHelper.loadFromFile(\n                resolve('./seeds/settings.xlsx'),\n                Setting.sheetsMap\n            )\n        });\n\n        await this.importCategorys();\n        await this.importServiceCategorys();\n        await this.importOrganizations();\n        await this.importAuthorities();\n        await this.importRoles();\n\n        const roleAdmin = await this.connection\n            .getRepository(Role)\n            .findOne({ token: 'superAdmin' });\n\n        const superAdmin = User.create({\n            account: 'SysAdmin',\n            nickname: '超级管理员',\n            avatar: {\n                storageType: StorageType.LOCAL,\n                path: '/images/superadmin.png'\n            }\n        });\n        superAdmin.role = roleAdmin;\n        await this.connection.getRepository(User).save(superAdmin);\n    }\n\n    async initElasticSearchIndices() {\n        if (await es.indices.exists({ index: 'uploads' })) {\n            await es.indices.delete({ index: 'uploads' });\n        }\n\n        await es.indices.create({\n            index: 'uploads',\n            body: {\n                type: 'uploads',\n                mappings: {\n                    file: {\n                        properties: {\n                            baseName: {\n                                type: 'text',\n                                analyzer: 'ik_max_word',\n                                search_analyzer: 'ik_max_word'\n                            },\n                            dirName: {\n                                type: 'text',\n                                analyzer: 'ik_max_word',\n                                search_analyzer: 'ik_max_word'\n                            },\n                            extName: {\n                                type: 'text',\n                                analyzer: 'ik_max_word',\n                                search_analyzer: 'ik_max_word'\n                            },\n                            path: {\n                                type: 'text',\n                                analyzer: 'ik_max_word',\n                                search_analyzer: 'ik_max_word'\n                            },\n                            type: {\n                                type: 'string'\n                            },\n                            // https://nodejs.org/api/fs.html#fs_stats_dev\n                            stat: {\n                                type: 'object'\n                            }\n                        }\n                    }\n                }\n            }\n        });\n\n        if (await es.indices.exists({ index: Content.esIndex.index })) {\n            await es.indices.delete({ index: Content.esIndex.index });\n        }\n\n        await es.indices.create(Content.esIndex);\n    }\n\n    async importCategorys() {\n        const categorysResult = await ExcelHelper.loadFromFile(\n            resolve('./seeds/categorys.xlsx'),\n            Category.sheetsMap\n        );\n        const categorys = categorysResult['categorys'];\n        const categoryArr = [];\n\n        categorys.forEach((item) => {\n            if (!!item.parent) {\n                item.parent = categoryArr.find((cate) => cate.id === item.parent);\n            }\n            categoryArr.push(Category.create(item));\n        });\n        await this.connection.getTreeRepository(Category).save(categoryArr);\n    }\n\n    async importServiceCategorys() {\n        const categorysResult = await ExcelHelper.loadFromFile(\n            resolve('./seeds/service-categorys.xlsx'),\n            ServiceCategory.sheetsMap\n        );\n        const categorys = categorysResult['categorys'];\n        const categoryArr = [];\n\n        categorys.forEach((item) => {\n            if (!!item.parent) {\n                item.parent = categoryArr.find((cate) => cate.id === item.parent);\n            }\n            categoryArr.push(Category.create(item));\n        });\n        await this.connection.getTreeRepository(ServiceCategory).save(categoryArr);\n    }\n\n    async importOrganizations() {\n        const organizationsResult = await ExcelHelper.loadFromFile(\n            resolve('./seeds/organizations.xlsx'),\n            Organization.sheetsMap\n        );\n        const organizations = organizationsResult['organizations'];\n        const organizationArr = [];\n\n        organizations.forEach((item) => {\n            if (!!item.parent) {\n                item.parent = organizationArr.find((org) => org.id === item.parent);\n            }\n            organizationArr.push(Organization.create(item));\n        });\n        await this.connection.getTreeRepository(Organization).save(organizationArr);\n    }\n\n    async importAuthorities() {\n        const result = await ExcelHelper.loadFromFile(\n            resolve('./seeds/authorities.xlsx'),\n            Authority.sheetsMap\n        );\n        const authorities = result['authorities'];\n        const arr = [];\n\n        for (let item of authorities) {\n            if (!!item.parent) {\n                item.parent = arr.find((auth) => auth.id === item.parent);\n            }\n            arr.push(Authority.create(item));\n        }\n\n        await this.connection.getRepository(Authority).save(arr);\n    }\n\n    async importRoles() {\n        const rolesResult = await ExcelHelper.loadFromFile(\n            resolve('./seeds/roles.xlsx'),\n            Role.sheetsMap\n        );\n        const roles = rolesResult['roles'];\n        const rolesArr = [];\n\n        for (let item of roles) {\n            rolesArr.push(Role.create(item));\n        }\n\n        await this.connection.getRepository(Role).save(rolesArr);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Service.html":{"url":"classes/Service.html","title":"class - Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/service.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                author\n                            \n                            \n                                category\n                            \n                            \n                                ex_info\n                            \n                            \n                                publish_at\n                            \n                            \n                                    Static\n                                    Readonly\n                                sheetsMap\n                            \n                            \n                                sort\n                            \n                            \n                                source\n                            \n                            \n                                summary\n                            \n                            \n                                text\n                            \n                            \n                                thumbnail\n                            \n                            \n                                title\n                            \n                            \n                                video\n                            \n                            \n                                views\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                beforeInsert\n                            \n                            \n                                    Async\n                                beforeUpdate\n                            \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thumbnailPath\n                                \n                                \n                                    videoPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '地址', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '作者', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         ServiceCategory\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service.entity.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service.entity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publish_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'timestamp', default: undefined, comment: '发布时间'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service.entity.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            sheetsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n        服务: {\n            handleType,\n            cellsMap\n        }\n    }\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service.entity.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '排序', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '来源', default: '本站'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            summary\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '摘要', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '正文', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service.entity.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbnail\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '图片'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '标题', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            video\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '视频'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'bigint', comment: '浏览量', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service.entity.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            beforeInsert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beforeInsert()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @BeforeInsert()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/entities/service.entity.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            beforeUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beforeUpdate()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @BeforeUpdate()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/entities/service.entity.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/service.entity.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         Service | []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(info: any)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    info\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        thumbnailPath\n                    \n                \n\n                \n                    \n                        getthumbnailPath()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/service.entity.ts:80\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        videoPath\n                    \n                \n\n                \n                    \n                        getvideoPath()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/service.entity.ts:85\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport * as moment from 'moment';\nimport { Entity, Column, ManyToOne, BeforeInsert, BeforeUpdate } from 'typeorm';\nimport { plainToClass, Expose } from 'class-transformer';\nimport { Base } from './base';\nimport { ExcelHandleType } from '../lib/excel';\nimport { textInterception, extractionTextInHtml } from '../lib/helper';\nimport { ServiceCategory } from './service-category.entity';\n\nconst handleType = ExcelHandleType.ARRAY;\nconst cellsMap = {\n    标题: 'title',\n    作者: 'author',\n    来源: 'source',\n    地址: 'address',\n    排序: 'sort',\n    发布时间: 'publish_at',\n    正文: 'text',\n    图片: 'thumbnail',\n    视频: 'video'\n};\n\n@Entity()\nexport class Service extends Base {\n    @Column({ comment: '标题', default: '' })\n    title: string;\n\n    @Column({ comment: '作者', default: '' })\n    author: string;\n\n    @Column({ comment: '来源', default: '本站' })\n    source: string;\n\n    @Column({ comment: '地址', default: '' })\n    address: string;\n\n    @Column({ comment: '排序', default: 0 })\n    sort: number;\n\n    @Column({ type: 'simple-json', default: null, comment: '图片' })\n    thumbnail: any;\n\n    @Column({ type: 'simple-json', default: null, comment: '视频' })\n    video: any;\n\n    @Column({ comment: '摘要', default: '' })\n    summary: string;\n\n    @Column({ comment: '正文', default: '' })\n    text: string;\n\n    @Column({ type: 'bigint', comment: '浏览量', default: 0 })\n    views: number;\n\n    @Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n    ex_info: any;\n\n    @Column({\n        type: 'timestamp',\n        default: null,\n        comment: '发布时间'\n    })\n    publish_at: string;\n\n    @ManyToOne((type) => ServiceCategory, (category) => category.services)\n    category: ServiceCategory;\n\n    static readonly sheetsMap: object = {\n        服务: {\n            handleType,\n            cellsMap\n        }\n    };\n\n    static create(target: object): Service | Service[] {\n        return plainToClass(Service, target);\n    }\n\n    @Expose()\n    get thumbnailPath(): string {\n        return Base.getFullPath(this.thumbnail);\n    }\n\n    @Expose()\n    get videoPath(): string {\n        return Base.getFullPath(this.video);\n    }\n\n    @BeforeInsert()\n    async beforeInsert() {\n        if (_.isEmpty(this.publish_at)) {\n            this.publish_at = moment().format('YYYY-MM-DD HH:mm:ss');\n        }\n        const text = extractionTextInHtml(this.text);\n        this.summary = textInterception(text, 120);\n    }\n\n    @BeforeUpdate()\n    async beforeUpdate() {\n        const text = extractionTextInHtml(this.text);\n        this.summary = textInterception(text, 120);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/ServiceCategory.html":{"url":"classes/ServiceCategory.html","title":"class - ServiceCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  ServiceCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/service-category.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                ex_info\n                            \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                            \n                                services\n                            \n                            \n                                    Static\n                                    Readonly\n                                sheetsMap\n                            \n                            \n                                sort\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    title\n                                \n                                \n                                    key\n                                \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ServiceCategory[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @TreeChildren()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service-category.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service-category.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '名称'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service-category.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         ServiceCategory\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @TreeParent()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service-category.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            services\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Service[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service-category.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            sheetsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n        分类: {\n            map: 'categorys',\n            handleType: ExcelHandleType.ARRAY,\n            cellsMap: { ID: 'id', 名称: 'name', 排序: 'sort', PID: 'parent' }\n        }\n    }\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service-category.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '排序', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/service-category.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/service-category.entity.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(info: any)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    info\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/service-category.entity.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n\n                \n                    \n                        getkey()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/service-category.entity.ts:32\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/service-category.entity.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Base } from './base';\nimport { Entity, Column, Tree, TreeChildren, TreeParent, OneToMany } from 'typeorm';\nimport { plainToClass, Expose } from 'class-transformer';\nimport { ExcelHandleType } from '../lib/excel';\nimport { Service } from './service.entity';\n\n@Entity()\n@Tree('materialized-path')\nexport class ServiceCategory extends Base {\n    @Column({ comment: '名称' })\n    name: string;\n\n    @Column({ comment: '排序', default: 0 })\n    sort: number;\n\n    @Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n    ex_info: any;\n\n    @OneToMany((type) => Service, (service) => service.category)\n    services: Service[];\n\n    @TreeChildren() children: ServiceCategory[];\n\n    @TreeParent() parent: ServiceCategory;\n\n    @Expose()\n    get title(): string {\n        return this.name;\n    }\n\n    @Expose()\n    get key(): string {\n        return this.id;\n    }\n\n    @Expose()\n    get value(): string {\n        return this.id;\n    }\n\n    static readonly sheetsMap: object = {\n        分类: {\n            map: 'categorys',\n            handleType: ExcelHandleType.ARRAY,\n            cellsMap: { ID: 'id', 名称: 'name', 排序: 'sort', PID: 'parent' }\n        }\n    };\n\n    static create(target: object) {\n        return plainToClass(ServiceCategory, target);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/ServiceCategoryController.html":{"url":"classes/ServiceCategoryController.html","title":"class - ServiceCategoryController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  ServiceCategoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/service-category.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(categoryService: ServiceCategoryService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/service-category.controller.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        ServiceCategoryService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/service-category.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/service-category.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('list')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/service-category.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/service-category.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/service-category.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport {\n    UseGuards,\n    Get,\n    Query,\n    Delete,\n    Param,\n    BadRequestException,\n    Post,\n    Put,\n    Body,\n    UseInterceptors\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ClassSerializerInterceptor } from '@nestjs/common';\nimport { Api } from '../../common/aspects/decorator';\nimport { ServiceCategoryService } from '../../common/services/service-category.service';\n\n@Api('service/category')\n@ApiUseTags('service/category')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\n@UseInterceptors(ClassSerializerInterceptor)\nexport class ServiceCategoryController {\n    constructor(private readonly categoryService: ServiceCategoryService) {}\n\n    @Get(':id')\n    async findOne(@Param('id') id) {\n        if (!id) throw new BadRequestException('参数 id 错误');\n\n        return await this.categoryService.findOneById(id);\n    }\n\n    @Get('list')\n    async list(@Query() payload) {\n        return await this.categoryService.query(payload);\n    }\n\n    @Post()\n    async create(@Body() dto: any) {\n        return await this.categoryService.save(dto);\n    }\n\n    @Put()\n    async update(@Body() dto: any) {\n        return await this.categoryService.save(dto);\n    }\n\n    @Delete()\n    async remove(@Query() payload) {\n        return await this.categoryService.remove(payload.selectedRows.split(','));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/ServiceCategoryService.html":{"url":"injectables/ServiceCategoryService.html","title":"injectable - ServiceCategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  ServiceCategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/service-category.service.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseService\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneByName\n                            \n                            \n                                    Async\n                                findParentsTree\n                            \n                            \n                                    Async\n                                query\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(categoryRepository: TreeRepository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/service-category.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        categoryRepository\n                                                  \n                                                        \n                                                                    TreeRepository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByName(name: string)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/service-category.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findParentsTree\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findParentsTree(category: ServiceCategory)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/service-category.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                ServiceCategory\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/service-category.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/service-category.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TreeRepository } from 'typeorm';\nimport { BaseService } from './base.service';\nimport { ServiceCategory } from '../entities/service-category.entity';\n\n@Injectable()\nexport class ServiceCategoryService extends BaseService {\n    constructor(\n        @InjectRepository(ServiceCategory)\n        private readonly categoryRepository: TreeRepository\n    ) {\n        super(categoryRepository);\n    }\n\n    async query(payload: any) {\n        return await this.categoryRepository.findTrees();\n    }\n\n    async findOneByName(name: string) {\n        return await this.categoryRepository.findOne({ name });\n    }\n\n    async findParentsTree(category: ServiceCategory) {\n        return await this.categoryRepository.findAncestorsTree(category);\n    }\n\n    async save(payload: any) {\n        const target = ServiceCategory.create(payload) as ServiceCategory;\n\n        if (!!payload.parentId) {\n            target.parent = await this.categoryRepository.findOne(payload.parentId);\n        }\n\n        return await this.categoryRepository.save(target);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/ServiceController.html":{"url":"classes/ServiceController.html","title":"class - ServiceController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  ServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/service.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                export\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(serviceService: ServiceService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/service.controller.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        serviceService\n                                                  \n                                                        \n                                                                        ServiceService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/service.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            export\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    export(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('export')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/service.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/service.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('list')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/service.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/service.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/service.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport {\n    UseGuards,\n    Get,\n    Query,\n    Delete,\n    Param,\n    BadRequestException,\n    Post,\n    Put,\n    Body,\n    UseInterceptors\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Api } from '../../common/aspects/decorator';\nimport { ClassSerializerInterceptor } from '@nestjs/common';\nimport { ServiceService } from '../../common/services/service.service';\n\n@Api('service')\n@ApiUseTags('service')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\n@UseInterceptors(ClassSerializerInterceptor)\nexport class ServiceController {\n    constructor(private readonly serviceService: ServiceService) {}\n\n    @Get(':id')\n    async findOne(@Param('id') id) {\n        if (!id) throw new BadRequestException('参数 id 错误');\n\n        return await this.serviceService.findOneById(id);\n    }\n\n    @Get('list')\n    async list(@Query() payload) {\n        return await this.serviceService.query(payload);\n    }\n\n    @Get('export')\n    async export(@Query() payload) {\n        return await this.serviceService.query(payload);\n    }\n\n    @Post()\n    async create(@Body() dto: any) {\n        return await this.serviceService.save(dto);\n    }\n\n    @Put()\n    async update(@Body() dto: any) {\n        return await this.serviceService.save(dto);\n    }\n\n    @Delete()\n    async remove(@Query() payload) {\n        return await this.serviceService.remove(payload.selectedRows.split(','));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/ServiceService.html":{"url":"injectables/ServiceService.html","title":"injectable - ServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  ServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/service.service.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseService\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                query\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(serviceRepository: Repository, categoryRepository: Repository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/service.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        serviceRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        categoryRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/service.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(payload: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/service.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/service.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { Injectable, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { TransformClassToPlain } from 'class-transformer';\nimport { BaseService } from './base.service';\nimport { Service } from '../entities/service.entity';\nimport { ServiceCategory } from '../entities/service-category.entity';\n\n@Injectable()\nexport class ServiceService extends BaseService {\n    constructor(\n        @InjectRepository(Service) private readonly serviceRepository: Repository,\n        @InjectRepository(ServiceCategory)\n        private readonly categoryRepository: Repository\n    ) {\n        super(serviceRepository);\n    }\n\n    @TransformClassToPlain()\n    async query(payload: any) {\n        const qb = this.serviceRepository.createQueryBuilder('t');\n\n        qb.leftJoinAndSelect('t.category', 'category');\n\n        if (!payload.page) {\n            payload.page = 0;\n        }\n\n        if (!payload.pageSize) {\n            payload.pageSize = 10;\n        }\n\n        if (!!payload.category) {\n            qb.andWhere('category.id =:category', { category: payload.category });\n        }\n\n        if (!!payload.keyword) {\n            qb.andWhere(`t.title LIKE '%${payload.keyword}%'`);\n        }\n\n        if (!!payload.publish_at) {\n            payload.publish_at = payload.publish_at.split(',');\n            qb.andWhere(\n                `t.publish_at BETWEEN '${payload.publish_at.shift()}' AND '${payload.publish_at.pop()}'`\n            );\n        }\n\n        if (!!payload.sort && !!payload.order) {\n            qb.addOrderBy(`t.${payload.sort}`, payload.order);\n        } else {\n            // 默认排序规则\n            qb.addOrderBy('t.sort', 'DESC');\n            qb.addOrderBy('t.publish_at', 'DESC');\n        }\n\n        if (!!payload.isExport) {\n            if (!payload.category) throw new BadRequestException('分类参数错误');\n\n            return await qb.getMany();\n        } else {\n            qb.skip(payload.page * payload.pageSize);\n            qb.take(payload.pageSize);\n        }\n\n        return await qb.getManyAndCount();\n    }\n\n    @TransformClassToPlain()\n    async findOneById(id) {\n        return await this.serviceRepository.findOne({\n            where: { id },\n            relations: ['category']\n        });\n    }\n\n    async save(payload: any) {\n        const target = Service.create(payload) as Service;\n\n        return await this.serviceRepository.save(target);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Setting.html":{"url":"classes/Setting.html","title":"class - Setting","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Setting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/setting.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                ex_info\n                            \n                            \n                                    Static\n                                    Readonly\n                                sheetsMap\n                            \n                            \n                                token\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    logoLightImg\n                                \n                                \n                                    logoDarkImg\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/setting.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            sheetsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n\t\t系统设置: {\n\t\t\tmap: 'setting',\n\t\t\thandleType: ExcelHandleType.KV,\n\t\t\trowsMap: {\n\t\t\t\t标题: 'title',\n\t\t\t\t描述: 'desc',\n\t\t\t\t地址: 'address',\n\t\t\t\t邮编: 'postcode',\n\t\t\t\t邮箱: 'email',\n\t\t\t\t电话: 'tel',\n\t\t\t\t版权: 'copyright',\n\t\t\t\t备案号: 'icp',\n\t\t\t\t公网安备: 'pns'\n\t\t\t}\n\t\t},\n\t\t全站SEO: {\n\t\t\tmap: 'seo',\n\t\t\thandleType: ExcelHandleType.KV,\n\t\t\trowsMap: { 标题: 'title', 关键词: 'keywords', 描述: 'description' }\n\t\t},\n\t\t友情链接: {\n\t\t\tmap: 'links',\n\t\t\thandleType: ExcelHandleType.ARRAY,\n\t\t\tcellsMap: { ID: 'id', 标题: 'title', 描述: 'desc', 地址: 'url', 排序: 'sort' }\n\t\t}\n\t}\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/setting.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '标志', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/setting.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/setting.entity.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(info: any)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    info\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        logoLightImg\n                    \n                \n\n                \n                    \n                        getlogoLightImg()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/setting.entity.ts:47\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        logoDarkImg\n                    \n                \n\n                \n                    \n                        getlogoDarkImg()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/setting.entity.ts:52\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Base } from './base';\nimport { Entity, Column } from 'typeorm';\nimport { plainToClass, Expose } from 'class-transformer';\nimport { ExcelHandleType } from '../lib/excel';\n\n@Entity()\nexport class Setting extends Base {\n\t@Column({ comment: '标志', unique: true })\n\ttoken: string;\n\n\t@Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n\tex_info: any;\n\n\tstatic readonly sheetsMap: object = {\n\t\t系统设置: {\n\t\t\tmap: 'setting',\n\t\t\thandleType: ExcelHandleType.KV,\n\t\t\trowsMap: {\n\t\t\t\t标题: 'title',\n\t\t\t\t描述: 'desc',\n\t\t\t\t地址: 'address',\n\t\t\t\t邮编: 'postcode',\n\t\t\t\t邮箱: 'email',\n\t\t\t\t电话: 'tel',\n\t\t\t\t版权: 'copyright',\n\t\t\t\t备案号: 'icp',\n\t\t\t\t公网安备: 'pns'\n\t\t\t}\n\t\t},\n\t\t全站SEO: {\n\t\t\tmap: 'seo',\n\t\t\thandleType: ExcelHandleType.KV,\n\t\t\trowsMap: { 标题: 'title', 关键词: 'keywords', 描述: 'description' }\n\t\t},\n\t\t友情链接: {\n\t\t\tmap: 'links',\n\t\t\thandleType: ExcelHandleType.ARRAY,\n\t\t\tcellsMap: { ID: 'id', 标题: 'title', 描述: 'desc', 地址: 'url', 排序: 'sort' }\n\t\t}\n\t};\n\n\tstatic create(target: object) {\n\t\treturn plainToClass(Setting, target);\n\t}\n\n\t@Expose()\n\tget logoLightImg() {\n\t\treturn Base.getFullPath(this.ex_info.setting ? this.ex_info.setting.logoLight : null)\n\t}\n\n\t@Expose()\n\tget logoDarkImg() {\n\t\treturn Base.getFullPath(this.ex_info.setting ? this.ex_info.setting.logoDark : null)\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/SettingController.html":{"url":"classes/SettingController.html","title":"class - SettingController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  SettingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/setting.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(settingService: SettingService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/setting.controller.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        settingService\n                                                  \n                                                        \n                                                                        SettingService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/setting.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/setting.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport { UseGuards, Get, Put, Body, UseInterceptors } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Api } from '../../common/aspects/decorator';\nimport { ClassSerializerInterceptor } from '@nestjs/common';\nimport { SettingService } from '../../common/services/setting.service';\n\n@Api('setting')\n@ApiUseTags('setting')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\n@UseInterceptors(ClassSerializerInterceptor)\nexport class SettingController {\n    constructor(private readonly settingService: SettingService) {}\n\n    @Get('')\n    async findOne() {\n        return await this.settingService.getSettingByToken();\n    }\n\n    @Put()\n    async update(@Body() dto: any) {\n        return await this.settingService.save(dto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/SettingService.html":{"url":"injectables/SettingService.html","title":"injectable - SettingService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  SettingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/setting.service.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseService\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSettingByToken\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(settingRepository: Repository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/setting.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        settingRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSettingByToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSettingByToken(token: string)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/setting.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                    缺省值\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n                                    \n                                        'default'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/setting.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Setting } from '../entities/setting.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { BaseService } from './base.service';\n\n@Injectable()\nexport class SettingService extends BaseService {\n    constructor(\n        @InjectRepository(Setting) private readonly settingRepository: Repository\n    ) {\n        super(settingRepository);\n    }\n\n    async getSettingByToken(token: string = 'default') {\n        return await this.settingRepository.findOne({ token });\n    }\n\n    async save(payload: any) {\n        const target = Setting.create(payload) as Setting;\n        return await this.settingRepository.save(target);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/StatusTask.html":{"url":"classes/StatusTask.html","title":"class - StatusTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  StatusTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/tasks/status.task.ts\n        \n\n\n            \n                继承\n            \n            \n                        NestSchedule\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                pushStatus\n                            \n                            \n                                    Async\n                                watchFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            缺省值 : IOServer.status\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/tasks/status.task.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            pushStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pushStatus()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Interval(2000)\n                \n            \n\n            \n                \n                    被定义在 server/src/common/tasks/status.task.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            watchFiles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    watchFiles()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/tasks/status.task.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { stat } from 'fs';\nimport { resolve, basename, dirname, extname } from 'path';\nimport * as pidusage from 'pidusage';\nimport * as chokidar from 'chokidar';\nimport * as moment from 'moment';\nimport { Cron, Interval, Timeout, NestSchedule } from 'nest-schedule';\nimport { Logger } from '../lib/logger';\nimport { redis } from '../lib/redis';\nimport { es } from '../lib/es';\nimport { IOServer } from '../lib/io';\n\nexport class StatusTask extends NestSchedule {\n    server: any = IOServer.status;\n\n    // # ┌────────────── second (optional)\n    // # │ ┌──────────── minute\n    // # │ │ ┌────────── hour\n    // # │ │ │ ┌──────── day of month\n    // # │ │ │ │ ┌────── month\n    // # │ │ │ │ │ ┌──── day of week\n    // # │ │ │ │ │ │\n    // # │ │ │ │ │ │\n    // # * * * * * *\n\n    // @Cron('2 * * * * *')\n    // async cronJob() {\n    //     Logger.log('定时任务');\n\n    //     const status = await pidusage(process.pid);\n    //     Logger.log(status);\n    // }\n\n    // @Timeout(5000)\n    // onceJob() {\n    //     Logger.log('延时任务');\n    // }\n\n    async watchFiles() {\n        const uploadDirPath = resolve('./static');\n        Logger.log(`watching ${uploadDirPath}`);\n\n        chokidar.watch(uploadDirPath, { ignored: /(^|[\\/\\\\])\\../ }).on('all', (event, path) => {\n            stat(path, (err, stats) => {\n                Logger.log(event, path, stats);\n\n                const info = { index: 'uploads', type: 'uploads' };\n\n                switch (event) {\n                    case 'add':\n                        es.index({\n                            ...info,\n                            id: path,\n                            body: {\n                                baseName: basename(path),\n                                dirName: dirname(path),\n                                extName: extname(path),\n                                path,\n                                type: 'file',\n                                stat: stats\n                            }\n                        });\n                        break;\n                    case 'addDir':\n                        es.index({\n                            ...info,\n                            id: path,\n                            body: {\n                                baseName: basename(path),\n                                dirName: dirname(path),\n                                extName: extname(path),\n                                path,\n                                type: 'dir',\n                                stat: stats\n                            }\n                        });\n                        break;\n                    case 'change':\n                        es.update({\n                            ...info,\n                            id: path,\n                            body: {\n                                baseName: basename(path),\n                                dirName: dirname(path),\n                                extName: extname(path),\n                                path,\n                                type: 'dir',\n                                stat: stats\n                            }\n                        });\n                        break;\n                    case 'unlink':\n                        es.delete({\n                            ...info,\n                            id: path\n                        });\n                        break;\n                    case 'unlinkDir':\n                        es.delete({\n                            ...info,\n                            id: path\n                        });\n                        break;\n                }\n            });\n        });\n    }\n\n    @Interval(2000)\n    async pushStatus() {\n        const status = await pidusage(process.pid);\n\n        const statusJson = await redis.get('system_status');\n\n        let statusArr = [];\n\n        if (!!statusJson) {\n            statusArr = JSON.parse(statusJson);\n        }\n\n        status.time = moment().valueOf();\n        statusArr.unshift(status);\n\n        if (statusArr.length > 30) {\n            statusArr = statusArr.splice(0, 30);\n        }\n\n        await redis.set('system_status', JSON.stringify(statusArr));\n\n        this.server.emit('status', statusArr);\n\n        return false;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/StorageController.html":{"url":"classes/StorageController.html","title":"class - StorageController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  StorageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/storage.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                upload\n                            \n                            \n                                    Async\n                                uploadToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(importService: ImportService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/storage.controller.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        importService\n                                                  \n                                                        \n                                                                        ImportService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(req, res)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()@ApiConsumes('multipart/form-data')@ApiImplicitFile({name: 'file', required: true})\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/storage.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadToken()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('qiniu/uploadToken')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/storage.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :     {}\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as UUID from 'uuid';\nimport * as moment from 'moment';\nimport { ApiUseTags, ApiConsumes, ApiImplicitFile, ApiBearerAuth } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Post, Req, Res, BadRequestException, InternalServerErrorException, UseGuards, Get } from '@nestjs/common';\nimport { config } from '../../config';\nimport { Api } from '../../common/aspects/decorator';\nimport { resolve } from 'path';\nimport { UploadActionType, StorageType } from '../../common/aspects/enum';\nimport { ImportService } from '../../common/services/import.service';\nimport { Logger } from '../../common/lib/logger';\nimport { Qiniu } from '../../common/lib/qiniu';\n\n@Api('storage')\n@ApiUseTags('storage')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\nexport class StorageController {\n\tconstructor(private readonly importService: ImportService) { }\n\n\t@Post()\n\t@ApiConsumes('multipart/form-data')\n\t@ApiImplicitFile({ name: 'file', required: true })\n\tasync upload(@Req() req, @Res() res) {\n\t\tconst files = req.raw.files;\n\n\t\tif (Object.keys(files).length == 0) {\n\t\t\tthrow new BadRequestException('没有上传任何文件');\n\t\t}\n\n\t\tconst file = files.file;\n\t\tconst action = req.raw.body.action || UploadActionType.UPLOAD;\n\n\t\tswitch (action) {\n\t\t\tcase UploadActionType.IMPORT:\n\t\t\t\tconst target = req.raw.body.target;\n\t\t\t\tif (!target) throw new BadRequestException('参数 target 缺失');\n\n\t\t\t\tLogger.log(target, 'StorageController::import');\n\n\t\t\t\ttry {\n\t\t\t\t\tres.send(await this.importService.handleFile(file, target));\n\t\t\t\t} catch (err) {\n\t\t\t\t\tLogger.error(err);\n\n\t\t\t\t\tthrow new BadRequestException('导入失败');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconst path = `${moment().format('YYYY-MM-DD')}/${UUID.v4()}-${file.name}`;\n\t\t\t\tconst filePath = `${resolve(config.static.root)}${config.static.uploadPath}/${path}`;\n\n\t\t\t\tLogger.log(filePath, 'StorageController::upload');\n\n\t\t\t\tfile.mv(filePath, (err) => {\n\t\t\t\t\tif (err) throw new InternalServerErrorException('文件移动失败', err);\n\n\t\t\t\t\tres.send({\n\t\t\t\t\t\tstorageType: StorageType.LOCAL,\n\t\t\t\t\t\tpath: `${config.static.uploadPath}/${path}`,\n\t\t\t\t\t\tfilePath,\n\t\t\t\t\t\tname: file.name,\n\t\t\t\t\t\tsize: file.size,\n\t\t\t\t\t\tmd5: file.md5,\n\t\t\t\t\t\tmimetype: file.mimetype\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t@Get('qiniu/uploadToken')\n\tasync uploadToken() {\n\t\treturn await Qiniu.createUploadToken();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/UpdateContentDto.html":{"url":"classes/UpdateContentDto.html","title":"class - UpdateContentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  UpdateContentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/dtos/content.dto.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                author\n                            \n                            \n                                    Readonly\n                                publish_at\n                            \n                            \n                                    Readonly\n                                sort\n                            \n                            \n                                    Readonly\n                                summary\n                            \n                            \n                                    Readonly\n                                text\n                            \n                            \n                                    Readonly\n                                thumbnail\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                views\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            publish_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@IsNotEmpty({message: '发布时间不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            summary\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            thumbnail\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@IsNotEmpty({message: '标题不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateContentDto {\n\t@ApiModelProperty()\n\t@IsNotEmpty({\n\t\tmessage: '标题不能为空'\n\t})\n\treadonly title: string;\n\n\t@ApiModelProperty() readonly author: string;\n\n\t@ApiModelProperty() readonly sort: number;\n\n\t@ApiModelProperty() readonly thumbnail: string;\n\n\t@ApiModelProperty() readonly summary: string;\n\n\t@ApiModelProperty() readonly text: string;\n\n\t@ApiModelProperty() readonly views: number;\n\n\t@ApiModelProperty()\n\t@IsNotEmpty({\n\t\tmessage: '发布时间不能为空'\n\t})\n\treadonly publish_at: string;\n}\n\nexport class CreateContentDto {\n\t@ApiModelProperty()\n\t@IsNotEmpty({\n\t\tmessage: '标题不能为空'\n\t})\n\treadonly title: string;\n\n\t@ApiModelProperty() readonly author: string;\n\n\t@ApiModelProperty() readonly sort: number;\n\n\t@ApiModelProperty() readonly thumbnail: string;\n\n\t@ApiModelProperty() readonly summary: string;\n\n\t@ApiModelProperty() readonly text: string;\n\n\t@ApiModelProperty() readonly views: number;\n\n\t@ApiModelProperty()\n\t@IsNotEmpty({\n\t\tmessage: '发布时间不能为空'\n\t})\n\treadonly publish_at: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/user.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                address\n                            \n                            \n                                avatar\n                            \n                            \n                                ex_info\n                            \n                            \n                                flows\n                            \n                            \n                                gender\n                            \n                            \n                                idCard\n                            \n                            \n                                nickname\n                            \n                            \n                                operatorFlows\n                            \n                            \n                                org\n                            \n                            \n                                password\n                            \n                            \n                                phone\n                            \n                            \n                                points\n                            \n                            \n                                realName\n                            \n                            \n                                role\n                            \n                            \n                                status\n                            \n                            \n                                vip\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                beforeInsert\n                            \n                            \n                                    Async\n                                beforeUpdate\n                            \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    avatarPath\n                                \n                                \n                                    isSuperAdmin\n                                \n                                \n                                    isVolunteer\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '帐号', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '联系地址', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '头像'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flows\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Flow[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Gender\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '性别', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idCard\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '身份证号', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nickname\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '昵称', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            operatorFlows\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Flow[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            org\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Organization\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude({toPlainOnly: true})@Column({comment: '密码'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '手机号', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            points\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '积分', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            realName\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '真实姓名', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Role\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '状态', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vip\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         VIP\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '等级', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            beforeInsert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beforeInsert()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @BeforeInsert()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/entities/user.entity.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            beforeUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beforeUpdate()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @BeforeUpdate()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/entities/user.entity.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: Object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/user.entity.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                Object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(info: any)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    info\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        avatarPath\n                    \n                \n\n                \n                    \n                        getavatarPath()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/user.entity.ts:73\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isSuperAdmin\n                    \n                \n\n                \n                    \n                        getisSuperAdmin()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/user.entity.ts:78\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isVolunteer\n                    \n                \n\n                \n                    \n                        getisVolunteer()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/user.entity.ts:83\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import * as bcrypt from 'bcryptjs';\nimport { Exclude, Expose, plainToClass } from 'class-transformer';\nimport { Base } from './base';\nimport { Entity, Column, BeforeInsert, ManyToOne, BeforeUpdate, OneToMany } from 'typeorm';\nimport { Gender, VIP } from '../aspects/enum';\nimport { Role } from './role.entity';\nimport { Organization } from './organization.entity';\nimport { getVIP } from '../lib/helper';\nimport { Flow } from './flow.entity';\n\n@Entity()\nexport class User extends Base {\n    @Column({\n        comment: '帐号',\n        unique: true\n    })\n    account: string;\n\n    @Exclude({ toPlainOnly: true })\n    @Column({ comment: '密码' })\n    password: string;\n\n    @Column({ comment: '昵称', default: '' })\n    nickname: string;\n\n    @Column({ type: 'simple-json', default: null, comment: '头像' })\n    avatar: any;\n\n    @Column({ comment: '性别', default: Gender.MALE })\n    gender: Gender;\n\n    @Column({ comment: '等级', default: VIP.V0 })\n    vip: VIP;\n\n    @Column({ comment: '积分', default: 0 })\n    points: number;\n\n    @Column({ comment: '真实姓名', default: '' })\n    realName: string;\n\n    @Column({ comment: '手机号', default: '' })\n    phone: string;\n\n    @Column({ comment: '身份证号', default: '' })\n    idCard: string;\n\n    @Column({ comment: '联系地址', default: '' })\n    address: string;\n\n    @Column({ comment: '状态', default: '' })\n    status: string;\n\n    @Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n    ex_info: any;\n\n    @ManyToOne((type) => Role, (role) => role.users)\n    role: Role;\n\n    @ManyToOne((type) => Organization, (org) => org.users)\n    org: Organization;\n\n    @OneToMany((type) => Flow, (flow) => flow.user)\n    flows: Flow[];\n\n    @OneToMany((type) => Flow, (flow) => flow.operator)\n    operatorFlows: Flow[];\n\n    static create(target: Object) {\n        return plainToClass(User, target);\n    }\n\n    @Expose()\n    get avatarPath(): string {\n        return Base.getFullPath(this.avatar);\n    }\n\n    @Expose()\n    get isSuperAdmin(): boolean {\n        return !!this.role && this.role.token === 'superAdmin';\n    }\n\n    @Expose()\n    get isVolunteer(): boolean {\n        return !!this.role && this.role.token === 'volunteer';\n    }\n\n    @BeforeInsert()\n    async beforeInsert() {\n        const salt = await bcrypt.genSalt(10);\n        this.password = await bcrypt.hash(this.password || '12345678', salt);\n    }\n\n    @BeforeUpdate()\n    async beforeUpdate() {\n        this.vip = getVIP(this.points);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/UserController.html":{"url":"classes/UserController.html","title":"class - UserController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/user.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                apply\n                            \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                current\n                            \n                            \n                                    Async\n                                fetch\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/user.controller.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            apply\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    apply(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post('apply')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/user.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(user, dto: PasswordDto)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put('password')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/user.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                PasswordDto\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/user.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            current\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    current(user)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('current')@UseInterceptors(ClassSerializerInterceptor)\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/user.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetch(params)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get(':id')@UseInterceptors(ClassSerializerInterceptor)\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/user.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('list')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/user.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/user.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/user.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Get,\n    Body,\n    Put,\n    Param,\n    UseInterceptors,\n    ClassSerializerInterceptor,\n    UseGuards,\n    UsePipes,\n    ValidationPipe,\n    Query,\n    Post,\n    Delete\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport { Api, CurrentUser } from '../../common/aspects/decorator';\nimport { UserService } from '../../common/services/user.service';\nimport { PasswordDto } from '../../common/dtos/password.dto';\n\n@Api('user')\n@ApiUseTags('user')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\nexport class UserController {\n    constructor(private readonly userService: UserService) {}\n\n    @Get(':id')\n    @UseInterceptors(ClassSerializerInterceptor)\n    async fetch(@Param() params) {\n        return await this.userService.findOneById(params.id);\n    }\n\n    @Get('list')\n    async list(@Query() payload) {\n        return await this.userService.query(payload);\n    }\n\n    @Get('current')\n    @UseInterceptors(ClassSerializerInterceptor)\n    async current(@CurrentUser() user) {\n        return await this.userService.findOneById(user.id);\n    }\n\n    @Post('apply')\n    async apply(@Body() dto: any) {\n        return await this.userService.applyVolunteer(dto);\n    }\n\n    @Put('password')\n    @UsePipes(new ValidationPipe())\n    async changePassword(@CurrentUser() user, @Body() dto: PasswordDto) {\n        return await this.userService.changePassword(user.id, dto);\n    }\n\n    @Post()\n    async create(@Body() dto: any) {\n        return await this.userService.save(dto);\n    }\n\n    @Put()\n    async update(@Body() dto: any) {\n        return await this.userService.save(dto);\n    }\n\n    @Delete()\n    async remove(@Query() payload) {\n        return await this.userService.remove(payload.selectedRows.split(','));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/user.service.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseService\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                applyVolunteer\n                            \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                query\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, authorityService: AuthorityService, flowService: FlowService, userRepository: Repository, roleRepository: Repository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/user.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorityService\n                                                  \n                                                        \n                                                                        AuthorityService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        flowService\n                                                  \n                                                        \n                                                                        FlowService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            applyVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyVolunteer(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/user.service.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(id, dto)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/user.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    dto\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(where)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/user.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    where\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/user.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(account, password)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/user.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    account\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(payload: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/user.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(payload: any, userRepos?: Repository, rowRepos?: Repository)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()@Transaction()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/user.service.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    userRepos\n                                    \n                                                Repository\n                                    \n\n                                    \n                                        是\n                                    \n\n\n                                \n                                \n                                    rowRepos\n                                    \n                                                Repository\n                                    \n\n                                    \n                                        是\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport * as bcrypt from 'bcryptjs';\nimport { JwtService } from '@nestjs/jwt';\nimport { Injectable, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, Transaction, TransactionRepository } from 'typeorm';\nimport { TransformClassToPlain } from 'class-transformer';\nimport { BaseService } from './base.service';\nimport { AuthorityService } from './authority.service';\nimport { User } from '../entities/user.entity';\nimport { PointsActionType, FlowTemplateEnum } from '../aspects/enum';\nimport { FlowService } from './flow.service';\nimport { wf } from '../lib/wf';\nimport { Role } from '../entities/role.entity';\nimport { Logger } from '../lib/logger';\n\n@Injectable()\nexport class UserService extends BaseService {\n    constructor(\n        private readonly jwtService: JwtService,\n        private readonly authorityService: AuthorityService,\n        private readonly flowService: FlowService,\n        @InjectRepository(User) private readonly userRepository: Repository,\n        @InjectRepository(Role) private readonly roleRepository: Repository\n    ) {\n        super(userRepository);\n    }\n\n    @TransformClassToPlain()\n    async query(payload: any) {\n        const qb = this.userRepository.createQueryBuilder('t');\n\n        qb.leftJoinAndSelect('t.role', 'role');\n        qb.leftJoinAndSelect('t.org', 'organization');\n        qb.leftJoinAndSelect('t.flows', 'flows');\n\n        if (!payload.page) {\n            payload.page = 0;\n        }\n\n        if (!payload.pageSize) {\n            payload.pageSize = 10;\n        }\n\n        if (!!payload.keyword) {\n            qb.andWhere(`t.nickname LIKE '%${payload.keyword}%'`);\n        }\n\n        if (!!payload.org) {\n            qb.andWhere('organization.id = :org', { org: payload.org });\n        }\n\n        if (!!payload.create_at) {\n            payload.create_at = payload.create_at.split(',');\n            qb.andWhere(\n                `t.create_at BETWEEN '${payload.create_at.shift()}' AND '${payload.create_at.pop()}'`\n            );\n        }\n\n        if (!!payload.sort && !!payload.order) {\n            qb.addOrderBy(`t.${payload.sort}`, payload.order);\n        } else {\n            qb.addOrderBy('t.create_at', 'DESC');\n        }\n\n        if (!!payload.isExport) {\n            if (!payload.category) throw new BadRequestException('分类参数错误');\n\n            const dataSource = await qb.getMany();\n\n            // 执行导出逻辑\n            // return await ExcelHelper.export(dataSource, Content.sheetsMap[payload.category], payload.fields.split(','));\n        } else {\n            qb.skip(payload.page * payload.pageSize);\n            qb.take(payload.pageSize);\n        }\n\n        return await qb.getManyAndCount();\n    }\n\n    @TransformClassToPlain()\n    async findOneById(id) {\n        const qb = this.userRepository.createQueryBuilder('t');\n\n        qb.andWhere('t.id = :id', { id });\n\n        qb.leftJoinAndSelect('t.role', 'role');\n        qb.leftJoinAndSelect('t.org', 'organization');\n        qb.leftJoinAndSelect('t.flows', 'flows');\n        qb.leftJoinAndSelect('role.authorities', 'authorities');\n\n        return await qb.getOne();\n    }\n\n    async findOne(where) {\n        const qb = this.userRepository.createQueryBuilder('t');\n\n        if (!!where.account) {\n            qb.andWhere('t.account = :account', { account: where.account });\n        }\n\n        qb.leftJoinAndSelect('t.role', 'role');\n        qb.leftJoinAndSelect('t.org', 'organization');\n\n        return await qb.getOne();\n    }\n\n    async login(account, password) {\n        let user = await this.findOne({ account });\n        Logger.log('Login --->', user);\n\n        if (!user) {\n            const role = await this.roleRepository.findOne({ where: { token: 'user' } });\n\n            user = new User();\n            user.account = account;\n            user.password = password;\n            user.role = role;\n\n            // 用户不存在则直接注册\n            user = await this.userRepository.save(user);\n        } else {\n            if (!(await bcrypt.compare(password, user.password)))\n                throw new BadRequestException('密码错误');\n        }\n\n        const token = await this.jwtService.sign(_.toPlainObject(user));\n        return { token };\n    }\n\n    async changePassword(id, dto) {\n        const user = await this.userRepository.findOne({ where: { id }, relations: ['role'] });\n\n        if (!(await bcrypt.compare(dto.oldPassword, user.password)))\n            throw new BadRequestException('旧密码错误');\n\n        const salt = await bcrypt.genSalt(10);\n        user.password = await bcrypt.hash(dto.password, salt);\n\n        return await this.userRepository.save(user);\n    }\n\n    @TransformClassToPlain()\n    @Transaction()\n    async save(\n        payload: any,\n        @TransactionRepository(User) userRepos?: Repository,\n        @TransactionRepository(Role) rowRepos?: Repository\n    ) {\n        const user = User.create(payload) as User;\n\n        if (!user.role) {\n            // 添加默认角色\n            const role = await rowRepos.findOne({ where: { token: 'user' } });\n            user.role = role;\n        }\n\n        const { actionType } = payload;\n\n        // 增加积分的逻辑\n        if (!!actionType) {\n            if (PointsActionType.ADD === actionType) {\n                user.points += payload.value || 0;\n            }\n\n            if (PointsActionType.SUB === actionType) {\n                user.points -= payload.value || 0;\n            }\n\n            //TODO: 记录积分明细\n        }\n\n        return await userRepos.save(user);\n    }\n\n    async applyVolunteer(payload: any) {\n        const user = await this.findOneById(payload.id);\n        user.realName = payload.realName;\n        user.phone = payload.phone;\n        user.idCard = payload.idCard;\n        user.address = payload.address;\n\n        await this.save(user);\n\n        const isExist = await this.flowService.findOneByUser(user, FlowTemplateEnum.APPLY_VR);\n\n        if (!!isExist && user.status !== '已驳回') {\n            throw new BadRequestException('请勿重复申请');\n        }\n\n        const flow = await this.flowService.create(user, FlowTemplateEnum.APPLY_VR);\n\n        return wf.dispatch(flow.id, '申请');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/WorkOrderFlow.html":{"url":"injectables/WorkOrderFlow.html","title":"injectable - WorkOrderFlow","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  WorkOrderFlow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/flows/work-order.flow.ts\n        \n\n\n\n\n            \n    索引\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Flow\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/flows/work-order.flow.ts:5\n                            \n                        \n\n            \n        \n\n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        Flow\n                    \n                \n\n                \n                    \n                        getFlow()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/flows/work-order.flow.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Logger } from '../lib/logger';\n\n@Injectable()\nexport class WorkOrderFlow {\n    constructor() {}\n\n    get Flow() {\n        return {\n            待制单: {\n                制单: async () => {\n                    Logger.log('已制单');\n                    return '待派单';\n                }\n            },\n            待派单: {\n                派单: async () => {\n                    Logger.log('已派单');\n                    return '待接单';\n                }\n            },\n            待接单: {\n                接单: async () => {\n                    Logger.log('已接单');\n                    return '待结单';\n                }\n            },\n            待结单: {\n                结单: async () => {\n                    Logger.log('已结单');\n                }\n            }\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    文档概览\n\n\n\n    \n\n\n\n    \n        \n            文件\n            类型\n            标识符\n            注释\n        \n    \n    \n        \n            \n                \n                server/src/api/controllers/authority.controller.ts\n            \n            class\n            AuthorityController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                server/src/api/controllers/carousel.controller.ts\n            \n            class\n            CarouselController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                server/src/api/controllers/category.controller.ts\n            \n            class\n            CategoryController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                server/src/api/controllers/content.controller.ts\n            \n            class\n            ContentController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                server/src/api/controllers/flow-template.controller.ts\n            \n            class\n            FlowTemplateController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                server/src/api/controllers/flow.controller.ts\n            \n            class\n            FlowController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                server/src/api/controllers/login.controller.ts\n            \n            class\n            LoginController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/src/api/controllers/organization.controller.ts\n            \n            class\n            OrganizationController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                server/src/api/controllers/role.controller.ts\n            \n            class\n            RoleController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                server/src/api/controllers/search.controller.ts\n            \n            class\n            SearchController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/src/api/controllers/service-category.controller.ts\n            \n            class\n            ServiceCategoryController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                server/src/api/controllers/service.controller.ts\n            \n            class\n            ServiceController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                server/src/api/controllers/setting.controller.ts\n            \n            class\n            SettingController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/src/api/controllers/storage.controller.ts\n            \n            class\n            StorageController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/src/api/controllers/user.controller.ts\n            \n            class\n            UserController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                server/src/common/aspects/decorator.ts\n            \n            function\n            Api\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/aspects/decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/aspects/exceptions.filter.ts\n            \n            class\n            ExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                server/src/common/aspects/middlewares.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/dtos/apply-volunteer.dto.ts\n            \n            class\n            ApplyVolunteerDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                server/src/common/dtos/content.dto.ts\n            \n            class\n            CreateContentDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                server/src/common/dtos/content.dto.ts\n            \n            class\n            UpdateContentDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                server/src/common/dtos/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/src/common/dtos/password.dto.ts\n            \n            class\n            PasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/src/common/entities/authority.entity.ts\n            \n            class\n            Authority\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                server/src/common/entities/base.ts\n            \n            class\n            Base\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                server/src/common/entities/carousel.entity.ts\n            \n            class\n            Carousel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                server/src/common/entities/category.entity.ts\n            \n            class\n            Category\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                server/src/common/entities/content.entity.ts\n            \n            class\n            Content\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                server/src/common/entities/content.entity.ts\n            \n            variable\n            cellsMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/entities/content.entity.ts\n            \n            variable\n            handleType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/entities/flow-template.entity.ts\n            \n            class\n            FlowTemplate\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                server/src/common/entities/flow.entity.ts\n            \n            class\n            Flow\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                server/src/common/entities/notice.entity.ts\n            \n            class\n            Notice\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                server/src/common/entities/organization.entity.ts\n            \n            class\n            Organization\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                server/src/common/entities/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                server/src/common/entities/service-category.entity.ts\n            \n            class\n            ServiceCategory\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                server/src/common/entities/service.entity.ts\n            \n            class\n            Service\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                server/src/common/entities/service.entity.ts\n            \n            variable\n            cellsMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/entities/service.entity.ts\n            \n            variable\n            handleType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/entities/setting.entity.ts\n            \n            class\n            Setting\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                server/src/common/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                server/src/common/flows/apply-volunteer.flow.ts\n            \n            injectable\n            ApplyVolunteerFlow\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                server/src/common/flows/base.flow.ts\n            \n            class\n            BaseFlow\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                server/src/common/flows/work-order.flow.ts\n            \n            injectable\n            WorkOrderFlow\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                server/src/common/lib/es.ts\n            \n            variable\n            es\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/lib/excel.ts\n            \n            class\n            ExcelHelper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                server/src/common/lib/helper.ts\n            \n            function\n            extractionTextInHtml\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/lib/helper.ts\n            \n            function\n            getVIP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/lib/helper.ts\n            \n            function\n            textInterception\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/lib/influx.ts\n            \n            variable\n            influx\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/lib/io.ts\n            \n            class\n            IO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/src/common/lib/io.ts\n            \n            variable\n            io\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/lib/io.ts\n            \n            variable\n            IOServer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/lib/logger.ts\n            \n            class\n            ContextTrace\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                server/src/common/lib/logger.ts\n            \n            class\n            Logger\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                server/src/common/lib/logger.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/lib/mq.ts\n            \n            class\n            MQ\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/src/common/lib/mq.ts\n            \n            variable\n            mq\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/lib/qiniu.ts\n            \n            class\n            Qiniu\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/src/common/lib/redis.ts\n            \n            variable\n            redis\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/lib/sms.ts\n            \n            class\n            SMS\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/src/common/lib/wf.ts\n            \n            class\n            Engine\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                server/src/common/lib/wf.ts\n            \n            interface\n            IFlow\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/src/common/lib/wf.ts\n            \n            variable\n            OVER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/lib/wf.ts\n            \n            variable\n            wf\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/services/authority.service.ts\n            \n            injectable\n            AuthorityService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                server/src/common/services/base.service.ts\n            \n            class\n            BaseService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/src/common/services/carousel.service.ts\n            \n            injectable\n            CarouselService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                server/src/common/services/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                server/src/common/services/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                server/src/common/services/content.service.ts\n            \n            injectable\n            ContentService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                server/src/common/services/flow-template.service.ts\n            \n            injectable\n            FlowTemplateService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                server/src/common/services/flow.service.ts\n            \n            injectable\n            FlowService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                server/src/common/services/import.service.ts\n            \n            injectable\n            ImportService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                server/src/common/services/organization.service.ts\n            \n            injectable\n            OrganizationService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                server/src/common/services/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                server/src/common/services/search.service.ts\n            \n            injectable\n            SearchService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                server/src/common/services/service-category.service.ts\n            \n            injectable\n            ServiceCategoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                server/src/common/services/service.service.ts\n            \n            injectable\n            ServiceService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                server/src/common/services/setting.service.ts\n            \n            injectable\n            SettingService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                server/src/common/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                server/src/common/strategys/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/src/common/tasks/status.task.ts\n            \n            class\n            StatusTask\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/src/config/index.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/main.ts\n            \n            function\n            initFastify\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/main.ts\n            \n            function\n            initScripts\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/main.ts\n            \n            function\n            initSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/main.ts\n            \n            variable\n            dev\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/main.ts\n            \n            variable\n            readFileAsync\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/seed/index.ts\n            \n            injectable\n            Seed\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                server/src/ssr/controllers/index.controller.ts\n            \n            controller\n            IndexController\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        依赖项\n    \n    \n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  列举\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            ExcelHandleType   (server/.../excel.ts)\n                        \n                        \n                            FlowTemplateEnum   (server/.../enum.ts)\n                        \n                        \n                            Gender   (server/.../enum.ts)\n                        \n                        \n                            LoggerLevel   (server/.../logger.ts)\n                        \n                        \n                            MQChannel   (server/.../mq.ts)\n                        \n                        \n                            NoticeType   (server/.../enum.ts)\n                        \n                        \n                            PointsActionType   (server/.../enum.ts)\n                        \n                        \n                            RowStatus   (server/.../enum.ts)\n                        \n                        \n                            SMSTemplates   (server/.../sms.ts)\n                        \n                        \n                            StorageType   (server/.../enum.ts)\n                        \n                        \n                            UploadActionType   (server/.../enum.ts)\n                        \n                        \n                            VIP   (server/.../enum.ts)\n                        \n                        \n                            WFResult   (server/.../wf.ts)\n                        \n                        \n                            WFStatus   (server/.../wf.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server/src/common/lib/excel.ts\n    \n        \n            \n                \n                    \n                        \n                        ExcelHandleType\n                    \n                \n                        \n                            \n                                 KV\n                            \n                        \n                        \n                            \n                                 ARRAY\n                            \n                        \n            \n        \n\n    server/src/common/aspects/enum.ts\n    \n        \n            \n                \n                    \n                        \n                        FlowTemplateEnum\n                    \n                \n                        \n                            \n                                 WORK_OR\n                            \n                        \n                        \n                            \n                                值 : WORK_OR\n                            \n                        \n                        \n                            \n                                 APPLY_VR\n                            \n                        \n                        \n                            \n                                值 : APPLY_VR\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Gender\n                    \n                \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                 FEMALE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        NoticeType\n                    \n                \n                        \n                            \n                                 NOTIFICATION\n                            \n                        \n                        \n                            \n                                值 : notification\n                            \n                        \n                        \n                            \n                                 MESSAGE\n                            \n                        \n                        \n                            \n                                值 : message\n                            \n                        \n                        \n                            \n                                 EVENT\n                            \n                        \n                        \n                            \n                                值 : event\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PointsActionType\n                    \n                \n                        \n                            \n                                 ADD\n                            \n                        \n                        \n                            \n                                值 : add\n                            \n                        \n                        \n                            \n                                 SUB\n                            \n                        \n                        \n                            \n                                值 : sub\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RowStatus\n                    \n                \n                        \n                            \n                                 NORMAL\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StorageType\n                    \n                \n                        \n                            \n                                 LOCAL\n                            \n                        \n                        \n                            \n                                值 : local\n                            \n                        \n                        \n                            \n                                 QINIU\n                            \n                        \n                        \n                            \n                                值 : qiniu\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UploadActionType\n                    \n                \n                        \n                            \n                                 IMPORT\n                            \n                        \n                        \n                            \n                                值 : IMPORT\n                            \n                        \n                        \n                            \n                                 UPLOAD\n                            \n                        \n                        \n                            \n                                值 : UPLOAD\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        VIP\n                    \n                \n                        \n                            \n                                 V0\n                            \n                        \n                        \n                            \n                                 V1\n                            \n                        \n                        \n                            \n                                 V2\n                            \n                        \n                        \n                            \n                                 V3\n                            \n                        \n                        \n                            \n                                 V4\n                            \n                        \n                        \n                            \n                                 V5\n                            \n                        \n            \n        \n\n    server/src/common/lib/logger.ts\n    \n        \n            \n                \n                    \n                        \n                        LoggerLevel\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                值 : ALL\n                            \n                        \n                        \n                            \n                                 MARK\n                            \n                        \n                        \n                            \n                                值 : MARK\n                            \n                        \n                        \n                            \n                                 TRACE\n                            \n                        \n                        \n                            \n                                值 : TRACE\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                值 : DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                值 : INFO\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                值 : WARN\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                值 : ERROR\n                            \n                        \n                        \n                            \n                                 FATAL\n                            \n                        \n                        \n                            \n                                值 : FATAL\n                            \n                        \n                        \n                            \n                                 OFF\n                            \n                        \n                        \n                            \n                                值 : OFF\n                            \n                        \n            \n        \n\n    server/src/common/lib/mq.ts\n    \n        \n            \n                \n                    \n                        \n                        MQChannel\n                    \n                \n                        \n                            \n                                 WF\n                            \n                        \n                        \n                            \n                                值 : WF\n                            \n                        \n            \n        \n\n    server/src/common/lib/sms.ts\n    \n        \n            \n                \n                    \n                        \n                        SMSTemplates\n                    \n                \n                        \n                            \n                                 USER_REGISTER\n                            \n                        \n                        \n                            \n                                值 : USER_REGISTER\n                            \n                        \n                        \n                            \n                                 PASSWORD_RESET\n                            \n                        \n                        \n                            \n                                值 : PASSWORD_RESET\n                            \n                        \n            \n        \n\n    server/src/common/lib/wf.ts\n    \n        \n            \n                \n                    \n                        \n                        WFResult\n                    \n                \n                        \n                            \n                                 RUNNING\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                 FAILURE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        WFStatus\n                    \n                \n                        \n                            \n                                 RUNNING\n                            \n                        \n                        \n                            \n                                 OVER\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  函数\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            Api   (server/.../decorator.ts)\n                        \n                        \n                            bootstrap   (server/.../main.ts)\n                        \n                        \n                            extractionTextInHtml   (server/.../helper.ts)\n                        \n                        \n                            getVIP   (server/.../helper.ts)\n                        \n                        \n                            initFastify   (server/.../main.ts)\n                        \n                        \n                            initScripts   (server/.../main.ts)\n                        \n                        \n                            initSwagger   (server/.../main.ts)\n                        \n                        \n                            logger   (server/.../middlewares.ts)\n                        \n                        \n                            textInterception   (server/.../helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server/src/common/aspects/decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Api\n                        \n                        \n                    \n                \n            \n            \n                \nApi(prefix?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    prefix\n\n                                    \n                                        是\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     ClassDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFastify\n                        \n                        \n                    \n                \n            \n            \n                \ninitFastify(nextjs)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    nextjs\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initScripts\n                        \n                        \n                    \n                \n            \n            \n                \ninitScripts(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initSwagger\n                        \n                        \n                    \n                \n            \n            \n                \ninitSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    server/src/common/lib/helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            extractionTextInHtml\n                        \n                        \n                    \n                \n            \n            \n                \nextractionTextInHtml(html)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    html\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVIP\n                        \n                        \n                    \n                \n            \n            \n                \ngetVIP(points)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    points\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            textInterception\n                        \n                        \n                    \n                \n            \n            \n                \ntextInterception(text, length)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    length\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    server/src/common/aspects/middlewares.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            logger\n                        \n                        \n                    \n                \n            \n            \n                \nlogger(req, res, next)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    next\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNestify\n    \n\n\n开箱即用的中后台全栈解决方案\n\n正在开发探索中...\n\n\n技术选型\n\nNestjs、Nextjs、Fastify、TypeORM、Ant Design...\n\n开发环境\n\nmacOS Mojave 10.14.5\nNode.js 11.10.0\nRedis 5.0.3\nPostgreSQL 9.6\nRabbitmq 3.7.7\n\n使用方法\n\ngit clone 项目到本地\n执行 yarn && yarn:ic\n安装 Node.js、Redis、PostgreSQL、Rabbitmq\n修改 server/package.json 以及 server/database/ 中 sql 文件的账户信息\n根目录执行 yarn db:create 用于创建数据库和数据库用户\n执行 yarn db:init 用于创建数据表和导入种子数据\n开发模式启动前后台执行 yarn dev\n默认账号：SysAdmin 密码：12345678\n在开发模式下修改了实体需要执行 yarn db:init，用于重新构建数据表和导入种子数据\nyarn orm 是 TypeORM CLI 的封装, 例如：执行 yarn orm schema:sync 等同于执行 typeorm schema:sync\n所有被导入种子数据的 excel 文件都存放在 src/seeds 中，可以根据需要进行调整\n\n\n注：永远不要在生产环境下使用 yarn db:init\n\n文档\n\n在线文档\n启动项目后访问 http://127.0.0.0:3000/docs/ 查看接口文档\n执行 yarn doc 然后访问 http://127.0.0.0:8080/ 查看项目文档\n\n功能概览\n\nFastify 高性能 HTTP 服务\nReact 服务端渲染\nReact SPA 后台管理系统\nRedis 高速缓存\nSocket.IO 双向通讯\nRBAC 权限管理\n工作流与有限状态机\n日志模块\n配置文件\n安全保护\n访问频率限制\n堆栈跟踪，全局异常捕获\n定时任务、延时任务、间隔任务\n文件上传、监控、搜索、管理\n七牛云存储\n脚本创建、初始化、迁移、回滚数据库\nExcel 导入、导出\nSwagger API 文档\n系统监控\n短信模块\n单元测试\n持续集成\n持续部署\n\n其他\n\n本项目由开源组织 NestifyStack 强力驱动\n\n协议\nNestify is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Roy Lin\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    模块列表\n\n\n    \n            \n                \n                    \n                        ApiModule\n                    \n                    \n                                \n                                    无数据显示\n                                \n                        \n                            查看\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        你的浏览器不支持SVG\n                                    \n                                \n                        \n                            查看\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        你的浏览器不支持SVG\n                                    \n                                \n                        \n                            查看\n                        \n                    \n                \n            \n            \n                \n                    \n                        SSRModule\n                    \n                    \n                                \n                                    无数据显示\n                                \n                        \n                            查看\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    概述\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nApiModule\n\nApiModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nAuthorityService \n\nAuthorityService \n\nAuthorityService  -->\n\nCommonModule->AuthorityService \n\n\n\n\n\nCarouselService \n\nCarouselService \n\nCarouselService  -->\n\nCommonModule->CarouselService \n\n\n\n\n\nCategoryService \n\nCategoryService \n\nCategoryService  -->\n\nCommonModule->CategoryService \n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nContentService \n\nContentService \n\nContentService  -->\n\nCommonModule->ContentService \n\n\n\n\n\nFlowService \n\nFlowService \n\nFlowService  -->\n\nCommonModule->FlowService \n\n\n\n\n\nFlowTemplateService \n\nFlowTemplateService \n\nFlowTemplateService  -->\n\nCommonModule->FlowTemplateService \n\n\n\n\n\nImportService \n\nImportService \n\nImportService  -->\n\nCommonModule->ImportService \n\n\n\n\n\nOrganizationService \n\nOrganizationService \n\nOrganizationService  -->\n\nCommonModule->OrganizationService \n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nCommonModule->RoleService \n\n\n\n\n\nSearchService \n\nSearchService \n\nSearchService  -->\n\nCommonModule->SearchService \n\n\n\n\n\nServiceCategoryService \n\nServiceCategoryService \n\nServiceCategoryService  -->\n\nCommonModule->ServiceCategoryService \n\n\n\n\n\nServiceService \n\nServiceService \n\nServiceService  -->\n\nCommonModule->ServiceService \n\n\n\n\n\nSettingService \n\nSettingService \n\nSettingService  -->\n\nCommonModule->SettingService \n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nCommonModule->UserService \n\n\n\n\n\nSSRModule\n\nSSRModule\n\nAppModule -->\n\nSSRModule->AppModule\n\n\n\n\n\nSeed\n\nSeed\n\nAppModule -->\n\nSeed->AppModule\n\n\n\n\n\nApplyVolunteerFlow\n\nApplyVolunteerFlow\n\nCommonModule -->\n\nApplyVolunteerFlow->CommonModule\n\n\n\n\n\nAuthorityService\n\nAuthorityService\n\nCommonModule -->\n\nAuthorityService->CommonModule\n\n\n\n\n\nCarouselService\n\nCarouselService\n\nCommonModule -->\n\nCarouselService->CommonModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCommonModule -->\n\nCategoryService->CommonModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\nContentService\n\nContentService\n\nCommonModule -->\n\nContentService->CommonModule\n\n\n\n\n\nFlowService\n\nFlowService\n\nCommonModule -->\n\nFlowService->CommonModule\n\n\n\n\n\nFlowTemplateService\n\nFlowTemplateService\n\nCommonModule -->\n\nFlowTemplateService->CommonModule\n\n\n\n\n\nImportService\n\nImportService\n\nCommonModule -->\n\nImportService->CommonModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nCommonModule -->\n\nJwtStrategy->CommonModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nCommonModule -->\n\nOrganizationService->CommonModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nCommonModule -->\n\nRoleService->CommonModule\n\n\n\n\n\nSearchService\n\nSearchService\n\nCommonModule -->\n\nSearchService->CommonModule\n\n\n\n\n\nServiceCategoryService\n\nServiceCategoryService\n\nCommonModule -->\n\nServiceCategoryService->CommonModule\n\n\n\n\n\nServiceService\n\nServiceService\n\nCommonModule -->\n\nServiceService->CommonModule\n\n\n\n\n\nSettingService\n\nSettingService\n\nCommonModule -->\n\nSettingService->CommonModule\n\n\n\n\n\nUserService\n\nUserService\n\nCommonModule -->\n\nUserService->CommonModule\n\n\n\n\n\nWorkOrderFlow\n\nWorkOrderFlow\n\nCommonModule -->\n\nWorkOrderFlow->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        放大\n        重置\n        缩小\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 模块列表\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    19 可注入的\n                \n            \n        \n        \n            \n                \n                    \n                    46 类列表\n                \n            \n        \n        \n            \n                \n                    \n                    1 接口\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  变量\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            cellsMap   (server/.../content.entity.ts)\n                        \n                        \n                            cellsMap   (server/.../service.entity.ts)\n                        \n                        \n                            config   (server/.../index.ts)\n                        \n                        \n                            CurrentUser   (server/.../decorator.ts)\n                        \n                        \n                            dev   (server/.../main.ts)\n                        \n                        \n                            es   (server/.../es.ts)\n                        \n                        \n                            handleType   (server/.../content.entity.ts)\n                        \n                        \n                            handleType   (server/.../service.entity.ts)\n                        \n                        \n                            influx   (server/.../influx.ts)\n                        \n                        \n                            io   (server/.../io.ts)\n                        \n                        \n                            IOServer   (server/.../io.ts)\n                        \n                        \n                            logger   (server/.../logger.ts)\n                        \n                        \n                            mq   (server/.../mq.ts)\n                        \n                        \n                            OVER   (server/.../wf.ts)\n                        \n                        \n                            readFileAsync   (server/.../main.ts)\n                        \n                        \n                            redis   (server/.../redis.ts)\n                        \n                        \n                            wf   (server/.../wf.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server/src/common/entities/content.entity.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cellsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n    标题: 'title',\n    作者: 'author',\n    来源: 'source',\n    地址: 'address',\n    排序: 'sort',\n    发布时间: 'publish_at',\n    正文: 'text',\n    图片: 'thumbnail',\n    视频: 'video'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleType\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : ExcelHandleType.ARRAY\n                        \n                    \n\n\n            \n        \n\n    server/src/common/entities/service.entity.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cellsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n    标题: 'title',\n    作者: 'author',\n    来源: 'source',\n    地址: 'address',\n    排序: 'sort',\n    发布时间: 'publish_at',\n    正文: 'text',\n    图片: 'thumbnail',\n    视频: 'video'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleType\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : ExcelHandleType.ARRAY\n                        \n                    \n\n\n            \n        \n\n    server/src/config/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n    port: 3000,\n    hostName: '0.0.0.0',\n    serverUrl: 'http://127.0.0.1:3000',\n\n    helmet: { hidePoweredBy: { setTo: 'C++ 12' } },\n\n    rateLimit: {\n        timeWindow: 1,\n        max: 5\n    },\n\n    fileUpload: {\n        createParentPath: true,\n        limits: { fileSize: 50 * 1024 * 1024 }\n    },\n\n    static: {\n        root: 'static',\n        prefix: '/static/',\n        uploadPath: '/uploads'\n    },\n\n    logger: {\n        level: LoggerLevel.ALL\n    },\n\n    jwt: {\n        secretOrPrivateKey: 'secretKey',\n        signOptions: {\n            expiresIn: 360000\n        }\n    },\n\n    cache: {\n        ttl: 10,\n        max: 1000\n    },\n\n    redis: {\n        host: '127.0.0.1',\n        port: 6379\n    },\n\n    session: {\n        secret: 'some-secret-password-at-least-32-characters-long',\n        cookie: {\n            maxAge: 1000 * 60 * 60 * 3,\n            secure: false\n        }\n    },\n\n    orm: {\n        type: 'postgres',\n        host: '127.0.0.1',\n        port: 5432,\n        database: 'nestify',\n        username: 'nestify',\n        password: '123456',\n        dropSchema: false,\n        synchronize: false,\n        logging: false,\n        entities: [resolve('./**/*.entity.ts')]\n    },\n\n    influx: {\n        host: '127.0.0.1',\n        database: 'nestify',\n        schema: [\n            {\n                measurement: 'system_status',\n                fields: {\n                    cpu: Influx.FieldType.FLOAT,\n                    memory: Influx.FieldType.INTEGER,\n                    ppid: Influx.FieldType.INTEGER,\n                    pid: Influx.FieldType.INTEGER,\n                    ctime: Influx.FieldType.INTEGER,\n                    elapsed: Influx.FieldType.INTEGER,\n                    timestamp: Influx.FieldType.INTEGER\n                },\n                tags: ['status']\n            }\n        ]\n    },\n\n    qiniu: {\n        accessKey: 'YyxyEPUcKk2vDpjKkCwZQaAC_uaUaxX1eqd26hL6',\n        secretKey: 'gCpsZaPRn8YqWbKzMsVgcEBsQk63Aev9qX2VN_eV',\n        domain: 'http://img.nestify.cn',\n        policy: {\n            scope: 'nestify',\n            expires: 7200,\n            returnBody:\n                '{\"key\":\"$(key)\",\"hash\":\"$(etag)\",\"fsize\":$(fsize),\"bucket\":\"$(bucket)\",\"name\":\"$(x:name)\"}'\n        }\n    },\n\n    es: {\n        host: '127.0.0.1:9200',\n        log: 'trace'\n    },\n\n    mq: {\n        url: 'amqp://localhost',\n        options: {}\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    server/src/common/aspects/decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createParamDecorator(async (param, request) => {\n\treturn !param ? request.user : request.user[param];\n})\n                        \n                    \n\n\n            \n        \n\n    server/src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dev\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : process.env.NODE_ENV !== 'production'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readFileAsync\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : util.promisify(fs.readFile)\n                        \n                    \n\n\n            \n        \n\n    server/src/common/lib/es.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            es\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new elasticsearch.Client({\n    ...config.es,\n    log: Logger\n})\n                        \n                    \n\n\n            \n        \n\n    server/src/common/lib/influx.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            influx\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new Influx.InfluxDB(config.influx)\n                        \n                    \n\n\n            \n        \n\n    server/src/common/lib/io.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            io\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new IO()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            IOServer\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n    status: io.server.of('/status'),\n    notices: io.server.of('/notices')\n}\n                        \n                    \n\n\n            \n        \n\n    server/src/common/lib/logger.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : Log4js.getLogger()\n                        \n                    \n\n\n            \n        \n\n    server/src/common/lib/mq.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mq\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new MQ()\n                        \n                    \n\n\n            \n        \n\n    server/src/common/lib/wf.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OVER\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            缺省值 : 'OVER'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wf\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new Engine()\n                        \n                    \n\n\n            \n        \n\n    server/src/common/lib/redis.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            redis\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new Redis({ ...config.redis })\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"}}
}
