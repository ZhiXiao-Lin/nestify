var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/modules/ApiModule.html",[0,1.576,1,2.327]],["body/modules/ApiModule.html",[0,2.559,1,3.78,2,0.02,3,0.198,4,0.198,5,4.752,6,4.752,7,5.93,8,6.769,9,4.752,10,4.752,11,5.085,12,0.312,13,5.93,14,0.847,15,2.051,16,4.752,17,4.112,18,4.752,19,4.112,20,4.752,21,4.112,22,4.752,23,4.112,24,4.752,25,4.112,26,4.752,27,4.112,28,4.752,29,4.112,30,4.752,31,4.112,32,4.752,33,4.112,34,4.752,35,4.112,36,4.752,37,3.629,38,0.227,39,0.322,40,4.075,41,4.752,42,0.012,43,0.012]],["title/modules/AppModule.html",[0,1.576,44,2.532]],["body/modules/AppModule.html",[0,2.839,1,4.572,2,0.02,3,0.206,4,0.206,12,0.294,14,0.881,38,0.236,39,0.335,42,0.013,43,0.013,44,5.208,45,3.774,46,3.774,47,3.774,48,3.15,49,4.639,50,3.774,51,4.238,52,4.238,53,4.238,54,4.572,55,4.572,56,4.632,57,4.942,58,4.942,59,4.942,60,4.942,61,4.238]],["title/classes/Authority.html",[39,0.248,62,1.884]],["body/classes/Authority.html",[2,0.02,3,0.126,4,0.126,12,0.248,38,0.144,39,0.295,42,0.008,43,0.008,62,3.203,63,2.58,64,3.053,65,3.909,66,3.28,67,2.482,68,2.887,69,3.28,70,3.263,71,2.677,72,0.599,73,2.82,74,2.887,75,3.795,76,2.247,77,1.369,78,2.247,79,2.112,80,1.685,81,2.247,82,5.119,83,2.82,84,3.024,85,3.55,86,3.909,87,3.009,88,1.558,89,3.091,90,2.23,91,3.009,92,1.657,93,2.399,94,2.399,95,2.641,96,3.303,97,3.009,98,3.891,99,2.564,100,3.009,101,3.909,102,3.009,103,2.887,104,2.297,105,3.009,106,2.887,107,2.573,108,3.325,109,2.247,110,2.247,111,2.112,112,3.02,113,3.009,114,2.171,115,1.88,116,3.009,117,3.009,118,1.552,119,1.657,120,1.552,121,1.657,122,2.112,123,1.552,124,1.88,125,1.657,126,1.552,127,1.657,128,2.399,129,3.009,130,1.778,131,1.552,132,1.657,133,1.441,134,3.009,135,3.009,136,2.58,137,3.009,138,2.58,139,3.009,140,2.58,141,3.009,142,1.657,143,3.795,144,1.299,145,2.399,146,3.203,147,2.297,148,2.297,149,0.855,150,1.552,151,1.552,152,2.58,153,2.297,154,0.995,155,0.995,156,2.297,157,3.009,158,0.651,159,3.734,160,3.325,161,3.009]],["title/classes/AuthorityController.html",[33,2.532,39,0.248]],["body/classes/AuthorityController.html",[2,0.02,3,0.158,4,0.158,12,0.279,14,0.912,33,3.544,38,0.181,39,0.256,42,0.01,43,0.01,69,2.816,72,0.443,77,1.368,80,1.977,158,0.73,162,3.242,163,1.254,164,2.816,165,2.637,166,1.875,167,2.816,168,3.781,169,3.945,170,3.781,171,2.234,172,2.646,173,3.781,174,3.238,175,2.41,176,3.02,177,3.781,178,2.234,179,3.02,180,3.781,181,2.052,182,3.242,183,4.383,184,3.781,185,2.234,186,2.987,187,3.781,188,2.083,189,3.19,190,3.781,191,1.728,192,2.478,193,1.387,194,1.834,195,1.463,196,1.951,197,2.336,198,1.387,199,2.083,200,1.834,201,1.632,202,2.083,203,1.463,204,1.728,205,3.781,206,3.781,207,3.781,208,1.834,209,2.083,210,1.544,211,2.41,212,1.463,213,1.022,214,1.191,215,3.781,216,2.234,217,3.781,218,2.234,219,5.111,220,2.083,221,3.242,222,3.781,223,2.234,224,3.781]],["title/injectables/AuthorityService.html",[169,2.157,225,0.764]],["body/injectables/AuthorityService.html",[2,0.02,3,0.152,4,0.152,12,0.276,14,0.65,38,0.174,39,0.247,42,0.009,43,0.009,62,2.571,68,2.417,69,2.745,72,0.426,77,0.803,88,1.557,130,2.035,149,1.036,154,1.205,158,0.699,163,1.253,166,1.828,169,2.944,181,1.879,186,2.571,195,1.928,197,2.277,212,1.409,213,0.985,214,1.245,225,1.043,226,3.124,227,2.922,228,3.805,229,2.745,230,2.571,231,3.643,232,4.235,233,3.643,234,4.983,235,4.983,236,3.643,237,2.571,238,3.805,239,3.643,240,4.273,241,3.643,242,2.944,243,3.643,244,2.745,245,3.643,246,1.88,247,2.007,248,1.88,249,2.007,250,1.572,251,1.572,252,1.88,253,1.572,254,2.007,255,3.124,256,1.665,257,3.643,258,1.572,259,3.643,260,3.643,261,3.643,262,1.388,263,3.643,264,3.124,265,4.273,266,4.983,267,4.983,268,3.643,269,3.124,270,3.643,271,3.124,272,3.124,273,3.643]],["title/classes/Base.html",[39,0.248,64,1.668]],["body/classes/Base.html",[2,0.02,3,0.183,4,0.183,12,0.275,38,0.21,39,0.383,42,0.011,43,0.011,64,2.58,71,2.546,76,3.217,77,1.375,78,3.217,79,3.024,81,2.913,88,1.536,90,1.966,95,2.269,96,3.395,114,2.545,118,2.269,120,2.913,122,3.3,123,2.269,124,2.84,126,2.269,131,2.913,133,2.063,144,1.898,146,2.913,149,1.25,155,1.455,158,0.617,262,1.074,274,3.77,275,4.397,276,4.397,277,4.397,278,4.397,279,4.397,280,4.397,281,5.646,282,5.646,283,3.11,284,3.77,285,4.841,286,3.77,287,4.397,288,4.397,289,4.397,290,4.397,291,4.397]],["title/classes/BaseService.html",[39,0.248,227,1.668]],["body/classes/BaseService.html",[2,0.02,3,0.206,4,0.206,12,0.206,38,0.236,39,0.335,42,0.013,43,0.013,72,0.577,77,1.088,88,1.581,149,1.402,158,0.663,163,1.21,166,2.227,210,2.014,214,1.082,227,2.773,230,3.131,237,2.545,246,3.131,248,3.131,286,4.23,292,4.23,293,4.933,294,4.57,295,4.933,296,4.933,297,4.933,298,4.933,299,4.933,300,4.933]],["title/classes/Category.html",[39,0.248,301,1.491]],["body/classes/Category.html",[2,0.02,3,0.135,4,0.135,12,0.255,38,0.154,39,0.311,42,0.008,43,0.008,64,3.106,65,4.067,67,2.583,68,2.968,69,3.371,71,2.728,72,0.623,73,2.934,74,2.968,76,2.364,77,1.402,78,2.364,79,2.222,80,1.773,81,2.364,86,4.067,88,1.52,89,3.193,90,2.277,92,1.779,93,2.524,94,2.524,95,2.748,96,3.373,101,4.067,106,2.968,107,2.707,109,2.364,110,2.364,111,2.222,112,3.178,114,2.242,115,1.978,118,1.666,119,1.779,120,1.666,121,1.779,122,2.222,123,1.666,124,1.978,125,1.779,126,1.666,127,1.779,128,2.524,130,1.871,131,1.666,132,1.779,133,1.516,142,1.779,144,1.394,145,2.524,146,3.28,147,2.466,149,0.918,150,1.666,151,1.666,153,2.466,154,1.069,155,1.069,158,0.353,301,2.596,302,2.769,303,4.067,304,6.12,305,4.244,306,3.23,307,2.797,308,2.769,309,3.23,310,3.23,311,3.23,312,3.23,313,3.23,314,3.929,315,3.23,316,3.23,317,3.23,318,3.23,319,2.769,320,3.23,321,2.769,322,2.466,323,3.23]],["title/classes/CategoryController.html",[27,2.532,39,0.248]],["body/classes/CategoryController.html",[2,0.02,3,0.161,4,0.161,12,0.28,14,0.925,27,3.597,38,0.185,39,0.262,42,0.01,43,0.01,72,0.453,77,1.38,80,2.007,158,0.734,163,1.249,164,2.858,165,2.677,166,1.904,167,2.858,171,2.284,172,2.676,174,3.035,175,2.464,176,3.065,178,2.284,179,3.065,181,2.16,185,2.284,186,3.021,188,2.13,189,3.226,191,1.767,192,2.516,193,1.418,194,1.875,195,1.496,196,1.995,197,2.371,198,1.418,199,2.13,200,1.875,201,1.669,202,2.13,203,1.496,204,1.767,208,1.875,209,2.13,210,1.579,211,2.464,212,1.496,213,1.045,214,1.198,216,2.284,218,2.284,220,2.13,223,2.284,324,3.315,325,3.315,326,3.467,327,3.866,328,3.866,329,3.866,330,3.866,331,3.866,332,3.866,333,3.866,334,3.866,335,3.866,336,3.866,337,5.188,338,2.952,339,2.952,340,5.188,341,3.866]],["title/injectables/CategoryService.html",[225,0.764,326,1.884]],["body/injectables/CategoryService.html",[2,0.02,3,0.163,4,0.163,12,0.281,14,0.696,38,0.186,39,0.265,42,0.01,43,0.01,68,2.531,72,0.457,77,0.86,88,1.517,149,1.109,154,1.291,158,0.686,163,1.25,166,1.915,181,1.727,195,2.019,214,1.168,225,1.093,227,2.992,228,3.985,229,2.875,230,2.693,232,4.355,237,2.013,238,3.985,242,3.084,244,2.875,246,2.013,247,2.149,248,2.013,249,2.149,250,1.684,251,1.684,252,2.013,253,1.684,254,2.149,258,1.684,262,0.953,301,2.809,322,2.979,326,2.693,342,3.345,343,5.219,344,3.901,345,3.901,346,4.475,347,3.901,348,5.219,349,3.901,350,3.901,351,3.901,352,2.979,353,3.901,354,3.901,355,3.345,356,3.901,357,3.901,358,3.901,359,3.901,360,3.345,361,3.901,362,3.901]],["title/modules/CommonModule.html",[0,1.576,54,2.327]],["body/modules/CommonModule.html",[0,2.307,2,0.02,3,0.136,4,0.136,12,0.312,14,0.58,38,0.155,39,0.22,42,0.008,43,0.008,45,2.482,46,2.482,47,2.482,48,2.072,49,3.514,50,3.514,54,4.834,61,2.787,62,2.375,103,2.232,169,4.163,201,1.403,253,1.403,255,2.787,283,2.536,301,1.879,307,2.103,326,3.636,352,2.482,363,2.787,364,2.787,365,2.787,366,4.163,367,3.882,368,4.163,369,4.163,370,4.163,371,4.163,372,3.882,373,3.636,374,4.061,375,3.25,376,4.603,377,3.25,378,3.25,379,3.25,380,2.787,381,3.25,382,4.603,383,3.25,384,2.482,385,2.254,386,3.25,387,2.787,388,2.787,389,2.787,390,3.25,391,2.103,392,2.482,393,2.254,394,1.79,395,2.787,396,2.232,397,2.482,398,2.787,399,3.25,400,3.25,401,3.25,402,3.25,403,3.25,404,3.192,405,3.25,406,3.25,407,3.25,408,3.25,409,3.25,410,3.25,411,3.25,412,3.25,413,3.25,414,3.25,415,3.25,416,2.482,417,3.25,418,3.25,419,3.25]],["title/injectables/CommonService.html",[225,0.764,366,2.157]],["body/injectables/CommonService.html",[2,0.02,3,0.158,4,0.158,12,0.294,14,0.676,38,0.181,39,0.257,42,0.01,43,0.01,72,0.679,88,1.474,99,2.34,149,1.078,158,0.679,163,1.188,214,1.034,225,1.072,232,4.306,252,1.957,253,1.637,256,1.733,258,2.503,262,1.584,301,1.549,346,4.972,352,2.896,355,3.252,366,3.026,372,3.681,384,2.896,385,4.306,394,2.089,420,3.252,421,4.972,422,4.391,423,6.209,424,5.324,425,3.252,426,5.857,427,5.121,428,5.121,429,4.972,430,3.792,431,5.324,432,3.792,433,3.792,434,5.121,435,3.792,436,3.252,437,3.792,438,3.252,439,3.792,440,3.792,441,3.252,442,3.252,443,3.91,444,3.252,445,3.792,446,2.821,447,4.391,448,3.792,449,3.252,450,3.91,451,3.792,452,3.792,453,3.792,454,3.792,455,3.792,456,3.792,457,3.792,458,3.792,459,3.792,460,3.792,461,3.792,462,3.792,463,5.121,464,3.792,465,3.792,466,3.792,467,1.957]],["title/classes/Content.html",[39,0.248,307,1.668]],["body/classes/Content.html",[2,0.02,3,0.05,4,0.171,12,0.211,38,0.057,39,0.141,42,0.003,43,0.003,64,2.226,67,1.339,71,2.138,72,0.479,73,1.521,74,1.809,76,2.11,77,0.902,78,1.075,79,1.809,80,0.806,81,1.075,83,2.683,84,1.231,88,1.467,89,2.683,90,2.246,92,1.521,93,1.148,94,1.148,95,1.701,96,3.018,106,1.809,107,1.231,109,3.667,110,0.619,111,3.447,114,1.582,115,1.423,118,0.619,119,0.661,120,0.619,121,0.661,122,1.011,123,0.619,124,0.899,125,0.661,126,0.619,127,0.661,128,1.148,130,0.851,131,0.619,132,0.661,133,0.397,142,0.661,143,1.76,144,0.518,145,1.148,146,2.848,149,0.341,150,0.619,151,0.619,154,0.397,155,2.148,158,0.302,160,2.108,163,0.97,198,1.21,214,0.492,250,0.518,251,0.518,262,0.999,301,2.199,303,1.591,307,2.226,446,3.433,468,0.917,469,2.849,470,3.378,471,2.761,472,3.378,473,3.224,474,3.378,475,3.719,476,3.224,477,4.392,478,4.392,479,3.766,480,4.392,481,4.392,482,2.827,483,2.827,484,1.201,485,1.201,486,1.03,487,1.201,488,2.761,489,2.055,490,1.787,491,1.787,492,4.343,493,5.288,494,4.343,495,2.084,496,1.201,497,1.201,498,1.445,499,1.201,500,4.531,501,3.296,502,3.296,503,4.649,504,3.296,505,3.296,506,3.296,507,3.296,508,6.001,509,5.194,510,5.344,511,2.084,512,3.296,513,2.084,514,2.084,515,2.084,516,2.084,517,3.296,518,3.296,519,2.084,520,2.084,521,3.986,522,2.878,523,3.105,524,3.105,525,3.296,526,3.296,527,3.296,528,2.084,529,2.084,530,2.084,531,1.201,532,1.201,533,1.201,534,1.201,535,1.201,536,1.201,537,1.201,538,1.201,539,2.084,540,1.201,541,1.201,542,1.201,543,1.201,544,1.201,545,1.201,546,1.201,547,1.201,548,1.201,549,1.201,550,1.201,551,1.328,552,1.03,553,1.201,554,0.709,555,0.917,556,0.709,557,0.917,558,0.917,559,1.201,560,1.03,561,1.787,562,1.03,563,1.03,564,1.03,565,1.201,566,1.201,567,1.201,568,1.201,569,1.201,570,2.761,571,0.917,572,2.084,573,3.296,574,1.787,575,2.084,576,1.03,577,2.108,578,2.367,579,2.084,580,2.084,581,2.084,582,2.084,583,2.084,584,2.084,585,2.084,586,2.084,587,1.201,588,1.201,589,1.03,590,1.03]],["title/classes/ContentController.html",[23,2.532,39,0.248]],["body/classes/ContentController.html",[2,0.02,3,0.158,4,0.158,12,0.279,14,0.912,23,3.544,38,0.277,39,0.256,42,0.01,43,0.01,72,0.443,77,1.368,80,1.977,158,0.73,163,1.254,164,2.816,165,2.637,166,1.875,167,2.816,171,2.234,172,2.646,174,3.007,175,2.41,176,3.02,178,2.234,179,3.02,181,2.209,185,2.234,186,2.987,188,2.083,189,3.19,191,1.728,192,2.478,193,1.387,194,1.834,195,1.463,196,1.951,197,2.336,198,1.387,199,2.083,200,1.834,201,1.632,202,2.083,203,1.463,204,1.728,208,1.834,209,2.083,210,1.544,211,2.41,212,1.463,213,1.022,214,1.191,216,2.234,218,2.234,220,2.083,223,2.234,338,3.903,339,2.887,367,3.678,591,3.242,592,3.781,593,3.781,594,3.781,595,3.242,596,3.781,597,3.781,598,3.781,599,3.781,600,3.781,601,3.242,602,3.781,603,3.781,604,3.781,605,5.111,606,5.111,607,3.781]],["title/injectables/ContentService.html",[225,0.764,367,2.011]],["body/injectables/ContentService.html",[2,0.02,3,0.14,4,0.14,12,0.286,14,0.598,38,0.16,39,0.319,42,0.009,43,0.009,66,2.591,72,0.55,77,1.198,88,1.457,115,1.446,144,1.446,149,0.952,151,1.729,154,1.109,158,0.644,163,1.205,166,1.726,181,1.556,195,1.819,197,2.149,212,1.296,213,0.906,214,1.178,225,0.985,227,2.836,229,2.591,230,2.427,237,1.729,242,2.779,244,2.591,246,1.729,247,1.846,248,1.729,249,1.846,250,1.446,251,1.446,252,1.729,253,1.446,254,1.846,256,1.531,258,2.03,262,1.516,294,3.755,301,2.406,307,2.836,322,2.559,325,2.873,326,3.319,360,2.873,367,2.591,393,2.324,608,2.873,609,4.703,610,5.434,611,3.351,612,4.703,613,4.738,614,3.351,615,3.351,616,3.351,617,2.873,618,1.98,619,3.351,620,3.351,621,2.324,622,3.351,623,3.591,624,3.768,625,2.136,626,4.659,627,3.351,628,3.351,629,3.261,630,3.351,631,4.703,632,3.351,633,2.873,634,3.351,635,2.873,636,3.351,637,3.351,638,2.559,639,3.591,640,2.559,641,2.873,642,3.351,643,2.873,644,3.591,645,2.873,646,3.351,647,2.873,648,2.873,649,2.559,650,2.559,651,2.559,652,3.351,653,2.559,654,4.033,655,3.351,656,3.351,657,3.351,658,3.351,659,3.351]],["title/classes/ContextTrace.html",[39,0.248,660,2.532]],["body/classes/ContextTrace.html",[2,0.02,3,0.204,4,0.116,12,0.261,15,1.772,38,0.234,39,0.279,42,0.007,43,0.007,71,2.673,72,0.8,85,3.389,88,1.605,90,1.43,99,1.269,114,2.644,124,1.198,133,2.066,155,1.359,158,0.59,213,0.75,250,1.198,251,1.198,256,1.269,262,1.702,467,1.433,522,1.64,523,1.77,524,1.77,551,2.618,660,3.745,661,1.77,662,5.861,663,5.353,664,4.942,665,5.353,666,2.777,667,2.777,668,2.777,669,2.777,670,2.777,671,2.777,672,3.521,673,3.521,674,3.521,675,2.381,676,3.521,677,2.12,678,3.136,679,2.848,680,4.123,681,3.136,682,2.848,683,3.136,684,2.381,685,2.381,686,2.381,687,2.381,688,4.631,689,4.631,690,2.381,691,2.381,692,2.12,693,2.381,694,3.521,695,3.521,696,2.381,697,2.381,698,1.925,699,2.381,700,3.521,701,2.381,702,2.381,703,2.381,704,2.381,705,2.381,706,2.381,707,2.381,708,3.521,709,2.381,710,5.353,711,2.381,712,1.64,713,2.381,714,3.405,715,2.381,716,2.381,717,3.565,718,2.381,719,2.381,720,2.381,721,2.381,722,2.381,723,2.381,724,2.381,725,2.381,726,2.381,727,2.381,728,2.381,729,2.381,730,2.381,731,3.521,732,3.521,733,2.381,734,2.381,735,1.925,736,2.381,737,2.381,738,2.12,739,2.381,740,3.521,741,3.521,742,6.063,743,3.521,744,3.521,745,3.521,746,4.631,747,3.521,748,3.521,749,4.631,750,3.521,751,3.521,752,3.521,753,3.521,754,3.521,755,2.381,756,2.12,757,2.381,758,3.521,759,2.381,760,2.381,761,2.381,762,2.381,763,2.381,764,3.521,765,2.381,766,3.521,767,2.381,768,2.848,769,2.381,770,2.381,771,2.381,772,2.381,773,2.381]],["title/classes/CreateContentDto.html",[39,0.248,774,2.532]],["body/classes/CreateContentDto.html",[2,0.02,3,0.169,4,0.169,12,0.223,38,0.256,39,0.406,42,0.011,43,0.011,72,0.896,74,3.09,83,3.511,88,1.652,114,2.634,193,1.485,446,3.511,470,4.419,472,4.419,473,4.419,474,4.419,476,4.419,774,3.709,775,3.09,776,5.25,777,4.047,778,4.084,779,4.047,780,4.047,781,4.047,782,4.047,783,4.047,784,4.047,785,4.047,786,4.595,787,2.806,788,2.806,789,3.765]],["title/classes/ExcelHelper.html",[39,0.248,618,2.157]],["body/classes/ExcelHelper.html",[2,0.02,3,0.218,4,0.13,12,0.186,38,0.272,39,0.211,42,0.008,43,0.008,71,2.855,73,3.915,84,1.839,90,1.084,110,1.606,111,2.165,124,1.344,150,1.606,158,0.723,163,1.18,212,2.205,213,1.748,214,1.076,250,1.344,251,1.344,262,1.789,467,1.606,500,3.326,509,2.377,510,3.409,563,2.67,618,2.637,644,2.377,712,1.839,714,2.637,717,2.637,756,3.409,790,2.377,791,4.464,792,4.464,793,4.464,794,4.464,795,3.985,796,3.113,797,4.464,798,3.113,799,5.7,800,4.464,801,3.113,802,3.113,803,4.464,804,3.113,805,2.67,806,2.67,807,3.113,808,2.67,809,2.67,810,5.219,811,3.113,812,4.464,813,3.113,814,3.113,815,4.464,816,3.113,817,3.113,818,4.795,819,3.113,820,2.67,821,3.113,822,5.7,823,4.464,824,5.219,825,4.464,826,3.113,827,6.035,828,3.113,829,3.113,830,3.113,831,3.113,832,3.113,833,3.113,834,3.113,835,3.113,836,3.113,837,3.113,838,4.464,839,3.113,840,4.464,841,4.464,842,4.464,843,3.113,844,4.464,845,3.113,846,3.113,847,3.113,848,3.113,849,3.113,850,3.113,851,3.113,852,4.464,853,3.113,854,4.464,855,5.219,856,3.113,857,3.113,858,3.113,859,4.464,860,3.113,861,3.113,862,3.113,863,3.113,864,3.113,865,3.113,866,3.113,867,3.113,868,3.113,869,3.113,870,3.113,871,3.113,872,3.113]],["title/classes/ExceptionsFilter.html",[39,0.248,873,2.788]],["body/classes/ExceptionsFilter.html",[2,0.02,3,0.18,4,0.18,12,0.273,14,0.771,15,1.866,38,0.207,39,0.293,40,3.708,42,0.011,43,0.011,133,1.848,155,1.848,158,0.473,163,1.044,213,1.169,214,0.771,262,1.746,305,2.998,498,4.29,522,2.555,523,2.756,524,2.756,551,3.56,556,2.555,571,3.302,692,3.302,789,3.3,873,4.264,874,3.708,875,6.186,876,5.606,877,5.585,878,6.186,879,5.304,880,6.538,881,4.324,882,6.933,883,6.538,884,5.585,885,4.324,886,3.708,887,4.324,888,4.324,889,4.324,890,4.324,891,3.708,892,4.324,893,4.324,894,4.324,895,4.264,896,4.324,897,4.324,898,4.324,899,4.324,900,4.324,901,4.324,902,5.585,903,5.585,904,5.585,905,5.585,906,4.324,907,4.324,908,4.324,909,4.324,910,4.324,911,3.708,912,4.324,913,4.324,914,4.324,915,4.324,916,4.324,917,4.324,918,4.324]],["title/injectables/ImportService.html",[225,0.764,368,2.157]],["body/injectables/ImportService.html",[2,0.02,3,0.162,4,0.162,12,0.287,14,0.694,38,0.186,39,0.264,42,0.01,43,0.01,72,0.61,84,2.298,90,1.355,99,2.38,130,2.561,149,1.105,151,2.007,158,0.736,163,1.194,165,2.007,214,1.226,225,1.091,253,1.679,256,1.777,258,2.248,262,1.68,301,2.398,303,2.97,307,2.38,326,3.547,368,3.077,393,2.697,396,1.886,397,2.97,467,2.007,617,3.335,618,2.298,712,2.298,714,3.077,717,2.298,818,2.97,919,3.335,920,5.209,921,5.209,922,4.466,923,3.335,924,5.14,925,3.889,926,5.209,927,3.889,928,4.072,929,5.209,930,3.889,931,5.209,932,3.889,933,4.466,934,3.889,935,3.977,936,3.889,937,3.612,938,5.209,939,3.889,940,3.889,941,3.889,942,3.889,943,3.889,944,3.889,945,3.889,946,3.889,947,3.335,948,3.889,949,3.335,950,3.335,951,5.036,952,3.335,953,3.335,954,3.335,955,3.335]],["title/controllers/IndexController.html",[956,2.532,957,2.532]],["body/controllers/IndexController.html",[2,0.02,3,0.066,4,0.066,12,0.197,14,0.28,37,1.199,38,0.075,39,0.107,42,0.017,43,0.004,67,0.761,72,0.394,77,0.964,99,0.718,115,2.352,133,0.866,155,1.657,158,0.68,163,1.214,165,2.812,172,0.718,186,0.81,195,2.858,196,3.16,198,2.281,212,0.607,213,0.424,214,1.235,250,0.678,251,0.678,256,0.718,258,1.454,262,1.774,301,2.501,305,3.638,307,2.638,366,1.99,367,1.856,384,1.199,385,2.336,421,1.346,422,2.246,424,2.246,426,2.889,429,2.246,431,1.346,438,1.346,441,1.346,442,1.346,443,1.199,450,1.199,467,0.81,475,2.572,489,2.166,601,1.346,625,1.669,654,4.048,682,3.03,698,1.089,789,1.547,937,5.081,956,1.816,957,1.816,958,1.199,959,2.619,960,2.619,961,2.619,962,3.369,963,2.619,964,2.619,965,1.57,966,6.142,967,2.619,968,1.57,969,5.239,970,1.57,971,2.619,972,1.57,973,1.57,974,2.619,975,1.57,976,1.57,977,2.619,978,1.57,979,1.57,980,2.619,981,1.57,982,2.619,983,1.57,984,1.57,985,2.619,986,1.57,987,1.57,988,2.619,989,1.57,990,1.57,991,1.57,992,1.57,993,2.619,994,1.57,995,1.57,996,2.619,997,1.57,998,1.57,999,2.619,1000,1.57,1001,1.57,1002,2.619,1003,1.57,1004,1.57,1005,2.619,1006,1.57,1007,1.346,1008,1.57,1009,1.199,1010,1.346,1011,1.346,1012,3.824,1013,1.346,1014,1.346,1015,1.346,1016,1.346,1017,2.246,1018,1.346,1019,3.747,1020,1.346,1021,1.57,1022,6.666,1023,5.623,1024,2.619,1025,6.021,1026,5.905,1027,2.619,1028,2.619,1029,2.619,1030,2.619,1031,2.619,1032,2.619,1033,2,1034,1.57,1035,1.57,1036,3.369,1037,5.007,1038,1.57,1039,1.57,1040,1.57,1041,1.57,1042,1.57,1043,1.57,1044,3.932,1045,3.932,1046,3.932,1047,6.3,1048,1.57,1049,1.57,1050,1.57,1051,1.57,1052,1.57,1053,1.57,1054,4.37,1055,1.57,1056,1.57,1057,1.57,1058,1.57,1059,1.57,1060,1.57,1061,1.57,1062,1.57,1063,1.57,1064,1.57,1065,1.57,1066,1.57,1067,1.816,1068,1.57,1069,1.57,1070,1.57,1071,1.57,1072,1.57,1073,1.57,1074,1.57,1075,1.57,1076,1.346,1077,1.57,1078,1.57,1079,1.57,1080,1.57,1081,1.57,1082,1.57,1083,1.57,1084,1.57,1085,1.57,1086,1.57,1087,1.57,1088,2.889,1089,1.57,1090,1.57,1091,2.619,1092,1.57]],["title/injectables/JwtStrategy.html",[225,0.764,374,2.327]],["body/injectables/JwtStrategy.html",[2,0.02,3,0.199,4,0.199,12,0.297,14,0.849,38,0.228,39,0.323,42,0.012,43,0.012,72,0.557,154,1.575,158,0.52,163,1.091,181,1.575,201,2.055,210,1.944,212,1.842,213,1.287,214,0.849,225,1.243,262,1.163,283,3.27,373,3.667,374,3.784,389,4.082,391,3.294,392,3.635,416,3.635,1093,4.082,1094,5.937,1095,3.635,1096,4.761,1097,5.937,1098,4.761,1099,4.761,1100,4.761,1101,4.761,1102,4.761,1103,5.937,1104,4.761,1105,4.082,1106,4.761,1107,4.761,1108,4.761,1109,4.761,1110,4.761]],["title/classes/Logger.html",[15,1.576,39,0.248]],["body/classes/Logger.html",[2,0.02,3,0.244,4,0.095,11,5.864,12,0.244,15,1.875,38,0.208,39,0.241,42,0.006,43,0.006,71,2.952,72,0.573,85,3.012,88,1.508,90,1.236,99,1.046,114,2.336,124,0.988,133,1.437,155,1.174,158,0.535,213,0.619,250,0.988,251,0.988,256,1.046,262,1.64,467,1.181,522,1.352,523,1.459,524,1.459,551,2.261,660,3.393,661,1.459,662,4.196,663,3.725,664,3.042,665,3.725,672,3.042,673,3.042,674,3.042,675,1.962,676,3.042,677,1.747,678,2.709,679,3.884,680,4.611,681,4.277,682,3.884,683,4.277,684,1.962,685,1.962,686,1.962,687,1.962,688,4.196,689,4.196,690,1.962,691,1.962,692,1.747,693,1.962,694,3.042,695,3.042,696,1.962,697,1.962,698,1.587,699,1.962,700,3.042,701,1.962,702,1.962,703,1.962,704,1.962,705,1.962,706,1.962,707,1.962,708,3.042,709,1.962,710,5.01,711,1.962,712,1.352,713,1.962,714,3.128,715,1.962,716,1.962,717,3.309,718,1.962,719,1.962,720,1.962,721,1.962,722,1.962,723,1.962,724,1.962,725,1.962,726,1.962,727,1.962,728,1.962,729,1.962,730,1.962,731,3.042,732,3.042,733,1.962,734,1.962,735,1.587,736,1.962,737,1.962,738,1.747,739,1.962,740,4.196,741,3.042,742,6.28,743,4.196,744,3.042,745,4.196,746,4.196,747,4.196,748,4.196,749,4.196,750,4.196,751,4.196,752,3.042,753,4.196,754,3.042,755,3.042,756,2.709,757,1.962,758,3.042,759,1.962,760,1.962,761,1.962,762,1.962,763,1.962,764,3.042,765,1.962,766,3.042,767,1.962,768,2.46,769,1.962,770,1.962,771,1.962,772,1.962,773,1.962,1111,3.547,1112,4.196,1113,4.893,1114,2.289,1115,2.289,1116,2.289,1117,2.289,1118,2.289,1119,2.289,1120,2.289,1121,2.289,1122,2.289,1123,2.289,1124,2.289,1125,2.289,1126,2.289,1127,2.289,1128,2.289,1129,2.289,1130,2.289,1131,2.289]],["title/classes/LoginController.html",[17,2.532,39,0.248]],["body/classes/LoginController.html",[2,0.02,3,0.204,4,0.204,12,0.293,14,0.87,17,4.179,38,0.233,39,0.331,42,0.013,43,0.013,72,0.571,158,0.533,163,1.103,172,2.754,174,2.922,191,2.229,193,1.79,198,1.79,203,1.887,204,2.229,210,1.992,214,0.87,373,3.689,1095,3.724,1132,4.182,1133,5.167,1134,4.877,1135,4.877,1136,4.737,1137,4.877,1138,5.608,1139,4.877,1140,4.182,1141,4.877,1142,4.182,1143,4.877,1144,4.877,1145,4.182,1146,4.877,1147,4.877,1148,4.877]],["title/classes/LoginDto.html",[39,0.248,1136,2.532]],["body/classes/LoginDto.html",[2,0.02,3,0.206,4,0.206,12,0.253,38,0.236,39,0.412,42,0.013,43,0.013,72,0.839,88,1.513,193,1.81,776,4.558,778,3.767,786,4.558,787,3.421,789,4.291,1067,3.421,1136,4.208,1149,4.23,1150,4.558,1151,3.884,1152,4.933,1153,4.23,1154,4.23,1155,4.23,1156,4.933,1157,4.933,1158,4.23,1159,4.23,1160,4.933,1161,4.933,1162,4.23,1163,4.23,1164,4.23]],["title/classes/Organization.html",[39,0.248,396,1.77]],["body/classes/Organization.html",[2,0.02,3,0.132,4,0.132,12,0.253,38,0.151,39,0.306,42,0.008,43,0.008,64,3.089,65,4.017,66,3.343,67,2.551,68,2.943,69,3.343,71,2.712,72,0.616,73,2.898,74,2.943,76,2.327,77,1.392,78,2.327,79,2.187,80,1.745,81,2.327,83,2.898,84,3.108,85,3.648,86,4.017,88,1.531,89,2.898,90,2.263,92,1.74,93,2.485,94,2.485,95,2.714,96,3.256,101,4.017,106,2.943,107,2.665,109,2.327,110,2.327,111,2.187,112,3.128,114,2.22,115,1.947,118,1.63,119,1.74,120,1.63,121,1.74,122,2.187,123,1.63,124,1.947,125,1.74,126,1.63,127,1.74,128,2.485,130,1.842,131,1.63,132,1.74,133,1.492,136,2.709,138,2.709,140,2.709,142,1.74,143,3.658,144,1.363,145,2.485,146,3.131,147,2.412,149,0.898,150,1.63,151,1.63,153,2.412,154,1.045,155,1.045,158,0.627,159,2.709,160,3.444,308,2.709,319,2.709,321,2.709,391,2.773,396,3.06,935,3.444,1165,2.709,1166,4.017,1167,3.159,1168,3.159,1169,3.159,1170,3.159,1171,3.159,1172,3.159,1173,3.159,1174,3.159,1175,3.159,1176,3.159,1177,3.159,1178,3.159,1179,2.709,1180,3.159,1181,3.159]],["title/classes/OrganizationController.html",[29,2.532,39,0.248]],["body/classes/OrganizationController.html",[2,0.02,3,0.158,4,0.158,12,0.278,14,0.911,29,3.541,38,0.18,39,0.256,42,0.01,43,0.01,69,2.813,72,0.442,77,1.367,80,1.975,158,0.729,163,1.254,164,2.813,165,2.635,166,1.873,167,2.813,171,2.231,172,2.644,174,3.236,175,2.407,176,3.017,178,2.231,179,3.017,181,2.051,182,3.238,183,4.378,185,2.231,186,2.985,188,2.08,189,3.187,191,1.725,192,2.476,193,1.385,194,1.831,195,1.461,196,1.948,197,2.333,198,1.385,199,2.08,200,1.831,201,1.63,202,2.08,203,1.461,204,1.725,208,1.831,209,2.08,210,1.542,211,2.407,212,1.461,213,1.021,214,1.19,216,2.231,218,2.231,220,2.08,221,3.238,223,2.231,369,3.943,1182,3.238,1183,3.776,1184,3.776,1185,3.776,1186,3.776,1187,3.776,1188,3.776,1189,3.776,1190,3.776,1191,3.776,1192,3.776,1193,3.776,1194,3.776,1195,3.776,1196,5.106,1197,3.776,1198,3.776]],["title/injectables/OrganizationService.html",[225,0.764,369,2.157]],["body/injectables/OrganizationService.html",[2,0.02,3,0.153,4,0.153,12,0.276,14,0.654,38,0.175,39,0.249,42,0.01,43,0.01,68,2.428,69,2.758,72,0.429,77,0.809,88,1.56,130,1.498,149,1.043,154,1.214,158,0.701,163,1.254,166,2.247,181,1.886,195,1.937,197,2.288,212,1.419,213,0.992,214,1.247,225,1.048,227,2.93,228,3.823,229,2.758,230,2.584,232,4.247,237,2.584,238,3.823,240,4.294,242,2.958,244,2.758,246,1.893,247,2.021,248,2.941,249,2.021,250,1.583,251,1.583,252,1.893,253,1.583,254,2.021,258,1.583,262,1.393,264,3.146,265,3.146,269,3.146,271,3.146,272,3.146,369,2.958,396,2.764,397,2.801,1199,3.146,1200,3.669,1201,3.669,1202,5.007,1203,3.669,1204,3.669,1205,3.669,1206,3.669,1207,3.669,1208,3.669,1209,3.669,1210,3.669,1211,3.669,1212,3.669,1213,3.669,1214,5.007,1215,3.669,1216,3.669,1217,3.669,1218,3.669,1219,3.669]],["title/classes/PasswordDto.html",[39,0.248,1220,2.532]],["body/classes/PasswordDto.html",[2,0.02,3,0.204,4,0.204,12,0.252,38,0.234,39,0.41,42,0.013,43,0.013,72,0.838,88,1.509,193,1.796,776,4.543,786,4.543,787,3.395,789,4.39,1067,4.189,1151,3.87,1153,5.179,1154,5.179,1155,5.179,1158,4.198,1159,4.198,1162,5.179,1163,5.179,1164,5.179,1220,4.189,1221,4.198,1222,6.551,1223,4.896,1224,4.896]],["title/classes/Role.html",[39,0.248,103,1.77]],["body/classes/Role.html",[2,0.02,3,0.132,4,0.132,12,0.264,38,0.151,39,0.307,42,0.008,43,0.008,62,3.134,64,3.091,66,3.346,67,2.555,68,2.945,70,2.88,71,2.714,72,0.617,73,2.902,74,2.945,75,3.872,76,2.331,77,1.393,78,2.331,79,2.191,80,1.748,81,2.331,88,1.513,89,3.165,90,2.264,92,1.744,93,2.489,94,2.489,95,2.718,96,3.354,98,3.983,99,2.625,103,2.191,104,3.45,106,2.945,107,2.67,108,4.022,109,2.331,110,2.331,111,2.191,114,2.222,115,1.95,118,1.634,119,1.744,120,1.634,121,1.744,122,2.191,123,1.634,124,1.95,125,1.744,126,1.634,127,1.744,128,2.489,130,1.845,131,1.634,132,1.744,133,1.048,142,1.744,143,2.88,144,1.367,145,2.489,146,3.259,148,2.418,149,0.9,150,1.634,151,1.634,154,1.048,155,1.048,156,3.45,158,0.494,391,2.776,1166,4.022,1179,2.715,1225,2.715,1226,4.517,1227,2.715,1228,3.167,1229,3.167,1230,3.167,1231,3.167,1232,3.167,1233,3.167,1234,3.167,1235,3.167,1236,3.167,1237,2.715,1238,3.167,1239,3.874,1240,3.167,1241,3.167,1242,2.715,1243,3.167,1244,2.715,1245,3.167,1246,2.418]],["title/classes/RoleController.html",[31,2.532,39,0.248]],["body/classes/RoleController.html",[2,0.02,3,0.158,4,0.158,12,0.279,14,0.912,31,3.544,38,0.277,39,0.256,42,0.01,43,0.01,72,0.443,77,1.368,80,1.977,158,0.73,163,1.254,164,2.816,165,2.637,166,1.875,167,2.816,171,2.234,172,2.646,174,3.007,175,2.41,176,3.02,178,2.234,179,3.02,181,2.209,185,2.234,186,2.987,188,2.083,189,3.19,191,1.728,192,2.478,193,1.387,194,1.834,195,1.463,196,1.951,197,2.336,198,1.387,199,2.083,200,1.834,201,1.632,202,2.083,203,1.463,204,1.728,208,1.834,209,2.083,210,1.544,211,2.41,212,1.463,213,1.022,214,1.191,216,2.234,218,2.234,220,2.083,223,2.234,338,3.903,339,2.887,370,3.945,595,3.242,1247,3.242,1248,3.781,1249,3.781,1250,3.781,1251,3.781,1252,3.781,1253,3.781,1254,3.781,1255,3.781,1256,3.781,1257,3.781,1258,3.781,1259,3.781,1260,5.111,1261,5.111,1262,3.781]],["title/injectables/RoleService.html",[225,0.764,370,2.157]],["body/injectables/RoleService.html",[2,0.02,3,0.161,4,0.161,12,0.286,14,0.688,38,0.184,39,0.352,42,0.01,43,0.01,62,1.992,66,2.126,72,0.452,77,1.29,88,1.513,103,2.837,108,2.947,144,1.666,149,1.097,154,1.277,158,0.639,163,1.231,166,1.902,181,1.715,195,2.005,214,1.043,225,1.085,227,2.981,229,2.855,230,2.674,237,1.992,242,3.062,244,2.855,246,1.992,247,2.126,248,1.992,249,2.126,250,1.666,251,1.666,252,1.992,253,1.666,254,2.126,258,1.666,262,1.266,294,3.987,370,3.062,398,3.31,613,4.981,621,2.677,624,2.677,629,3.594,638,2.947,639,3.957,640,2.947,641,3.31,649,2.947,650,2.947,651,2.947,653,2.947,1263,3.31,1264,5.183,1265,3.86,1266,3.86,1267,5.183,1268,5.183,1269,3.86,1270,3.86,1271,3.86,1272,3.86,1273,3.86,1274,3.86,1275,3.86,1276,3.86,1277,3.86,1278,3.86,1279,3.86]],["title/modules/SSRModule.html",[0,1.576,55,2.327]],["body/modules/SSRModule.html",[0,2.835,2,0.02,3,0.235,4,0.235,12,0.274,14,1.004,37,5.016,38,0.269,39,0.382,42,0.015,43,0.015,55,4.187,957,4.823,1280,5.63,1281,5.63]],["title/classes/SearchController.html",[35,2.532,39,0.248]],["body/classes/SearchController.html",[2,0.02,3,0.206,4,0.206,12,0.294,14,0.881,35,4.213,38,0.236,39,0.335,42,0.013,43,0.013,72,0.579,158,0.54,163,1.11,172,3.006,181,2.01,191,2.259,192,2.946,193,1.813,194,2.397,198,1.813,200,2.397,201,2.133,203,1.912,204,2.259,208,2.397,210,2.018,214,0.881,371,4.238,556,3.59,1282,4.238,1283,4.942,1284,4.942,1285,4.238,1286,4.942,1287,4.942,1288,4.942,1289,4.942,1290,4.942,1291,4.942]],["title/injectables/SearchService.html",[225,0.764,371,2.157]],["body/injectables/SearchService.html",[2,0.02,3,0.205,4,0.205,12,0.274,14,0.878,38,0.235,39,0.334,42,0.013,43,0.013,155,1.629,158,0.538,163,1.108,181,1.629,198,1.807,213,1.331,214,0.878,225,1.269,262,1.203,307,2.25,371,3.581,393,3.414,489,2.712,554,2.909,555,3.76,556,3.88,577,3.76,578,4.222,621,3.414,623,4.628,624,4.554,625,3.138,629,4.203,1033,4.628,1285,5.198,1292,4.222,1293,4.924,1294,4.924,1295,4.924,1296,4.924,1297,4.924,1298,4.924,1299,4.924,1300,4.924,1301,4.924,1302,4.924]],["title/injectables/Seed.html",[56,2.327,225,0.764]],["body/injectables/Seed.html",[2,0.02,3,0.118,4,0.118,12,0.292,14,0.506,15,1.225,38,0.136,39,0.192,42,0.011,43,0.007,56,2.66,62,1.464,67,1.376,68,1.376,70,2.66,72,0.332,75,3.479,88,0.626,90,0.988,103,2.023,106,1.376,133,1.381,149,0.806,152,2.433,155,2.134,163,1.21,164,2.299,198,1.041,214,1.313,225,0.874,253,1.225,258,1.225,262,1.722,301,1.159,307,1.297,314,2.433,391,1.907,394,1.563,396,2.023,446,3.006,489,3.203,490,2.433,491,2.433,492,4.679,493,5.53,494,4.679,554,1.676,556,1.676,577,3.186,618,1.676,768,1.967,818,3.186,922,4.679,923,2.433,924,4.643,928,1.967,933,2.433,935,2.166,947,2.433,949,2.433,950,2.433,951,5.644,952,2.433,953,2.433,954,2.433,955,2.433,1150,1.967,1151,1.676,1166,2.166,1242,2.433,1246,3.779,1303,2.433,1304,5.457,1305,5.457,1306,5.457,1307,5.457,1308,5.815,1309,2.837,1310,2.837,1311,2.837,1312,2.837,1313,2.837,1314,2.837,1315,2.837,1316,2.166,1317,2.837,1318,2.837,1319,2.837,1320,2.837,1321,2.433,1322,2.837,1323,2.837,1324,2.837,1325,2.837,1326,2.837,1327,2.837,1328,2.837,1329,2.837,1330,5.815,1331,2.837,1332,2.837,1333,2.837,1334,2.837,1335,2.837,1336,2.837,1337,4.173,1338,4.949,1339,2.837,1340,2.837,1341,2.837,1342,2.433,1343,2.433,1344,2.433,1345,2.837,1346,2.837,1347,2.837,1348,2.837,1349,2.837,1350,2.837,1351,2.837,1352,2.837,1353,2.433,1354,2.837,1355,2.837,1356,4.173,1357,4.167,1358,4.173,1359,2.837,1360,2.433,1361,2.433,1362,2.837,1363,2.433,1364,2.837,1365,2.837,1366,2.837,1367,2.837,1368,2.837,1369,2.837,1370,2.837,1371,2.837,1372,2.837,1373,2.837,1374,2.837,1375,2.837,1376,2.837,1377,2.837,1378,2.837,1379,2.837,1380,4.173,1381,2.837,1382,2.837,1383,2.837,1384,2.837,1385,2.837,1386,2.837,1387,2.837,1388,2.837,1389,2.837,1390,2.837,1391,2.837,1392,2.837,1393,2.837]],["title/classes/Setting.html",[39,0.248,394,2.011]],["body/classes/Setting.html",[2,0.02,3,0.134,4,0.134,12,0.241,38,0.153,39,0.309,42,0.008,43,0.008,64,3.101,67,2.574,71,2.723,72,0.621,73,2.924,74,2.212,75,3.383,76,2.354,77,1.399,78,2.354,79,2.212,80,1.765,81,2.354,83,3.495,88,1.399,89,1.768,90,1.849,92,1.768,93,2.513,94,2.513,95,2.354,96,2.982,98,3.164,99,2.085,106,2.961,107,3.748,109,3.273,110,2.354,111,2.212,114,1.765,118,1.656,119,1.768,120,1.656,121,1.768,122,2.212,123,1.656,124,1.969,125,1.768,126,1.656,127,1.768,128,2.513,130,1.863,131,1.656,132,1.768,133,1.062,142,1.768,144,1.385,145,2.513,146,2.738,149,0.912,150,1.656,151,1.656,154,1.062,155,1.062,158,0.351,305,3.164,394,3.184,469,3.484,500,3.684,820,4.956,1394,2.752,1395,3.21,1396,4.562,1397,4.562,1398,4.562,1399,4.562,1400,4.562,1401,4.562,1402,4.562,1403,4.562,1404,4.562,1405,4.562,1406,4.562,1407,4.562,1408,3.912,1409,4.562,1410,4.562,1411,4.562,1412,5.78,1413,4.562,1414,4.562,1415,4.562,1416,3.21,1417,3.21,1418,3.21,1419,3.21]],["title/classes/SettingController.html",[25,2.532,39,0.248]],["body/classes/SettingController.html",[2,0.02,3,0.196,4,0.196,12,0.296,14,1.05,25,4.084,38,0.225,39,0.319,42,0.012,43,0.012,72,0.55,158,0.644,163,1.195,164,3.714,167,3.244,174,2.856,188,2.589,189,3.543,191,2.148,192,2.856,193,1.725,194,2.279,198,1.725,199,2.589,200,2.279,201,2.029,202,2.589,203,1.818,204,2.148,208,2.279,209,2.589,210,1.919,214,1.05,220,2.589,372,3.902,425,4.03,444,4.03,1420,4.03,1421,4.7,1422,4.7,1423,4.7,1424,4.7,1425,4.7,1426,4.7,1427,4.7]],["title/injectables/SettingService.html",[225,0.764,372,2.011]],["body/injectables/SettingService.html",[2,0.02,3,0.179,4,0.179,12,0.282,14,0.766,38,0.205,39,0.291,42,0.011,43,0.011,72,0.503,75,3.545,77,0.947,88,1.553,90,1.937,130,1.754,149,1.221,154,1.421,158,0.608,163,1.228,166,2.04,181,1.421,214,0.992,225,1.164,227,3.087,229,3.063,230,2.869,237,2.216,244,3.063,246,2.216,247,2.366,248,2.216,249,2.366,252,2.216,253,1.854,254,2.366,256,1.963,258,1.854,262,1.049,294,4.157,372,3.063,394,3.063,395,3.683,1428,3.683,1429,5.561,1430,4.295,1431,4.295,1432,5.561,1433,5.561,1434,4.295,1435,4.295,1436,4.295,1437,4.295,1438,4.295,1439,4.295,1440,4.295]],["title/classes/StatusTask.html",[39,0.248,404,2.532]],["body/classes/StatusTask.html",[2,0.02,3,0.268,4,0.126,12,0.283,15,1.305,38,0.144,39,0.205,42,0.008,43,0.008,66,1.665,77,1.316,133,2.3,154,1,155,1.86,158,0.478,163,1.146,198,1.883,213,0.817,214,1.003,256,1.997,262,1.457,283,2.407,387,2.592,388,2.592,404,3.03,467,2.255,489,1.665,498,2.096,554,1.786,555,2.308,556,1.786,576,3.747,589,2.592,590,3.747,712,1.786,714,3.524,717,3.524,768,3.899,795,2.308,886,2.592,895,5.012,928,2.096,1012,2.308,1105,2.592,1316,2.308,1357,3.337,1360,4.821,1361,4.821,1363,4.821,1441,2.592,1442,5.132,1443,5.132,1444,5.623,1445,5.623,1446,5.623,1447,4.37,1448,5.132,1449,5.623,1450,3.023,1451,3.023,1452,3.023,1453,3.023,1454,4.37,1455,4.37,1456,3.023,1457,3.023,1458,3.023,1459,3.023,1460,3.023,1461,3.023,1462,2.308,1463,3.023,1464,3.023,1465,3.023,1466,3.023,1467,3.023,1468,3.023,1469,3.023,1470,3.023,1471,4.37,1472,4.37,1473,3.023,1474,3.023,1475,3.023,1476,4.37,1477,4.37,1478,3.023,1479,3.023,1480,3.023,1481,4.37,1482,3.023,1483,3.023,1484,3.023,1485,3.023,1486,3.023,1487,4.401,1488,4.37,1489,3.023,1490,4.37,1491,3.023,1492,2.592,1493,5.965,1494,3.023,1495,3.023,1496,5.132,1497,5.132,1498,5.132,1499,3.023,1500,4.37,1501,3.023,1502,3.023,1503,3.023,1504,3.023,1505,3.023,1506,3.747,1507,3.023,1508,3.023,1509,3.023,1510,3.023,1511,3.023,1512,2.592,1513,2.592]],["title/classes/StorageController.html",[21,2.532,39,0.248]],["body/classes/StorageController.html",[2,0.02,3,0.163,4,0.163,12,0.301,14,0.696,15,1.684,21,3.619,38,0.186,39,0.265,42,0.01,43,0.01,68,2.531,72,0.457,90,1.359,99,2.385,115,1.684,130,2.565,133,1.946,163,0.992,172,2.385,191,1.783,192,2.531,193,1.431,194,1.892,197,2.87,200,1.892,201,1.684,203,1.509,204,1.783,208,1.892,210,1.593,212,2.43,213,1.698,262,1.646,283,2.875,368,3.98,447,3.345,449,3.345,522,2.305,551,3.327,571,2.979,712,2.305,714,2.305,717,3.084,805,4.475,876,3.345,928,4.079,937,4.54,969,4.491,1088,3.345,1316,2.979,1321,3.345,1492,5.385,1514,3.345,1515,4.475,1516,3.901,1517,3.901,1518,3.901,1519,3.901,1520,3.901,1521,5.219,1522,3.901,1523,5.219,1524,3.901,1525,5.219,1526,5.219,1527,3.345,1528,3.901,1529,3.901,1530,3.901,1531,3.901,1532,3.901,1533,3.901,1534,3.345,1535,3.901,1536,3.901,1537,3.901,1538,4.475,1539,3.901,1540,3.901,1541,3.901,1542,3.901,1543,3.901,1544,3.901,1545,3.901,1546,3.901,1547,3.901,1548,3.901,1549,3.901,1550,5.219,1551,3.901,1552,3.901,1553,3.901,1554,3.901,1555,3.901,1556,3.901,1557,3.901,1558,3.901,1559,3.901,1560,3.901]],["title/classes/UpdateContentDto.html",[39,0.248,788,2.532]],["body/classes/UpdateContentDto.html",[2,0.02,3,0.169,4,0.169,12,0.223,38,0.256,39,0.406,42,0.011,43,0.011,72,0.896,74,3.09,83,3.511,88,1.652,114,2.634,193,1.485,446,3.511,470,4.419,472,4.419,473,4.419,474,4.419,476,4.419,774,2.806,775,3.09,776,5.25,778,4.084,786,4.595,787,2.806,788,3.709,789,3.765,1561,4.047,1562,4.047,1563,4.047,1564,4.047,1565,4.047,1566,4.047,1567,4.047,1568,4.047]],["title/classes/User.html",[39,0.248,391,1.668]],["body/classes/User.html",[2,0.02,3,0.129,4,0.129,12,0.269,38,0.148,39,0.302,42,0.008,43,0.008,64,3.074,67,2.522,70,3.315,71,2.458,76,2.293,77,0.98,78,2.293,79,2.155,80,1.72,81,2.293,88,1.554,89,3.132,90,2.343,92,1.705,93,2.449,94,2.449,95,2.933,96,3.408,98,3.082,99,2.377,103,3.311,104,2.363,106,2.522,114,1.72,118,1.597,119,1.705,120,1.597,121,1.705,122,2.155,123,1.597,124,1.918,125,1.705,126,1.597,127,1.705,128,2.449,130,1.815,131,1.597,132,1.705,133,1.024,142,1.705,143,3.315,144,1.336,145,2.449,146,3.331,148,2.363,149,0.88,154,1.024,155,1.024,156,2.363,158,0.486,163,0.878,214,0.793,262,0.756,284,2.654,285,3.811,391,2.031,396,2.757,479,5.536,486,2.654,552,2.654,564,2.654,1150,3.607,1151,3.073,1226,4.46,1227,2.654,1237,2.654,1239,3.811,1244,2.654,1246,2.363,1342,2.654,1343,4.46,1344,4.46,1353,2.654,1569,2.654,1570,5.374,1571,4.874,1572,5.201,1573,3.095,1574,3.095,1575,3.095,1576,3.095,1577,3.095,1578,3.095,1579,3.095,1580,3.095,1581,3.095,1582,3.095,1583,3.095,1584,3.095,1585,3.095,1586,3.095,1587,3.095,1588,3.095,1589,2.654,1590,2.654,1591,3.095,1592,3.095,1593,3.095,1594,3.095,1595,3.095,1596,3.095,1597,3.095,1598,3.095,1599,3.095,1600,3.095,1601,3.811,1602,2.654,1603,3.095,1604,3.095]],["title/classes/UserController.html",[19,2.532,39,0.248]],["body/classes/UserController.html",[2,0.02,3,0.149,4,0.149,12,0.274,14,0.639,19,3.416,38,0.171,39,0.243,42,0.009,43,0.009,72,0.419,80,1.906,158,0.736,163,1.258,165,2.542,166,1.808,167,2.714,171,2.117,172,2.573,174,3.324,176,2.117,178,2.117,179,2.911,181,2.006,185,2.117,186,2.905,188,1.974,189,3.102,191,1.637,192,2.389,193,1.315,194,1.737,195,1.386,196,1.848,198,1.808,199,1.974,200,1.737,201,1.546,202,1.974,203,1.386,204,1.637,208,1.737,209,2.714,210,1.463,214,1.2,216,2.117,218,2.117,220,1.974,223,2.117,373,3.389,391,2.771,966,4.224,1095,2.736,1138,4.828,1140,3.072,1142,3.072,1145,3.072,1220,4.205,1605,3.072,1606,4.224,1607,4.927,1608,4.927,1609,3.583,1610,3.583,1611,3.583,1612,3.583,1613,3.583,1614,3.583,1615,3.583,1616,3.583,1617,3.583,1618,3.583,1619,3.583,1620,3.583,1621,3.583,1622,3.583,1623,2.736,1624,3.583,1625,3.583,1626,3.583,1627,3.583,1628,3.583,1629,3.583,1630,3.583,1631,3.583,1632,3.583,1633,3.583,1634,3.583,1635,3.583,1636,4.927,1637,3.583]],["title/injectables/UserService.html",[225,0.764,373,1.884]],["body/injectables/UserService.html",[2,0.02,3,0.126,4,0.126,12,0.279,14,0.537,38,0.144,39,0.295,42,0.008,43,0.008,66,1.657,70,2.776,72,0.51,77,1.313,88,1.313,103,1.459,115,1.299,144,1.299,149,0.855,154,0.995,158,0.7,163,1.23,166,1.598,174,2.482,181,1.441,195,1.685,197,2.721,212,2.171,213,1.517,214,1.26,225,0.912,227,2.721,229,2.399,230,2.895,237,1.552,242,2.573,244,2.399,246,2.641,247,1.657,248,2.247,249,1.657,250,1.299,251,1.299,252,1.552,253,1.299,254,1.657,256,1.375,258,1.88,262,1.516,294,3.577,373,2.247,380,2.58,391,2.837,392,2.297,396,1.459,613,4.888,621,2.086,623,3.325,624,3.55,625,1.918,626,2.58,629,3.02,633,2.58,635,2.58,638,2.297,639,3.325,640,2.297,643,2.58,644,2.297,645,2.58,647,2.58,648,2.58,649,2.297,650,2.297,651,2.297,653,3.325,1133,3.734,1150,3.02,1151,3.024,1571,4.389,1589,2.58,1590,2.58,1601,3.734,1602,2.58,1606,3.734,1638,2.58,1639,3.009,1640,6.207,1641,5.119,1642,3.009,1643,4.355,1644,3.009,1645,3.009,1646,4.355,1647,3.009,1648,3.009,1649,3.009,1650,3.009,1651,3.009,1652,3.009,1653,3.009,1654,3.009,1655,3.009,1656,4.355,1657,3.009,1658,4.355,1659,3.009,1660,3.009,1661,3.009,1662,3.009,1663,3.009,1664,3.009,1665,5.119,1666,3.009,1667,5.119,1668,3.009,1669,3.009,1670,3.009,1671,4.355,1672,3.009,1673,3.009]],["title/coverage.html",[1674,4.991]],["body/coverage.html",[0,1.428,2,0.02,15,2.329,17,2.294,19,2.294,21,2.294,23,2.294,25,2.294,27,2.294,29,2.294,31,2.294,33,2.294,35,2.294,39,0.51,42,0.009,43,0.009,48,2.109,56,2.109,62,1.707,63,2.837,64,1.512,103,1.604,109,1.707,111,1.604,115,3.322,162,2.837,169,1.955,203,1.28,213,0.894,225,1.48,226,2.837,227,1.512,274,2.837,283,1.822,292,2.837,301,1.351,302,2.837,307,1.512,324,2.837,326,1.707,342,2.837,366,1.955,367,1.822,368,1.955,369,1.955,370,1.955,371,1.955,372,1.822,373,1.707,374,2.109,391,1.512,394,1.822,396,1.604,404,2.294,420,2.837,468,4.473,500,2.109,554,1.955,557,2.526,558,2.526,591,2.837,608,2.837,618,1.955,660,2.294,661,3.44,774,2.294,775,3.559,788,2.294,790,2.526,873,2.526,874,2.837,919,2.837,956,2.294,957,2.294,958,3.559,1009,2.526,1093,2.837,1132,2.837,1136,2.294,1149,2.837,1165,2.837,1182,2.837,1199,2.837,1220,2.294,1221,2.837,1225,2.837,1247,2.837,1263,2.837,1282,2.837,1292,2.837,1303,2.837,1394,2.837,1420,2.837,1428,2.837,1441,2.837,1462,2.526,1514,2.837,1569,2.837,1605,2.837,1623,2.526,1638,2.837,1675,6.407,1676,5.396,1677,6.407,1678,4.661,1679,6.407,1680,3.559,1681,6.176,1682,7.256,1683,7.003,1684,4.661,1685,2.837,1686,4.661,1687,6.176,1688,3.308,1689,5.396,1690,3.308,1691,3.308,1692,2.837,1693,2.837,1694,4.661,1695,3.996,1696,2.837,1697,3.308,1698,2.837,1699,4.12,1700,2.837,1701,3.308,1702,3.308]],["title/miscellaneous/enumerations.html",[1703,2.325,1704,4.393]],["body/miscellaneous/enumerations.html",[2,0.02,3,0.261,12,0.261,42,0.013,43,0.013,122,3.035,150,3.229,661,3.308,677,4.779,678,4.779,679,4.34,680,4.779,681,4.779,682,4.34,683,4.779,790,3.963,808,4.45,809,4.45,1515,5.367,1527,5.367,1570,5.367,1705,5.19,1706,6.721,1707,4.45,1708,5.19,1709,5.19,1710,5.19,1711,5.19,1712,5.19]],["title/miscellaneous/functions.html",[1703,2.325,1713,4.393]],["body/miscellaneous/functions.html",[2,0.02,15,2.705,42,0.013,43,0.013,48,4.288,114,2.424,203,2.424,446,2.865,557,4.785,558,4.785,574,4.459,911,4.459,937,4.346,969,3.971,1680,3.971,1685,4.459,1695,4.459,1699,3.971,1714,4.459,1715,4.459,1716,6.267,1717,5.2,1718,5.2,1719,4.459,1720,5.2,1721,5.2,1722,6.267,1723,5.2,1724,6.267]],["title/index.html",[489,1.677,1725,2.611,1726,2.611]],["body/index.html",[2,0.02,42,0.013,43,0.013,203,1.992,560,4.415,735,4.32,806,4.415,1727,5.149,1728,5.149,1729,5.149,1730,5.149,1731,5.149,1732,5.149,1733,5.149,1734,5.149,1735,5.149,1736,6.698,1737,5.149,1738,5.149,1739,5.149,1740,5.149,1741,6.229,1742,5.149,1743,5.149,1744,5.149,1745,5.149,1746,4.415,1747,5.149,1748,4.415,1749,5.149]],["title/license.html",[1725,2.611,1726,2.611,1750,2.611]],["body/license.html",[2,0.017,42,0.013,43,0.013,924,3.767,1408,5.636,1487,4.23,1534,4.23,1538,4.23,1748,4.23,1750,4.23,1751,4.933,1752,4.933,1753,4.933,1754,4.933,1755,6.069,1756,4.933,1757,4.933,1758,4.933,1759,4.933,1760,4.933,1761,4.933,1762,6.069,1763,7.392,1764,4.933,1765,4.933,1766,4.933,1767,6.573,1768,4.933,1769,6.069,1770,4.933,1771,4.933,1772,6.069,1773,4.933,1774,4.933,1775,4.933,1776,4.933,1777,4.933,1778,4.933,1779,4.933,1780,6.069,1781,4.933,1782,4.933,1783,4.933,1784,4.933,1785,4.933,1786,4.933,1787,4.933,1788,6.069,1789,6.069,1790,4.933,1791,4.933,1792,4.933,1793,4.933,1794,4.933,1795,4.933,1796,4.933,1797,4.933,1798,4.933,1799,4.933,1800,4.933,1801,4.933,1802,4.933,1803,4.933,1804,4.933,1805,4.933,1806,4.933,1807,4.933,1808,4.933,1809,4.933,1810,4.933,1811,4.933,1812,4.933,1813,4.933,1814,4.933,1815,4.933,1816,4.933,1817,4.933]],["title/modules.html",[1818,4.991]],["body/modules.html",[1,3.709,2,0.02,42,0.015,43,0.015,44,4.035,54,3.709,55,3.709,436,5.741]],["title/overview.html",[1819,4.991]],["body/overview.html",[0,1.836,1,3.912,2,0.02,42,0.011,43,0.011,44,5.037,45,3.247,46,3.247,47,3.247,48,2.711,49,3.247,50,3.247,51,3.647,52,3.647,53,3.647,54,4.906,55,3.912,56,3.912,169,4.151,326,3.625,363,3.647,364,3.647,365,3.647,366,4.151,367,3.871,368,4.151,369,4.151,370,4.151,371,4.151,372,3.871,373,3.625,374,3.912,450,3.247,956,2.949,1033,3.247,1067,2.949,1820,4.253]],["title/miscellaneous/variables.html",[1703,2.325,1821,4.393]],["body/miscellaneous/variables.html",[0,1.909,2,0.02,4,0.185,15,2.236,42,0.008,43,0.008,71,2.115,74,2.144,77,0.678,79,1.49,83,2.436,84,2.613,106,2.512,109,2.282,110,1.585,111,2.144,112,2.131,115,2.236,133,1.463,155,1.017,158,0.483,196,2.282,213,1.195,283,2.436,301,1.255,385,2.131,416,2.346,443,2.346,446,2.436,467,2.923,468,2.346,469,3.377,470,3.066,472,3.066,473,2.131,474,3.066,475,3.377,476,2.131,482,2.635,483,2.635,489,2.436,498,2.131,500,2.819,508,6.08,509,4.584,510,5.034,521,3.792,522,2.613,523,2.819,524,2.819,554,3.061,561,3.792,562,2.635,625,1.959,661,1.959,679,2.131,698,2.131,735,3.592,738,2.346,795,2.346,879,4.858,891,2.635,895,2.346,958,2.346,1007,2.635,1009,3.377,1010,2.635,1011,2.635,1012,3.955,1013,2.635,1014,2.635,1015,2.635,1016,2.635,1017,3.792,1018,2.635,1019,2.635,1020,2.635,1076,3.792,1112,3.792,1151,2.613,1357,2.346,1462,3.955,1506,2.635,1512,2.635,1513,2.635,1623,3.377,1680,2.346,1692,2.635,1693,3.792,1696,2.635,1698,2.635,1699,2.346,1700,3.792,1707,2.635,1714,2.635,1715,3.792,1719,2.635,1746,2.635,1822,5.18,1823,3.073,1824,3.073,1825,3.073,1826,3.073,1827,5.666,1828,3.073,1829,3.073,1830,3.073,1831,3.073,1832,3.073,1833,3.073,1834,3.073,1835,3.073,1836,3.073,1837,3.073,1838,3.073,1839,3.073,1840,3.073,1841,3.073,1842,3.073,1843,5.18,1844,3.073,1845,4.422,1846,3.073,1847,3.073,1848,3.073,1849,3.073,1850,3.073,1851,4.422,1852,3.073,1853,3.073,1854,3.073,1855,3.073,1856,4.422,1857,3.073,1858,3.073,1859,3.073,1860,3.073,1861,3.073,1862,3.073,1863,3.073,1864,3.073,1865,3.073,1866,3.073,1867,3.073,1868,6.252,1869,3.073,1870,3.073,1871,3.073,1872,3.073,1873,3.073,1874,3.073,1875,3.073,1876,3.073,1877,3.073,1878,3.073,1879,3.073,1880,3.073]]],"invertedIndex":[["",{"_index":2,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"modules/SSRModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":115,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"controllers/IndexController.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/StorageController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0.0",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1690,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1689,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1686,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1691,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1697,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1684,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":1688,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1678,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1694,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1687,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1679,"title":{},"body":{"coverage.html":{}}}],["0o1i",{"_index":453,"title":{},"body":{"injectables/CommonService.html":{}}}],["0oo1i1k",{"_index":452,"title":{},"body":{"injectables/CommonService.html":{}}}],["1",{"_index":1033,"title":{},"body":{"controllers/IndexController.html":{},"injectables/SearchService.html":{},"overview.html":{}}}],["10",{"_index":625,"title":{},"body":{"injectables/ContentService.html":{},"controllers/IndexController.html":{},"injectables/SearchService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":1076,"title":{},"body":{"controllers/IndexController.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":1067,"title":{},"body":{"controllers/IndexController.html":{},"classes/LoginDto.html":{},"classes/PasswordDto.html":{},"overview.html":{}}}],["120",{"_index":575,"title":{},"body":{"classes/Content.html":{}}}],["123456",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12345678",{"_index":1342,"title":{},"body":{"injectables/Seed.html":{},"classes/User.html":{}}}],["127.0.0.1",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["127.0.0.1:9200",{"_index":1873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12位'})@isnotempty({message",{"_index":1155,"title":{},"body":{"classes/LoginDto.html":{},"classes/PasswordDto.html":{}}}],["2",{"_index":756,"title":{},"body":{"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"classes/Logger.html":{}}}],["20",{"_index":1073,"title":{},"body":{"controllers/IndexController.html":{}}}],["2019",{"_index":1752,"title":{},"body":{"license.html":{}}}],["28",{"_index":1820,"title":{},"body":{"overview.html":{}}}],["3",{"_index":698,"title":{},"body":{"classes/ContextTrace.html":{},"controllers/IndexController.html":{},"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["30",{"_index":1509,"title":{},"body":{"classes/StatusTask.html":{}}}],["3000",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["360000",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":450,"title":{},"body":{"injectables/CommonService.html":{},"controllers/IndexController.html":{},"overview.html":{}}}],["5",{"_index":1027,"title":{},"body":{"controllers/IndexController.html":{}}}],["5432",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60*2",{"_index":461,"title":{},"body":{"injectables/CommonService.html":{}}}],["6379",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["720",{"_index":501,"title":{},"body":{"classes/Content.html":{}}}],["8",{"_index":1163,"title":{},"body":{"classes/LoginDto.html":{},"classes/PasswordDto.html":{}}}],["8').send",{"_index":904,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["8位'})@maxlength(12",{"_index":1154,"title":{},"body":{"classes/LoginDto.html":{},"classes/PasswordDto.html":{}}}],["9000",{"_index":1872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":250,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"controllers/IndexController.html":{},"classes/Logger.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["_.isarray(obj",{"_index":840,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["_.isempty(content.category",{"_index":657,"title":{},"body":{"injectables/ContentService.html":{}}}],["_.isempty(payload.category",{"_index":359,"title":{},"body":{"injectables/CategoryService.html":{}}}],["_.isempty(this.publish_at",{"_index":569,"title":{},"body":{"classes/Content.html":{}}}],["_.isstring(content.category",{"_index":360,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ContentService.html":{}}}],["_.upperfirst(_.camelcase(basename",{"_index":772,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["above",{"_index":1787,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":286,"title":{},"body":{"classes/Base.html":{},"classes/BaseService.html":{}}}],["account",{"_index":1150,"title":{},"body":{"classes/LoginDto.html":{},"injectables/Seed.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["action",{"_index":1538,"title":{},"body":{"classes/StorageController.html":{},"license.html":{}}}],["activity_list",{"_index":1024,"title":{},"body":{"controllers/IndexController.html":{}}}],["add",{"_index":1495,"title":{},"body":{"classes/StatusTask.html":{}}}],["adddir",{"_index":1499,"title":{},"body":{"classes/StatusTask.html":{}}}],["addlink",{"_index":912,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["address",{"_index":469,"title":{},"body":{"classes/Content.html":{},"classes/Setting.html":{},"miscellaneous/variables.html":{}}}],["afterinsert",{"_index":477,"title":{},"body":{"classes/Content.html":{}}}],["afterupdate",{"_index":478,"title":{},"body":{"classes/Content.html":{}}}],["analyzer",{"_index":492,"title":{},"body":{"classes/Content.html":{},"injectables/Seed.html":{}}}],["and/or",{"_index":1778,"title":{},"body":{"license.html":{}}}],["announcement",{"_index":959,"title":{},"body":{"controllers/IndexController.html":{}}}],["announcement(@req",{"_index":1072,"title":{},"body":{"controllers/IndexController.html":{}}}],["announcement(req",{"_index":965,"title":{},"body":{"controllers/IndexController.html":{}}}],["api",{"_index":203,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/LoginController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["api('authority",{"_index":206,"title":{},"body":{"classes/AuthorityController.html":{}}}],["api('category",{"_index":334,"title":{},"body":{"classes/CategoryController.html":{}}}],["api('content",{"_index":602,"title":{},"body":{"classes/ContentController.html":{}}}],["api('login",{"_index":1143,"title":{},"body":{"classes/LoginController.html":{}}}],["api('organization",{"_index":1192,"title":{},"body":{"classes/OrganizationController.html":{}}}],["api('role",{"_index":1257,"title":{},"body":{"classes/RoleController.html":{}}}],["api('search",{"_index":1288,"title":{},"body":{"classes/SearchController.html":{}}}],["api('setting",{"_index":1425,"title":{},"body":{"classes/SettingController.html":{}}}],["api('storage",{"_index":1530,"title":{},"body":{"classes/StorageController.html":{}}}],["api('user",{"_index":1625,"title":{},"body":{"classes/UserController.html":{}}}],["api(prefix",{"_index":1718,"title":{},"body":{"miscellaneous/functions.html":{}}}],["api/api.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["apibearerauth",{"_index":192,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{}}}],["apiconsumes",{"_index":1524,"title":{},"body":{"classes/StorageController.html":{}}}],["apiconsumes('multipart/form",{"_index":1532,"title":{},"body":{"classes/StorageController.html":{}}}],["apiimplicitfile",{"_index":1525,"title":{},"body":{"classes/StorageController.html":{}}}],["apimodelproperty",{"_index":776,"title":{},"body":{"classes/CreateContentDto.html":{},"classes/LoginDto.html":{},"classes/PasswordDto.html":{},"classes/UpdateContentDto.html":{}}}],["apimodelproperty()@isnotempty({message",{"_index":778,"title":{},"body":{"classes/CreateContentDto.html":{},"classes/LoginDto.html":{},"classes/UpdateContentDto.html":{}}}],["apimodelproperty()@minlength(8",{"_index":1153,"title":{},"body":{"classes/LoginDto.html":{},"classes/PasswordDto.html":{}}}],["apimodule",{"_index":1,"title":{"modules/ApiModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apiusetags",{"_index":191,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/LoginController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{}}}],["apiusetags('authority",{"_index":207,"title":{},"body":{"classes/AuthorityController.html":{}}}],["apiusetags('category",{"_index":335,"title":{},"body":{"classes/CategoryController.html":{}}}],["apiusetags('content",{"_index":603,"title":{},"body":{"classes/ContentController.html":{}}}],["apiusetags('login",{"_index":1144,"title":{},"body":{"classes/LoginController.html":{}}}],["apiusetags('organization",{"_index":1193,"title":{},"body":{"classes/OrganizationController.html":{}}}],["apiusetags('role",{"_index":1258,"title":{},"body":{"classes/RoleController.html":{}}}],["apiusetags('search",{"_index":1289,"title":{},"body":{"classes/SearchController.html":{}}}],["apiusetags('setting",{"_index":1426,"title":{},"body":{"classes/SettingController.html":{}}}],["apiusetags('storage",{"_index":1531,"title":{},"body":{"classes/StorageController.html":{}}}],["apiusetags('user",{"_index":1626,"title":{},"body":{"classes/UserController.html":{}}}],["appenders",{"_index":731,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["application/json",{"_index":902,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["appmodule",{"_index":44,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":742,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["argumentshost",{"_index":880,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["arising",{"_index":1815,"title":{},"body":{"license.html":{}}}],["arr",{"_index":1382,"title":{},"body":{"injectables/Seed.html":{}}}],["arr.find((auth",{"_index":1383,"title":{},"body":{"injectables/Seed.html":{}}}],["arr.push(authority.create(item",{"_index":1385,"title":{},"body":{"injectables/Seed.html":{}}}],["array",{"_index":809,"title":{},"body":{"classes/ExcelHelper.html":{},"miscellaneous/enumerations.html":{}}}],["aspath",{"_index":1010,"title":{},"body":{"controllers/IndexController.html":{},"miscellaneous/variables.html":{}}}],["aspath.split('?').shift().split('/').pop",{"_index":1011,"title":{},"body":{"controllers/IndexController.html":{},"miscellaneous/variables.html":{}}}],["aspects/enum",{"_index":284,"title":{},"body":{"classes/Base.html":{},"classes/User.html":{}}}],["associated",{"_index":1764,"title":{},"body":{"license.html":{}}}],["async",{"_index":163,"title":{},"body":{"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/BaseService.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginController.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{}}}],["athoritys",{"_index":1380,"title":{},"body":{"injectables/Seed.html":{}}}],["auth.id",{"_index":1384,"title":{},"body":{"injectables/Seed.html":{}}}],["authguard",{"_index":200,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{}}}],["author",{"_index":470,"title":{},"body":{"classes/Content.html":{},"classes/CreateContentDto.html":{},"classes/UpdateContentDto.html":{},"miscellaneous/variables.html":{}}}],["authority",{"_index":62,"title":{"classes/Authority.html":{}},"body":{"classes/Authority.html":{},"injectables/AuthorityService.html":{},"modules/CommonModule.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"injectables/Seed.html":{},"coverage.html":{}}}],["authority.create(payload",{"_index":263,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["authority.entity",{"_index":1240,"title":{},"body":{"classes/Role.html":{}}}],["authority.roles",{"_index":1241,"title":{},"body":{"classes/Role.html":{}}}],["authority.sheetsmap",{"_index":1379,"title":{},"body":{"injectables/Seed.html":{}}}],["authoritycontroller",{"_index":33,"title":{"classes/AuthorityController.html":{}},"body":{"modules/ApiModule.html":{},"classes/AuthorityController.html":{},"coverage.html":{}}}],["authorityrepository",{"_index":234,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["authoritys",{"_index":108,"title":{},"body":{"classes/Authority.html":{},"classes/Role.html":{},"injectables/RoleService.html":{}}}],["authorityservice",{"_index":169,"title":{"injectables/AuthorityService.html":{}},"body":{"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"modules/CommonModule.html":{},"coverage.html":{},"overview.html":{}}}],["authors",{"_index":1805,"title":{},"body":{"license.html":{}}}],["avatar",{"_index":1344,"title":{},"body":{"injectables/Seed.html":{},"classes/User.html":{}}}],["avatarpath",{"_index":1572,"title":{},"body":{"classes/User.html":{}}}],["await",{"_index":214,"title":{},"body":{"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/BaseService.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginController.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{}}}],["background",{"_index":456,"title":{},"body":{"injectables/CommonService.html":{}}}],["badrequestexception",{"_index":197,"title":{},"body":{"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RoleController.html":{},"classes/StorageController.html":{},"injectables/UserService.html":{}}}],["base",{"_index":64,"title":{"classes/Base.html":{}},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{},"coverage.html":{}}}],["base.getfullpath(this.avatar",{"_index":1598,"title":{},"body":{"classes/User.html":{}}}],["base.getfullpath(this.thumbnail",{"_index":567,"title":{},"body":{"classes/Content.html":{}}}],["base.getfullpath(this.video",{"_index":568,"title":{},"body":{"classes/Content.html":{}}}],["base.service",{"_index":254,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["base:16",{"_index":125,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["base:21",{"_index":119,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["base:26",{"_index":127,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["base:28",{"_index":132,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["base:7",{"_index":121,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["basename",{"_index":768,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"injectables/Seed.html":{},"classes/StatusTask.html":{}}}],["basename(path",{"_index":1496,"title":{},"body":{"classes/StatusTask.html":{}}}],["basename.length",{"_index":771,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["basename.substr(0",{"_index":770,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["baseservice",{"_index":227,"title":{"classes/BaseService.html":{}},"body":{"injectables/AuthorityService.html":{},"classes/BaseService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["baseservice:10",{"_index":249,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["baseservice:6",{"_index":247,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["bcrypt",{"_index":1589,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["bcrypt.compare(dto.oldpassword",{"_index":1669,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.compare(password",{"_index":1666,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.gensalt(10",{"_index":1602,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["bcrypt.hash(dto.password",{"_index":1670,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(this.password",{"_index":1604,"title":{},"body":{"classes/User.html":{}}}],["bcryptjs",{"_index":1590,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["beforeinsert",{"_index":479,"title":{},"body":{"classes/Content.html":{},"classes/User.html":{}}}],["beforeremove",{"_index":480,"title":{},"body":{"classes/Content.html":{}}}],["beforeupdate",{"_index":481,"title":{},"body":{"classes/Content.html":{}}}],["between",{"_index":635,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["bigint",{"_index":539,"title":{},"body":{"classes/Content.html":{}}}],["bing",{"_index":914,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["body",{"_index":198,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"controllers/IndexController.html":{},"classes/LoginController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/SettingController.html":{},"classes/StatusTask.html":{},"classes/UserController.html":{}}}],["body.question",{"_index":1090,"title":{},"body":{"controllers/IndexController.html":{}}}],["body.title",{"_index":1091,"title":{},"body":{"controllers/IndexController.html":{}}}],["bookinghotline",{"_index":1404,"title":{},"body":{"classes/Setting.html":{}}}],["boolean",{"_index":1244,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":717,"title":{},"body":{"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"injectables/ImportService.html":{},"classes/Logger.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{}}}],["buffer",{"_index":802,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["busline",{"_index":1400,"title":{},"body":{"classes/Setting.html":{}}}],["c",{"_index":1751,"title":{},"body":{"license.html":{}}}],["cache",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cachemodule",{"_index":377,"title":{},"body":{"modules/CommonModule.html":{}}}],["cachemodule.register",{"_index":410,"title":{},"body":{"modules/CommonModule.html":{}}}],["captcha",{"_index":437,"title":{},"body":{"injectables/CommonService.html":{}}}],["case",{"_index":714,"title":{},"body":{"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"injectables/ImportService.html":{},"classes/Logger.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{}}}],["catch",{"_index":876,"title":{},"body":{"classes/ExceptionsFilter.html":{},"classes/StorageController.html":{}}}],["catch(exception",{"_index":877,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["cate.id",{"_index":1372,"title":{},"body":{"injectables/Seed.html":{}}}],["categories",{"_index":736,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["category",{"_index":301,"title":{"classes/Category.html":{}},"body":{"classes/Category.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/Seed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["category.contents",{"_index":565,"title":{},"body":{"classes/Content.html":{}}}],["category.create(payload",{"_index":358,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.entity",{"_index":553,"title":{},"body":{"classes/Content.html":{}}}],["category.name",{"_index":628,"title":{},"body":{"injectables/ContentService.html":{}}}],["category.service",{"_index":617,"title":{},"body":{"injectables/ContentService.html":{},"injectables/ImportService.html":{}}}],["category.sheetsmap",{"_index":1367,"title":{},"body":{"injectables/Seed.html":{}}}],["categoryarr",{"_index":1369,"title":{},"body":{"injectables/Seed.html":{}}}],["categoryarr.find((cate",{"_index":1371,"title":{},"body":{"injectables/Seed.html":{}}}],["categoryarr.push(category.create(item",{"_index":1373,"title":{},"body":{"injectables/Seed.html":{}}}],["categorycontroller",{"_index":27,"title":{"classes/CategoryController.html":{}},"body":{"modules/ApiModule.html":{},"classes/CategoryController.html":{},"coverage.html":{}}}],["categoryrepository",{"_index":346,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/CommonService.html":{}}}],["categorys",{"_index":314,"title":{},"body":{"classes/Category.html":{},"injectables/Seed.html":{}}}],["categorys.foreach((item",{"_index":1370,"title":{},"body":{"injectables/Seed.html":{}}}],["categoryservice",{"_index":326,"title":{"injectables/CategoryService.html":{}},"body":{"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/ContentService.html":{},"injectables/ImportService.html":{},"coverage.html":{},"overview.html":{}}}],["categorysresult",{"_index":1365,"title":{},"body":{"injectables/Seed.html":{}}}],["categorysresult['categorys",{"_index":1368,"title":{},"body":{"injectables/Seed.html":{}}}],["cc9966",{"_index":457,"title":{},"body":{"injectables/CommonService.html":{}}}],["cell.value",{"_index":844,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["cellkey",{"_index":825,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["cellnumber",{"_index":835,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["cellobj[obj[0",{"_index":842,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["cellobj[obj[0]][obj[1",{"_index":843,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["cellobj[titlearr[cellnumber",{"_index":845,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["cellsmap",{"_index":111,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/ExcelHelper.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cellsmap[cell.value.tostring",{"_index":836,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["chalk",{"_index":676,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.cyan(leveloutput",{"_index":719,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.green(leveloutput",{"_index":716,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.green(typeoutput)}${dateoutput",{"_index":727,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.grey(leveloutput",{"_index":726,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.hex('#dd4c35')(leveloutput",{"_index":725,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.red(leveloutput",{"_index":723,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.yellow",{"_index":728,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.yellow(leveloutput",{"_index":721,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["change",{"_index":1501,"title":{},"body":{"classes/StatusTask.html":{}}}],["changepassword",{"_index":1606,"title":{},"body":{"classes/UserController.html":{},"injectables/UserService.html":{}}}],["changepassword(@currentuser",{"_index":1634,"title":{},"body":{"classes/UserController.html":{}}}],["changepassword(id",{"_index":1643,"title":{},"body":{"injectables/UserService.html":{}}}],["changepassword(user",{"_index":1610,"title":{},"body":{"classes/UserController.html":{}}}],["characteristic_list",{"_index":1031,"title":{},"body":{"controllers/IndexController.html":{}}}],["characters",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["charge",{"_index":1759,"title":{},"body":{"license.html":{}}}],["charset=utf",{"_index":903,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["checksvgcode",{"_index":422,"title":{},"body":{"injectables/CommonService.html":{},"controllers/IndexController.html":{}}}],["checksvgcode(@req",{"_index":1086,"title":{},"body":{"controllers/IndexController.html":{}}}],["checksvgcode(req",{"_index":970,"title":{},"body":{"controllers/IndexController.html":{}}}],["checksvgcode(svg_hash",{"_index":428,"title":{},"body":{"injectables/CommonService.html":{}}}],["children",{"_index":65,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Organization.html":{}}}],["chokidar",{"_index":1455,"title":{},"body":{"classes/StatusTask.html":{}}}],["chokidar.watch(uploaddirpath",{"_index":1484,"title":{},"body":{"classes/StatusTask.html":{}}}],["claim",{"_index":1808,"title":{},"body":{"license.html":{}}}],["class",{"_index":39,"title":{"classes/Authority.html":{},"classes/AuthorityController.html":{},"classes/Base.html":{},"classes/BaseService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"classes/PasswordDto.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"classes/UserController.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"modules/SSRModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classdecorator",{"_index":1720,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classserializerinterceptor",{"_index":202,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SettingController.html":{},"classes/UserController.html":{}}}],["clone",{"_index":1730,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":363,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":364,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":365,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cn",{"_index":1161,"title":{},"body":{"classes/LoginDto.html":{}}}],["color",{"_index":455,"title":{},"body":{"injectables/CommonService.html":{}}}],["column",{"_index":146,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["column({comment",{"_index":89,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["column({type",{"_index":92,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["columnnumber",{"_index":663,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["columns",{"_index":852,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["comment",{"_index":96,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["common/aspects/decorator",{"_index":204,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/LoginController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{}}}],["common/aspects/enum",{"_index":1528,"title":{},"body":{"classes/StorageController.html":{}}}],["common/aspects/middlewares",{"_index":16,"title":{},"body":{"modules/ApiModule.html":{}}}],["common/common.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["common/dtos/login.dto",{"_index":1141,"title":{},"body":{"classes/LoginController.html":{}}}],["common/dtos/password.dto",{"_index":1624,"title":{},"body":{"classes/UserController.html":{}}}],["common/entities/authority.entity",{"_index":1324,"title":{},"body":{"injectables/Seed.html":{}}}],["common/entities/category.entity",{"_index":1318,"title":{},"body":{"injectables/Seed.html":{}}}],["common/entities/content.entity",{"_index":1325,"title":{},"body":{"injectables/Seed.html":{}}}],["common/entities/organization.entity",{"_index":1323,"title":{},"body":{"injectables/Seed.html":{}}}],["common/entities/role.entity",{"_index":152,"title":{},"body":{"classes/Authority.html":{},"injectables/Seed.html":{}}}],["common/entities/setting.entity",{"_index":1319,"title":{},"body":{"injectables/Seed.html":{}}}],["common/entities/user.entity",{"_index":1317,"title":{},"body":{"injectables/Seed.html":{}}}],["common/lib/elastic",{"_index":1322,"title":{},"body":{"injectables/Seed.html":{}}}],["common/lib/excel",{"_index":1320,"title":{},"body":{"injectables/Seed.html":{}}}],["common/lib/logger",{"_index":1321,"title":{},"body":{"injectables/Seed.html":{},"classes/StorageController.html":{}}}],["common/services/authority.service",{"_index":205,"title":{},"body":{"classes/AuthorityController.html":{}}}],["common/services/category.service",{"_index":333,"title":{},"body":{"classes/CategoryController.html":{}}}],["common/services/common.service",{"_index":1008,"title":{},"body":{"controllers/IndexController.html":{}}}],["common/services/content.service",{"_index":601,"title":{},"body":{"classes/ContentController.html":{},"controllers/IndexController.html":{}}}],["common/services/import.service",{"_index":1529,"title":{},"body":{"classes/StorageController.html":{}}}],["common/services/organization.service",{"_index":1191,"title":{},"body":{"classes/OrganizationController.html":{}}}],["common/services/role.service",{"_index":1256,"title":{},"body":{"classes/RoleController.html":{}}}],["common/services/search.service",{"_index":1287,"title":{},"body":{"classes/SearchController.html":{}}}],["common/services/setting.service",{"_index":1424,"title":{},"body":{"classes/SettingController.html":{}}}],["common/services/user.service",{"_index":1142,"title":{},"body":{"classes/LoginController.html":{},"classes/UserController.html":{}}}],["commonmodule",{"_index":54,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["commonservice",{"_index":366,"title":{"injectables/CommonService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{},"controllers/IndexController.html":{},"coverage.html":{},"overview.html":{}}}],["concact",{"_index":960,"title":{},"body":{"controllers/IndexController.html":{}}}],["concact(@req",{"_index":1075,"title":{},"body":{"controllers/IndexController.html":{}}}],["concact(req",{"_index":973,"title":{},"body":{"controllers/IndexController.html":{}}}],["conditions",{"_index":1786,"title":{},"body":{"license.html":{}}}],["config",{"_index":283,"title":{},"body":{"classes/Base.html":{},"modules/CommonModule.html":{},"injectables/JwtStrategy.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.cache",{"_index":411,"title":{},"body":{"modules/CommonModule.html":{}}}],["config.es",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.jwt.secretorprivatekey",{"_index":1109,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.serverurl}/${config.static.root",{"_index":289,"title":{},"body":{"classes/Base.html":{}}}],["config.static.uploadpath}/${path",{"_index":1555,"title":{},"body":{"classes/StorageController.html":{}}}],["configure",{"_index":6,"title":{},"body":{"modules/ApiModule.html":{}}}],["configure(consumer",{"_index":7,"title":{},"body":{"modules/ApiModule.html":{}}}],["connection",{"_index":924,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{},"license.html":{}}}],["console",{"_index":732,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["console.error(`${worksheet.name",{"_index":817,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["const",{"_index":262,"title":{},"body":{"injectables/AuthorityService.html":{},"classes/Base.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":256,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CommonService.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"classes/Logger.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"injectables/UserService.html":{}}}],["constructor(@injectconnection",{"_index":1326,"title":{},"body":{"injectables/Seed.html":{}}}],["constructor(@injectrepository(category",{"_index":353,"title":{},"body":{"injectables/CategoryService.html":{}}}],["constructor(@injectrepository(organization",{"_index":1208,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["constructor(@injectrepository(role",{"_index":1272,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(authorityrepository",{"_index":231,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["constructor(authorityservice",{"_index":168,"title":{},"body":{"classes/AuthorityController.html":{}}}],["constructor(categoryrepository",{"_index":344,"title":{},"body":{"injectables/CategoryService.html":{}}}],["constructor(categoryservice",{"_index":325,"title":{},"body":{"classes/CategoryController.html":{},"injectables/ContentService.html":{}}}],["constructor(connection",{"_index":923,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["constructor(contentservice",{"_index":592,"title":{},"body":{"classes/ContentController.html":{}}}],["constructor(context",{"_index":666,"title":{},"body":{"classes/ContextTrace.html":{}}}],["constructor(importservice",{"_index":1516,"title":{},"body":{"classes/StorageController.html":{}}}],["constructor(jwtservice",{"_index":1639,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(organizationrepository",{"_index":1200,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["constructor(organizationservice",{"_index":1183,"title":{},"body":{"classes/OrganizationController.html":{}}}],["constructor(private",{"_index":210,"title":{},"body":{"classes/AuthorityController.html":{},"classes/BaseService.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{}}}],["constructor(repository",{"_index":293,"title":{},"body":{"classes/BaseService.html":{}}}],["constructor(rolerepository",{"_index":1265,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(roleservice",{"_index":1248,"title":{},"body":{"classes/RoleController.html":{}}}],["constructor(searchservice",{"_index":1283,"title":{},"body":{"classes/SearchController.html":{}}}],["constructor(settingrepository",{"_index":1430,"title":{},"body":{"injectables/SettingService.html":{}}}],["constructor(settingservice",{"_index":425,"title":{},"body":{"injectables/CommonService.html":{},"classes/SettingController.html":{}}}],["constructor(userservice",{"_index":1095,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/LoginController.html":{},"classes/UserController.html":{}}}],["consumer",{"_index":10,"title":{},"body":{"modules/ApiModule.html":{}}}],["consumer.apply(logger).forroutes",{"_index":41,"title":{},"body":{"modules/ApiModule.html":{}}}],["content",{"_index":307,"title":{"classes/Content.html":{}},"body":{"classes/Category.html":{},"modules/CommonModule.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"coverage.html":{}}}],["content(@req",{"_index":1038,"title":{},"body":{"controllers/IndexController.html":{}}}],["content(req",{"_index":976,"title":{},"body":{"controllers/IndexController.html":{}}}],["content.category",{"_index":322,"title":{},"body":{"classes/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{}}}],["content.create(payload",{"_index":656,"title":{},"body":{"injectables/ContentService.html":{}}}],["content.create(res[key",{"_index":943,"title":{},"body":{"injectables/ImportService.html":{}}}],["content.entity",{"_index":320,"title":{},"body":{"classes/Category.html":{}}}],["content.esindex.body.type",{"_index":578,"title":{},"body":{"classes/Content.html":{},"injectables/SearchService.html":{}}}],["content.esindex.index",{"_index":577,"title":{},"body":{"classes/Content.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{}}}],["content.getfullpath(val",{"_index":561,"title":{},"body":{"classes/Content.html":{},"miscellaneous/variables.html":{}}}],["content.sheetsmap",{"_index":939,"title":{},"body":{"injectables/ImportService.html":{}}}],["content.sheetsmap[payload.category",{"_index":647,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["content/culture",{"_index":1041,"title":{},"body":{"controllers/IndexController.html":{}}}],["content/development",{"_index":1042,"title":{},"body":{"controllers/IndexController.html":{}}}],["content/geo_profile",{"_index":1040,"title":{},"body":{"controllers/IndexController.html":{}}}],["content/instructions",{"_index":1043,"title":{},"body":{"controllers/IndexController.html":{}}}],["content/introduction",{"_index":1039,"title":{},"body":{"controllers/IndexController.html":{}}}],["contentcontroller",{"_index":23,"title":{"classes/ContentController.html":{}},"body":{"modules/ApiModule.html":{},"classes/ContentController.html":{},"coverage.html":{}}}],["contentid",{"_index":961,"title":{},"body":{"controllers/IndexController.html":{}}}],["contentid(@req",{"_index":1035,"title":{},"body":{"controllers/IndexController.html":{}}}],["contentid(req",{"_index":979,"title":{},"body":{"controllers/IndexController.html":{}}}],["contentrepository",{"_index":610,"title":{},"body":{"injectables/ContentService.html":{}}}],["contents",{"_index":303,"title":{},"body":{"classes/Category.html":{},"classes/Content.html":{},"injectables/ImportService.html":{}}}],["contentservice",{"_index":367,"title":{"injectables/ContentService.html":{}},"body":{"modules/CommonModule.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"controllers/IndexController.html":{},"coverage.html":{},"overview.html":{}}}],["context",{"_index":664,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["contexttrace",{"_index":660,"title":{"classes/ContextTrace.html":{}},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"coverage.html":{}}}],["contexttrace(context",{"_index":773,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["contract",{"_index":1812,"title":{},"body":{"license.html":{}}}],["controller",{"_index":956,"title":{"controllers/IndexController.html":{}},"body":{"controllers/IndexController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":37,"title":{},"body":{"modules/ApiModule.html":{},"controllers/IndexController.html":{},"modules/SSRModule.html":{}}}],["controllers/authority.controller",{"_index":34,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/category.controller",{"_index":28,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/content.controller",{"_index":24,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/index.controller",{"_index":1281,"title":{},"body":{"modules/SSRModule.html":{}}}],["controllers/login.controller",{"_index":18,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/organization.controller",{"_index":30,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/role.controller",{"_index":32,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/search.controller",{"_index":36,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/setting.controller",{"_index":26,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/storage.controller",{"_index":22,"title":{},"body":{"modules/ApiModule.html":{}}}],["controllers/user.controller",{"_index":20,"title":{},"body":{"modules/ApiModule.html":{}}}],["cookie",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cooperationhotline",{"_index":1405,"title":{},"body":{"classes/Setting.html":{}}}],["copies",{"_index":1780,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1762,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1408,"title":{},"body":{"classes/Setting.html":{},"license.html":{}}}],["coverage",{"_index":1674,"title":{"coverage.html":{}},"body":{}}],["cpu",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create",{"_index":80,"title":{},"body":{"classes/Authority.html":{},"classes/AuthorityController.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"classes/Setting.html":{},"classes/User.html":{},"classes/UserController.html":{}}}],["create(@body",{"_index":218,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/UserController.html":{}}}],["create(dto",{"_index":171,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/UserController.html":{}}}],["create(target",{"_index":128,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["create_at",{"_index":76,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["createcontentdto",{"_index":774,"title":{"classes/CreateContentDto.html":{}},"body":{"classes/CreateContentDto.html":{},"classes/UpdateContentDto.html":{},"coverage.html":{}}}],["createdatecolumn",{"_index":281,"title":{},"body":{"classes/Base.html":{}}}],["createdatecolumn({comment",{"_index":118,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["createparamdecorator(async",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder(user",{"_index":1350,"title":{},"body":{"injectables/Seed.html":{}}}],["cron",{"_index":1459,"title":{},"body":{"classes/StatusTask.html":{}}}],["cron('2",{"_index":1474,"title":{},"body":{"classes/StatusTask.html":{}}}],["cronjob",{"_index":1475,"title":{},"body":{"classes/StatusTask.html":{}}}],["crypto",{"_index":434,"title":{},"body":{"injectables/CommonService.html":{}}}],["crypto.createhash('md5').update(data).digest('hex",{"_index":458,"title":{},"body":{"injectables/CommonService.html":{}}}],["ctime",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx",{"_index":887,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["ctx.getrequest",{"_index":892,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":890,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["current",{"_index":1607,"title":{},"body":{"classes/UserController.html":{}}}],["current(@currentuser",{"_index":1631,"title":{},"body":{"classes/UserController.html":{}}}],["current(user",{"_index":1614,"title":{},"body":{"classes/UserController.html":{}}}],["currentuser",{"_index":1623,"title":{},"body":{"classes/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":1809,"title":{},"body":{"license.html":{}}}],["data",{"_index":447,"title":{},"body":{"injectables/CommonService.html":{},"classes/StorageController.html":{}}}],["data')@apiimplicitfile({name",{"_index":1520,"title":{},"body":{"classes/StorageController.html":{}}}],["database",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource",{"_index":644,"title":{},"body":{"injectables/ContentService.html":{},"classes/ExcelHelper.html":{},"injectables/UserService.html":{}}}],["datasource.map(item",{"_index":858,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["date",{"_index":1490,"title":{},"body":{"classes/StatusTask.html":{}}}],["dateoutput",{"_index":706,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["day",{"_index":1471,"title":{},"body":{"classes/StatusTask.html":{}}}],["db:create",{"_index":1737,"title":{},"body":{"index.html":{}}}],["db:init",{"_index":1738,"title":{},"body":{"index.html":{}}}],["dd",{"_index":523,"title":{},"body":{"classes/Content.html":{},"classes/ContextTrace.html":{},"classes/ExceptionsFilter.html":{},"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["dd')}/${uuid.v4",{"_index":1549,"title":{},"body":{"classes/StorageController.html":{}}}],["deal",{"_index":1766,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1817,"title":{},"body":{"license.html":{}}}],["debug",{"_index":680,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["debug(...args",{"_index":743,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["declarations",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"overview.html":{}}}],["deep",{"_index":1121,"title":{},"body":{"classes/Logger.html":{}}}],["default",{"_index":90,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"injectables/ImportService.html":{},"classes/Logger.html":{},"classes/Organization.html":{},"classes/Role.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"injectables/SettingService.html":{},"classes/StorageController.html":{},"classes/User.html":{}}}],["defaultstrategy",{"_index":415,"title":{},"body":{"modules/CommonModule.html":{}}}],["delete",{"_index":186,"title":{},"body":{"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"controllers/IndexController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/UserController.html":{}}}],["delete(ids",{"_index":235,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["deleted",{"_index":1712,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"overview.html":{}}}],["desc",{"_index":66,"title":{},"body":{"classes/Authority.html":{},"injectables/ContentService.html":{},"classes/Organization.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/StatusTask.html":{},"injectables/UserService.html":{}}}],["description",{"_index":1414,"title":{},"body":{"classes/Setting.html":{}}}],["design",{"_index":1728,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1739,"title":{},"body":{"index.html":{}}}],["dir",{"_index":1500,"title":{},"body":{"classes/StatusTask.html":{}}}],["dirname",{"_index":1360,"title":{},"body":{"injectables/Seed.html":{},"classes/StatusTask.html":{}}}],["dirname(path",{"_index":1497,"title":{},"body":{"classes/StatusTask.html":{}}}],["distribute",{"_index":1776,"title":{},"body":{"license.html":{}}}],["doc",{"_index":586,"title":{},"body":{"classes/Content.html":{}}}],["doc['category",{"_index":588,"title":{},"body":{"classes/Content.html":{}}}],["documentation",{"_index":1765,"title":{},"body":{"license.html":{}}}],["dropschema",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto",{"_index":174,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/LoginController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SettingController.html":{},"classes/UserController.html":{},"injectables/UserService.html":{}}}],["dto.password",{"_index":1148,"title":{},"body":{"classes/LoginController.html":{}}}],["elapsed",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elasticsearch",{"_index":560,"title":{},"body":{"classes/Content.html":{},"index.html":{}}}],["elasticsearch.client",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elasticsearch、influxdb、postgresql",{"_index":1732,"title":{},"body":{"index.html":{}}}],["entities",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities/authority.entity",{"_index":255,"title":{},"body":{"injectables/AuthorityService.html":{},"modules/CommonModule.html":{}}}],["entities/category.entity",{"_index":352,"title":{},"body":{"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{}}}],["entities/content.entity",{"_index":393,"title":{},"body":{"modules/CommonModule.html":{},"injectables/ContentService.html":{},"injectables/ImportService.html":{},"injectables/SearchService.html":{}}}],["entities/organization.entity",{"_index":397,"title":{},"body":{"modules/CommonModule.html":{},"injectables/ImportService.html":{},"injectables/OrganizationService.html":{}}}],["entities/role.entity",{"_index":398,"title":{},"body":{"modules/CommonModule.html":{},"injectables/RoleService.html":{}}}],["entities/setting.entity",{"_index":395,"title":{},"body":{"modules/CommonModule.html":{},"injectables/SettingService.html":{}}}],["entities/user.entity",{"_index":392,"title":{},"body":{"modules/CommonModule.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":145,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["enum",{"_index":124,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"classes/Logger.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["enumerations",{"_index":1704,"title":{"miscellaneous/enumerations.html":{}},"body":{}}],["err",{"_index":1492,"title":{},"body":{"classes/StatusTask.html":{},"classes/StorageController.html":{}}}],["error",{"_index":682,"title":{},"body":{"classes/ContextTrace.html":{},"controllers/IndexController.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["error(...args",{"_index":751,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["error(`${worksheet.name",{"_index":822,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["es",{"_index":554,"title":{},"body":{"classes/Content.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/StatusTask.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["es.delete",{"_index":590,"title":{},"body":{"classes/Content.html":{},"classes/StatusTask.html":{}}}],["es.index",{"_index":576,"title":{},"body":{"classes/Content.html":{},"classes/StatusTask.html":{}}}],["es.indices.create",{"_index":1359,"title":{},"body":{"injectables/Seed.html":{}}}],["es.indices.create(content.esindex",{"_index":1364,"title":{},"body":{"injectables/Seed.html":{}}}],["es.indices.delete",{"_index":1358,"title":{},"body":{"injectables/Seed.html":{}}}],["es.indices.exists",{"_index":1356,"title":{},"body":{"injectables/Seed.html":{}}}],["es.search",{"_index":1299,"title":{},"body":{"injectables/SearchService.html":{}}}],["es.update",{"_index":589,"title":{},"body":{"classes/Content.html":{},"classes/StatusTask.html":{}}}],["esb",{"_index":1294,"title":{},"body":{"injectables/SearchService.html":{}}}],["esb.matchquery(payload.field",{"_index":1297,"title":{},"body":{"injectables/SearchService.html":{}}}],["esb.requestbodysearch",{"_index":1295,"title":{},"body":{"injectables/SearchService.html":{}}}],["esindex",{"_index":471,"title":{},"body":{"classes/Content.html":{}}}],["event",{"_index":1487,"title":{},"body":{"classes/StatusTask.html":{},"license.html":{}}}],["ex",{"_index":460,"title":{},"body":{"injectables/CommonService.html":{}}}],["ex_info",{"_index":67,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"controllers/IndexController.html":{},"classes/Organization.html":{},"classes/Role.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["ex_info.address",{"_index":506,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.company",{"_index":502,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.content",{"_index":527,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.fax",{"_index":504,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.nickname",{"_index":525,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.phone",{"_index":503,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.postcode",{"_index":507,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.question",{"_index":517,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.reply",{"_index":518,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.sale",{"_index":505,"title":{},"body":{"classes/Content.html":{}}}],["ex_info.title",{"_index":526,"title":{},"body":{"classes/Content.html":{}}}],["excel",{"_index":806,"title":{},"body":{"classes/ExcelHelper.html":{},"index.html":{}}}],["excel.workbook",{"_index":810,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["excelhandletype",{"_index":150,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/ExcelHelper.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"miscellaneous/enumerations.html":{}}}],["excelhandletype.array",{"_index":110,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/ExcelHelper.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"miscellaneous/variables.html":{}}}],["excelhandletype.kv",{"_index":820,"title":{},"body":{"classes/ExcelHelper.html":{},"classes/Setting.html":{}}}],["excelhelper",{"_index":618,"title":{"classes/ExcelHelper.html":{}},"body":{"injectables/ContentService.html":{},"classes/ExcelHelper.html":{},"injectables/ImportService.html":{},"injectables/Seed.html":{},"coverage.html":{}}}],["excelhelper.export",{"_index":646,"title":{},"body":{"injectables/ContentService.html":{}}}],["excelhelper.export(datasource",{"_index":1664,"title":{},"body":{"injectables/UserService.html":{}}}],["excelhelper.load(workbook",{"_index":812,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["excelhelper.loadfrombuffer(file.data",{"_index":938,"title":{},"body":{"injectables/ImportService.html":{}}}],["excelhelper.loadfromfile",{"_index":1330,"title":{},"body":{"injectables/Seed.html":{}}}],["exceljs",{"_index":807,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["exception",{"_index":882,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":896,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":875,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exceptionsfilter",{"_index":873,"title":{"classes/ExceptionsFilter.html":{}},"body":{"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["exclude",{"_index":285,"title":{},"body":{"classes/Base.html":{},"classes/User.html":{}}}],["exclude()@column({type",{"_index":123,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["exclude({toplainonly",{"_index":1579,"title":{},"body":{"classes/User.html":{}}}],["expiresin",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":38,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"modules/SSRModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{}}}],["export(@query",{"_index":339,"title":{},"body":{"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/RoleController.html":{}}}],["export(datasource",{"_index":794,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["export(payload",{"_index":595,"title":{},"body":{"classes/ContentController.html":{},"classes/RoleController.html":{}}}],["exports",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"overview.html":{}}}],["expose",{"_index":143,"title":{},"body":{"classes/Authority.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["express",{"_index":1796,"title":{},"body":{"license.html":{}}}],["extends",{"_index":154,"title":{},"body":{"classes/Authority.html":{},"injectables/AuthorityService.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"injectables/JwtStrategy.html":{},"classes/Organization.html":{},"injectables/OrganizationService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Setting.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["extname",{"_index":1361,"title":{},"body":{"injectables/Seed.html":{},"classes/StatusTask.html":{}}}],["extname(path",{"_index":1498,"title":{},"body":{"classes/StatusTask.html":{}}}],["extnamelength",{"_index":766,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["extractiontextinhtml",{"_index":558,"title":{},"body":{"classes/Content.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["extractiontextinhtml(html",{"_index":1721,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractiontextinhtml(this.text",{"_index":572,"title":{},"body":{"classes/Content.html":{}}}],["extractjwt",{"_index":1099,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1107,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":467,"title":{},"body":{"injectables/CommonService.html":{},"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"classes/Logger.html":{},"classes/StatusTask.html":{},"miscellaneous/variables.html":{}}}],["fastify",{"_index":1740,"title":{},"body":{"index.html":{}}}],["fatal",{"_index":683,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["fatal(...args",{"_index":753,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["fax",{"_index":1402,"title":{},"body":{"classes/Setting.html":{}}}],["female",{"_index":1710,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fetch",{"_index":1608,"title":{},"body":{"classes/UserController.html":{}}}],["fetch(@param",{"_index":1627,"title":{},"body":{"classes/UserController.html":{}}}],["fetch(params",{"_index":1617,"title":{},"body":{"classes/UserController.html":{}}}],["fields",{"_index":795,"title":{},"body":{"classes/ExcelHelper.html":{},"classes/StatusTask.html":{},"miscellaneous/variables.html":{}}}],["fields.includes(key",{"_index":861,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["fields.map(item",{"_index":853,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["file",{"_index":928,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{}}}],["file.md5",{"_index":1558,"title":{},"body":{"classes/StorageController.html":{}}}],["file.mimetype",{"_index":1560,"title":{},"body":{"classes/StorageController.html":{}}}],["file.mv(filepath",{"_index":1554,"title":{},"body":{"classes/StorageController.html":{}}}],["file.name",{"_index":1550,"title":{},"body":{"classes/StorageController.html":{}}}],["file.size",{"_index":1556,"title":{},"body":{"classes/StorageController.html":{}}}],["filename",{"_index":764,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["filepath",{"_index":805,"title":{},"body":{"classes/ExcelHelper.html":{},"classes/StorageController.html":{}}}],["files",{"_index":1534,"title":{},"body":{"classes/StorageController.html":{},"license.html":{}}}],["files.file",{"_index":1537,"title":{},"body":{"classes/StorageController.html":{}}}],["filter(item",{"_index":856,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["findone",{"_index":164,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"injectables/Seed.html":{},"classes/SettingController.html":{}}}],["findone(@param('id",{"_index":211,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{}}}],["findone(id",{"_index":175,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{}}}],["findoneandparents",{"_index":609,"title":{},"body":{"injectables/ContentService.html":{}}}],["findoneandparents(id",{"_index":612,"title":{},"body":{"injectables/ContentService.html":{}}}],["findoneandrelations",{"_index":1264,"title":{},"body":{"injectables/RoleService.html":{}}}],["findoneandrelations(id",{"_index":1268,"title":{},"body":{"injectables/RoleService.html":{}}}],["findonebyid",{"_index":230,"title":{},"body":{"injectables/AuthorityService.html":{},"classes/BaseService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["findonebyid(id",{"_index":246,"title":{},"body":{"injectables/AuthorityService.html":{},"classes/BaseService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["findonebyname",{"_index":228,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"injectables/OrganizationService.html":{}}}],["findonebyname(name",{"_index":238,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"injectables/OrganizationService.html":{}}}],["findparentstree",{"_index":343,"title":{},"body":{"injectables/CategoryService.html":{}}}],["findparentstree(category",{"_index":348,"title":{},"body":{"injectables/CategoryService.html":{}}}],["fitness",{"_index":1801,"title":{},"body":{"license.html":{}}}],["following",{"_index":1785,"title":{},"body":{"license.html":{}}}],["free",{"_index":1758,"title":{},"body":{"license.html":{}}}],["fs",{"_index":1453,"title":{},"body":{"classes/StatusTask.html":{}}}],["function",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1713,"title":{"miscellaneous/functions.html":{}},"body":{}}],["furnished",{"_index":1783,"title":{},"body":{"license.html":{}}}],["gender",{"_index":1570,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["gender.male",{"_index":1594,"title":{},"body":{"classes/User.html":{}}}],["get(':id",{"_index":176,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/UserController.html":{}}}],["get(':id')@useinterceptors(classserializerinterceptor",{"_index":1618,"title":{},"body":{"classes/UserController.html":{}}}],["get('announcement",{"_index":967,"title":{},"body":{"controllers/IndexController.html":{}}}],["get('concact",{"_index":974,"title":{},"body":{"controllers/IndexController.html":{}}}],["get('content/:category",{"_index":977,"title":{},"body":{"controllers/IndexController.html":{}}}],["get('content/id/:id",{"_index":980,"title":{},"body":{"controllers/IndexController.html":{}}}],["get('current",{"_index":1630,"title":{},"body":{"classes/UserController.html":{}}}],["get('current')@useinterceptors(classserializerinterceptor",{"_index":1615,"title":{},"body":{"classes/UserController.html":{}}}],["get('error",{"_index":982,"title":{},"body":{"controllers/IndexController.html":{}}}],["get('export",{"_index":338,"title":{},"body":{"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/RoleController.html":{}}}],["get('getsvgcode",{"_index":985,"title":{},"body":{"controllers/IndexController.html":{}}}],["get('image/:category",{"_index":988,"title":{},"body":{"controllers/IndexController.html":{}}}],["get('list",{"_index":179,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/UserController.html":{}}}],["get('list/:category",{"_index":993,"title":{},"body":{"controllers/IndexController.html":{}}}],["get('message",{"_index":996,"title":{},"body":{"controllers/IndexController.html":{}}}],["get('suggestions",{"_index":1002,"title":{},"body":{"controllers/IndexController.html":{}}}],["get('video/:category",{"_index":1005,"title":{},"body":{"controllers/IndexController.html":{}}}],["getavatarpath",{"_index":1586,"title":{},"body":{"classes/User.html":{}}}],["getfullpath",{"_index":81,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["getfullpath(path",{"_index":131,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["getissuperadmin",{"_index":1237,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["getkey",{"_index":138,"title":{},"body":{"classes/Authority.html":{},"classes/Organization.html":{}}}],["getlabel",{"_index":134,"title":{},"body":{"classes/Authority.html":{}}}],["getmanyandcount",{"_index":1354,"title":{},"body":{"injectables/Seed.html":{}}}],["getrepository(organization",{"_index":1348,"title":{},"body":{"injectables/Seed.html":{}}}],["getrepository(role",{"_index":1339,"title":{},"body":{"injectables/Seed.html":{}}}],["getsettingbytoken",{"_index":1429,"title":{},"body":{"injectables/SettingService.html":{}}}],["getsettingbytoken(token",{"_index":1433,"title":{},"body":{"injectables/SettingService.html":{}}}],["getsiteinfo",{"_index":423,"title":{},"body":{"injectables/CommonService.html":{}}}],["getstacktrace",{"_index":1111,"title":{},"body":{"classes/Logger.html":{}}}],["getstacktrace(deep",{"_index":755,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["getsvgcode",{"_index":424,"title":{},"body":{"injectables/CommonService.html":{},"controllers/IndexController.html":{}}}],["getsvgcode(@req",{"_index":1082,"title":{},"body":{"controllers/IndexController.html":{}}}],["getsvgcode(req",{"_index":984,"title":{},"body":{"controllers/IndexController.html":{}}}],["getthumbnailpath",{"_index":547,"title":{},"body":{"classes/Content.html":{}}}],["getting",{"_index":1725,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettitle",{"_index":136,"title":{},"body":{"classes/Authority.html":{},"classes/Organization.html":{}}}],["getvalue",{"_index":140,"title":{},"body":{"classes/Authority.html":{},"classes/Organization.html":{}}}],["getvideopath",{"_index":549,"title":{},"body":{"classes/Content.html":{}}}],["git",{"_index":1729,"title":{},"body":{"index.html":{}}}],["global",{"_index":376,"title":{},"body":{"modules/CommonModule.html":{}}}],["granted",{"_index":1757,"title":{},"body":{"license.html":{}}}],["handlefile",{"_index":920,"title":{},"body":{"injectables/ImportService.html":{}}}],["handlefile(file",{"_index":926,"title":{},"body":{"injectables/ImportService.html":{}}}],["handler",{"_index":509,"title":{},"body":{"classes/Content.html":{},"classes/ExcelHelper.html":{},"miscellaneous/variables.html":{}}}],["handler(item[headerkey",{"_index":869,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["handler(item[obj[0",{"_index":867,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["handletype",{"_index":109,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":508,"title":{},"body":{"classes/Content.html":{},"miscellaneous/variables.html":{}}}],["headerkey",{"_index":863,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["hereby",{"_index":1756,"title":{},"body":{"license.html":{}}}],["hh:mm:ss",{"_index":524,"title":{},"body":{"classes/Content.html":{},"classes/ContextTrace.html":{},"classes/ExceptionsFilter.html":{},"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["holders",{"_index":1806,"title":{},"body":{"license.html":{}}}],["host",{"_index":879,"title":{},"body":{"classes/ExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":888,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["hostname",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hour",{"_index":1470,"title":{},"body":{"classes/StatusTask.html":{}}}],["html",{"_index":911,"title":{},"body":{"classes/ExceptionsFilter.html":{},"miscellaneous/functions.html":{}}}],["http",{"_index":898,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["http://127.0.0.1:3000",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpexception",{"_index":884,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["https://cn.bing.com/search?q=${encodeuricomponent(`[adonis.js",{"_index":913,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["https://nodejs.org/api/fs.html#fs_stats_dev",{"_index":1362,"title":{},"body":{"injectables/Seed.html":{}}}],["httpstatus",{"_index":885,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["icon",{"_index":304,"title":{},"body":{"classes/Category.html":{}}}],["icp",{"_index":1409,"title":{},"body":{"classes/Setting.html":{}}}],["id",{"_index":77,"title":{},"body":{"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"controllers/IndexController.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/Setting.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":237,"title":{},"body":{"injectables/AuthorityService.html":{},"classes/BaseService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["ids.includes(root.id",{"_index":272,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/OrganizationService.html":{}}}],["ignorechars",{"_index":451,"title":{},"body":{"injectables/CommonService.html":{}}}],["ignored",{"_index":1485,"title":{},"body":{"classes/StatusTask.html":{}}}],["ik_max_word",{"_index":493,"title":{},"body":{"classes/Content.html":{},"injectables/Seed.html":{}}}],["image",{"_index":962,"title":{},"body":{"controllers/IndexController.html":{}}}],["image(@req",{"_index":1055,"title":{},"body":{"controllers/IndexController.html":{}}}],["image(req",{"_index":987,"title":{},"body":{"controllers/IndexController.html":{}}}],["image/crafts",{"_index":1057,"title":{},"body":{"controllers/IndexController.html":{}}}],["image/delicious",{"_index":1060,"title":{},"body":{"controllers/IndexController.html":{}}}],["image/entertainment",{"_index":1063,"title":{},"body":{"controllers/IndexController.html":{}}}],["image/guide",{"_index":1058,"title":{},"body":{"controllers/IndexController.html":{}}}],["image/hotel",{"_index":1061,"title":{},"body":{"controllers/IndexController.html":{}}}],["image/photo",{"_index":1059,"title":{},"body":{"controllers/IndexController.html":{}}}],["image/shopping",{"_index":1062,"title":{},"body":{"controllers/IndexController.html":{}}}],["image/specialty",{"_index":1056,"title":{},"body":{"controllers/IndexController.html":{}}}],["image/travels",{"_index":1065,"title":{},"body":{"controllers/IndexController.html":{}}}],["image/trips",{"_index":1064,"title":{},"body":{"controllers/IndexController.html":{}}}],["imagedetail",{"_index":1066,"title":{},"body":{"controllers/IndexController.html":{}}}],["images/superadmin.png",{"_index":1345,"title":{},"body":{"injectables/Seed.html":{}}}],["implements",{"_index":40,"title":{},"body":{"modules/ApiModule.html":{},"classes/ExceptionsFilter.html":{}}}],["implied",{"_index":1797,"title":{},"body":{"license.html":{}}}],["import",{"_index":12,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"modules/SSRModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["importauthoritys",{"_index":1304,"title":{},"body":{"injectables/Seed.html":{}}}],["importcategorys",{"_index":1305,"title":{},"body":{"injectables/Seed.html":{}}}],["importcontents",{"_index":921,"title":{},"body":{"injectables/ImportService.html":{}}}],["importcontents(file",{"_index":929,"title":{},"body":{"injectables/ImportService.html":{}}}],["importorganizations",{"_index":922,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["importorganizations(file",{"_index":931,"title":{},"body":{"injectables/ImportService.html":{}}}],["importroles",{"_index":1306,"title":{},"body":{"injectables/Seed.html":{}}}],["imports",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{}}}],["importservice",{"_index":368,"title":{"injectables/ImportService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/ImportService.html":{},"classes/StorageController.html":{},"coverage.html":{},"overview.html":{}}}],["included",{"_index":1790,"title":{},"body":{"license.html":{}}}],["including",{"_index":1769,"title":{},"body":{"license.html":{}}}],["index",{"_index":489,"title":{"index.html":{}},"body":{"classes/Content.html":{},"controllers/IndexController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/StatusTask.html":{},"miscellaneous/variables.html":{}}}],["index(@req",{"_index":1021,"title":{},"body":{"controllers/IndexController.html":{}}}],["index(req",{"_index":990,"title":{},"body":{"controllers/IndexController.html":{}}}],["indexcontroller",{"_index":957,"title":{"controllers/IndexController.html":{}},"body":{"controllers/IndexController.html":{},"modules/SSRModule.html":{},"coverage.html":{}}}],["indicescreateparams",{"_index":488,"title":{},"body":{"classes/Content.html":{}}}],["influx",{"_index":1462,"title":{},"body":{"classes/StatusTask.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["influx.fieldtype.float",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["influx.fieldtype.integer",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["influx.influxdb(config.influx",{"_index":1879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["influx.query",{"_index":1504,"title":{},"body":{"classes/StatusTask.html":{}}}],["influx.writepoints",{"_index":1511,"title":{},"body":{"classes/StatusTask.html":{}}}],["influxdb",{"_index":1745,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"modules/SSRModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["info(...args",{"_index":747,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["info[sheetmap.map",{"_index":847,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["initelasticsearchindices",{"_index":1307,"title":{},"body":{"injectables/Seed.html":{}}}],["injectable",{"_index":225,"title":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"injectables/ContentService.html":{},"injectables/ImportService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"injectables/ContentService.html":{},"injectables/ImportService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectconnection",{"_index":933,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["injectrepository",{"_index":252,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"injectables/ContentService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["injectrepository(authority",{"_index":257,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["injectrepository(category",{"_index":440,"title":{},"body":{"injectables/CommonService.html":{}}}],["injectrepository(content",{"_index":619,"title":{},"body":{"injectables/ContentService.html":{}}}],["injectrepository(setting",{"_index":1436,"title":{},"body":{"injectables/SettingService.html":{}}}],["injectrepository(user",{"_index":1650,"title":{},"body":{"injectables/UserService.html":{}}}],["instanceof",{"_index":692,"title":{},"body":{"classes/ContextTrace.html":{},"classes/ExceptionsFilter.html":{},"classes/Logger.html":{}}}],["integer",{"_index":495,"title":{},"body":{"classes/Content.html":{}}}],["internalservererrorexception",{"_index":1526,"title":{},"body":{"classes/StorageController.html":{}}}],["interval",{"_index":1460,"title":{},"body":{"classes/StatusTask.html":{}}}],["interval(3000",{"_index":1449,"title":{},"body":{"classes/StatusTask.html":{}}}],["intervaljob",{"_index":1444,"title":{},"body":{"classes/StatusTask.html":{}}}],["ioredis",{"_index":438,"title":{},"body":{"injectables/CommonService.html":{},"controllers/IndexController.html":{}}}],["ismobilephone",{"_index":1157,"title":{},"body":{"classes/LoginDto.html":{}}}],["ismobilephone('zh",{"_index":1160,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnotempty",{"_index":786,"title":{},"body":{"classes/CreateContentDto.html":{},"classes/LoginDto.html":{},"classes/PasswordDto.html":{},"classes/UpdateContentDto.html":{}}}],["issuperadmin",{"_index":1226,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["item",{"_index":818,"title":{},"body":{"classes/ExcelHelper.html":{},"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["item.category",{"_index":945,"title":{},"body":{"injectables/ImportService.html":{}}}],["item.parent",{"_index":951,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["item.push(cellobj",{"_index":846,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["item.url.split('/').pop",{"_index":1018,"title":{},"body":{"controllers/IndexController.html":{},"miscellaneous/variables.html":{}}}],["item[mapkey",{"_index":830,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["j",{"_index":1017,"title":{},"body":{"controllers/IndexController.html":{},"miscellaneous/variables.html":{}}}],["jointable",{"_index":1239,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["js",{"_index":675,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["json",{"_index":94,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["jwt",{"_index":416,"title":{},"body":{"modules/CommonModule.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":1106,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":379,"title":{},"body":{"modules/CommonModule.html":{}}}],["jwtmodule.register(config.jwt",{"_index":417,"title":{},"body":{"modules/CommonModule.html":{}}}],["jwtservice",{"_index":1640,"title":{},"body":{"injectables/UserService.html":{}}}],["jwtstrategy",{"_index":374,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/CommonModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["k8s",{"_index":1747,"title":{},"body":{"index.html":{}}}],["key",{"_index":84,"title":{},"body":{"classes/Authority.html":{},"classes/Content.html":{},"classes/ExcelHelper.html":{},"injectables/ImportService.html":{},"classes/Organization.html":{},"miscellaneous/variables.html":{}}}],["key.split",{"_index":865,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["keywords",{"_index":1413,"title":{},"body":{"classes/Setting.html":{}}}],["kind",{"_index":1795,"title":{},"body":{"license.html":{}}}],["kv",{"_index":808,"title":{},"body":{"classes/ExcelHelper.html":{},"miscellaneous/enumerations.html":{}}}],["label",{"_index":82,"title":{},"body":{"classes/Authority.html":{}}}],["layout",{"_index":734,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["leftjoinandmapone('user.role",{"_index":1352,"title":{},"body":{"injectables/Seed.html":{}}}],["leftjoinandselect('user.org",{"_index":1351,"title":{},"body":{"injectables/Seed.html":{}}}],["legend",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"overview.html":{}}}],["length",{"_index":1722,"title":{},"body":{"miscellaneous/functions.html":{}}}],["level",{"_index":737,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["leveloutput",{"_index":710,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["leveloutput}${positionoutput",{"_index":729,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["liability",{"_index":1810,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1807,"title":{},"body":{"license.html":{}}}],["lib/elastic",{"_index":555,"title":{},"body":{"classes/Content.html":{},"injectables/SearchService.html":{},"classes/StatusTask.html":{}}}],["lib/excel",{"_index":151,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"injectables/ImportService.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{}}}],["lib/helper",{"_index":559,"title":{},"body":{"classes/Content.html":{}}}],["lib/influx",{"_index":1463,"title":{},"body":{"classes/StatusTask.html":{}}}],["lib/logger",{"_index":886,"title":{},"body":{"classes/ExceptionsFilter.html":{},"classes/StatusTask.html":{}}}],["license",{"_index":1750,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1749,"title":{},"body":{"index.html":{}}}],["limit",{"_index":1508,"title":{},"body":{"classes/StatusTask.html":{}}}],["limitation",{"_index":1770,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1798,"title":{},"body":{"license.html":{}}}],["lin",{"_index":1754,"title":{},"body":{"license.html":{}}}],["linenumber",{"_index":665,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["links",{"_index":1415,"title":{},"body":{"classes/Setting.html":{}}}],["list",{"_index":165,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/UserController.html":{}}}],["list(@query",{"_index":216,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/UserController.html":{}}}],["list(@req",{"_index":1050,"title":{},"body":{"controllers/IndexController.html":{}}}],["list(payload",{"_index":178,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/UserController.html":{}}}],["list(req",{"_index":992,"title":{},"body":{"controllers/IndexController.html":{}}}],["list/activities",{"_index":1052,"title":{},"body":{"controllers/IndexController.html":{}}}],["list/news",{"_index":1053,"title":{},"body":{"controllers/IndexController.html":{}}}],["list/scenery",{"_index":1051,"title":{},"body":{"controllers/IndexController.html":{}}}],["load",{"_index":791,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["load(workbook",{"_index":797,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["loadfrombuffer",{"_index":792,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["loadfrombuffer(buffer",{"_index":800,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["loadfromfile",{"_index":793,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["loadfromfile(filepath",{"_index":803,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["lodash",{"_index":251,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"controllers/IndexController.html":{},"classes/Logger.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["log",{"_index":1112,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["log(...args",{"_index":745,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["log4js",{"_index":672,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["log4js.addlayout('nestify",{"_index":684,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["log4js.configure",{"_index":730,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["log4js.getlogger",{"_index":738,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["log4js.loggingevent",{"_index":687,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logconfig",{"_index":685,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logconfig.type",{"_index":704,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent",{"_index":686,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent.data.foreach((value",{"_index":691,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent.level",{"_index":711,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent.level.tostring",{"_index":713,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent.pid.tostring",{"_index":705,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger",{"_index":15,"title":{"classes/Logger.html":{}},"body":{"modules/ApiModule.html":{},"classes/ContextTrace.html":{},"classes/ExceptionsFilter.html":{},"classes/Logger.html":{},"injectables/Seed.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["logger(req",{"_index":1723,"title":{},"body":{"miscellaneous/functions.html":{}}}],["logger.debug(logger.getstacktrace",{"_index":744,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.error('exception",{"_index":893,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["logger.error(`catch",{"_index":897,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["logger.error(err",{"_index":1548,"title":{},"body":{"classes/StorageController.html":{}}}],["logger.error(logger.getstacktrace",{"_index":752,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.error(request.headers.xhr",{"_index":894,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["logger.fatal(logger.getstacktrace",{"_index":754,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.info(logger.getstacktrace",{"_index":746,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.level",{"_index":739,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.log",{"_index":1476,"title":{},"body":{"classes/StatusTask.html":{}}}],["logger.log('seed",{"_index":1327,"title":{},"body":{"injectables/Seed.html":{}}}],["logger.log(`watching",{"_index":1483,"title":{},"body":{"classes/StatusTask.html":{}}}],["logger.log(event",{"_index":1494,"title":{},"body":{"classes/StatusTask.html":{}}}],["logger.log(filepath",{"_index":1552,"title":{},"body":{"classes/StorageController.html":{}}}],["logger.log(status",{"_index":1478,"title":{},"body":{"classes/StatusTask.html":{}}}],["logger.log(target",{"_index":1543,"title":{},"body":{"classes/StorageController.html":{}}}],["logger.log(users",{"_index":1355,"title":{},"body":{"injectables/Seed.html":{}}}],["logger.trace(logger.getstacktrace",{"_index":741,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.warn(logger.getstacktrace",{"_index":749,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel",{"_index":677,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["loggerlevel.debug",{"_index":715,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel.error",{"_index":722,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel.fatal",{"_index":724,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel.info",{"_index":718,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel.warn",{"_index":720,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerservice",{"_index":709,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logging",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":1133,"title":{},"body":{"classes/LoginController.html":{},"injectables/UserService.html":{}}}],["login(@body",{"_index":1146,"title":{},"body":{"classes/LoginController.html":{}}}],["login(account",{"_index":1646,"title":{},"body":{"injectables/UserService.html":{}}}],["login(dto",{"_index":1135,"title":{},"body":{"classes/LoginController.html":{}}}],["logincontroller",{"_index":17,"title":{"classes/LoginController.html":{}},"body":{"modules/ApiModule.html":{},"classes/LoginController.html":{},"coverage.html":{}}}],["logindto",{"_index":1136,"title":{"classes/LoginDto.html":{}},"body":{"classes/LoginController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["long",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["male",{"_index":1709,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manytomany",{"_index":148,"title":{},"body":{"classes/Authority.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["manytomany((type",{"_index":156,"title":{},"body":{"classes/Authority.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["manytomany(undefined",{"_index":104,"title":{},"body":{"classes/Authority.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["manytoone",{"_index":552,"title":{},"body":{"classes/Content.html":{},"classes/User.html":{}}}],["manytoone((type",{"_index":564,"title":{},"body":{"classes/Content.html":{},"classes/User.html":{}}}],["manytoone(undefined",{"_index":486,"title":{},"body":{"classes/Content.html":{},"classes/User.html":{}}}],["map",{"_index":107,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{}}}],["mapkey",{"_index":827,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["mappings",{"_index":490,"title":{},"body":{"classes/Content.html":{},"injectables/Seed.html":{}}}],["mark",{"_index":678,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["matching",{"_index":43,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"modules/SSRModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxage",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxlength",{"_index":1159,"title":{},"body":{"classes/LoginDto.html":{},"classes/PasswordDto.html":{}}}],["maxlength(12",{"_index":1164,"title":{},"body":{"classes/LoginDto.html":{},"classes/PasswordDto.html":{}}}],["md5",{"_index":1557,"title":{},"body":{"classes/StorageController.html":{}}}],["measurement",{"_index":1512,"title":{},"body":{"classes/StatusTask.html":{},"miscellaneous/variables.html":{}}}],["memory",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menu.children",{"_index":1014,"title":{},"body":{"controllers/IndexController.html":{},"miscellaneous/variables.html":{}}}],["menu.children.foreach((item",{"_index":1016,"title":{},"body":{"controllers/IndexController.html":{},"miscellaneous/variables.html":{}}}],["menu.children.length",{"_index":1015,"title":{},"body":{"controllers/IndexController.html":{},"miscellaneous/variables.html":{}}}],["menu_show",{"_index":1019,"title":{},"body":{"controllers/IndexController.html":{},"miscellaneous/variables.html":{}}}],["menu_show.children[order].name",{"_index":1046,"title":{},"body":{"controllers/IndexController.html":{}}}],["menus",{"_index":443,"title":{},"body":{"injectables/CommonService.html":{},"controllers/IndexController.html":{},"miscellaneous/variables.html":{}}}],["menus.foreach((menu",{"_index":1013,"title":{},"body":{"controllers/IndexController.html":{},"miscellaneous/variables.html":{}}}],["menus[index",{"_index":1020,"title":{},"body":{"controllers/IndexController.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1800,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1774,"title":{},"body":{"license.html":{}}}],["message",{"_index":789,"title":{},"body":{"classes/CreateContentDto.html":{},"classes/ExceptionsFilter.html":{},"controllers/IndexController.html":{},"classes/LoginDto.html":{},"classes/PasswordDto.html":{},"classes/UpdateContentDto.html":{}}}],["message(@req",{"_index":1078,"title":{},"body":{"controllers/IndexController.html":{}}}],["message(req",{"_index":995,"title":{},"body":{"controllers/IndexController.html":{}}}],["messagelist",{"_index":690,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["messagelist.join",{"_index":701,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["messagelist.push(value",{"_index":699,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["messageoutput",{"_index":700,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["middlewareconsumer",{"_index":8,"title":{},"body":{"modules/ApiModule.html":{}}}],["mimetype",{"_index":1559,"title":{},"body":{"classes/StorageController.html":{}}}],["minlength",{"_index":1158,"title":{},"body":{"classes/LoginDto.html":{},"classes/PasswordDto.html":{}}}],["minlength(8",{"_index":1162,"title":{},"body":{"classes/LoginDto.html":{},"classes/PasswordDto.html":{}}}],["minute",{"_index":1469,"title":{},"body":{"classes/StatusTask.html":{}}}],["miscellaneous",{"_index":1703,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{}}],["mit",{"_index":1748,"title":{},"body":{"index.html":{},"license.html":{}}}],["mm",{"_index":522,"title":{},"body":{"classes/Content.html":{},"classes/ContextTrace.html":{},"classes/ExceptionsFilter.html":{},"classes/Logger.html":{},"classes/StorageController.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":1773,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/SSRModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/SSRModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulename",{"_index":688,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["moduleoutput",{"_index":708,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["modules",{"_index":1818,"title":{"modules.html":{}},"body":{}}],["moment",{"_index":551,"title":{},"body":{"classes/Content.html":{},"classes/ContextTrace.html":{},"classes/ExceptionsFilter.html":{},"classes/Logger.html":{},"classes/StorageController.html":{}}}],["moment().format('yyyy",{"_index":571,"title":{},"body":{"classes/Content.html":{},"classes/ExceptionsFilter.html":{},"classes/StorageController.html":{}}}],["moment(logevent.starttime).format('yyyy",{"_index":707,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["moment(val).format('yyyy",{"_index":521,"title":{},"body":{"classes/Content.html":{},"miscellaneous/variables.html":{}}}],["month",{"_index":1472,"title":{},"body":{"classes/StatusTask.html":{}}}],["name",{"_index":68,"title":{},"body":{"classes/Authority.html":{},"injectables/AuthorityService.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/Organization.html":{},"injectables/OrganizationService.html":{},"classes/Role.html":{},"injectables/Seed.html":{},"classes/StorageController.html":{}}}],["namespace",{"_index":1465,"title":{},"body":{"classes/StatusTask.html":{}}}],["nest",{"_index":387,"title":{},"body":{"modules/CommonModule.html":{},"classes/StatusTask.html":{}}}],["nestify",{"_index":735,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":384,"title":{},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{},"controllers/IndexController.html":{}}}],["nestjs/common",{"_index":14,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ExceptionsFilter.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginController.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"modules/SSRModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StorageController.html":{},"classes/UserController.html":{},"injectables/UserService.html":{}}}],["nestjs/jwt",{"_index":380,"title":{},"body":{"modules/CommonModule.html":{},"injectables/UserService.html":{}}}],["nestjs/passport",{"_index":201,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"modules/CommonModule.html":{},"classes/ContentController.html":{},"injectables/JwtStrategy.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{}}}],["nestjs/swagger",{"_index":193,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/CreateContentDto.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/OrganizationController.html":{},"classes/PasswordDto.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/UserController.html":{}}}],["nestjs/typeorm",{"_index":253,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"injectables/ContentService.html":{},"injectables/ImportService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/Seed.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["nestjs/websockets",{"_index":1458,"title":{},"body":{"classes/StatusTask.html":{}}}],["nestjs、nextjs、fastify、typeorm、elasticsearch、ant",{"_index":1727,"title":{},"body":{"index.html":{}}}],["nestmodule",{"_index":13,"title":{},"body":{"modules/ApiModule.html":{}}}],["nestschedule",{"_index":1442,"title":{},"body":{"classes/StatusTask.html":{}}}],["new",{"_index":213,"title":{},"body":{"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RoleController.html":{},"injectables/SearchService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news",{"_index":942,"title":{},"body":{"injectables/ImportService.html":{}}}],["news.map((item",{"_index":944,"title":{},"body":{"injectables/ImportService.html":{}}}],["news_list",{"_index":1028,"title":{},"body":{"controllers/IndexController.html":{}}}],["next",{"_index":1724,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nickname",{"_index":1343,"title":{},"body":{"injectables/Seed.html":{},"classes/User.html":{}}}],["noise",{"_index":454,"title":{},"body":{"injectables/CommonService.html":{}}}],["noninfringement",{"_index":1804,"title":{},"body":{"license.html":{}}}],["normal",{"_index":1711,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notice",{"_index":1788,"title":{},"body":{"license.html":{}}}],["notice_list",{"_index":1029,"title":{},"body":{"controllers/IndexController.html":{}}}],["null",{"_index":563,"title":{},"body":{"classes/Content.html":{},"classes/ExcelHelper.html":{}}}],["number",{"_index":114,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/Logger.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"miscellaneous/functions.html":{}}}],["number(page",{"_index":1054,"title":{},"body":{"controllers/IndexController.html":{}}}],["obj",{"_index":838,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["obj.length",{"_index":841,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["object",{"_index":106,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["object.keys(files).length",{"_index":1536,"title":{},"body":{"classes/StorageController.html":{}}}],["object.keys(res).foreach(async",{"_index":940,"title":{},"body":{"injectables/ImportService.html":{}}}],["object.keys(rowsmap).foreach(key",{"_index":860,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["obtaining",{"_index":1761,"title":{},"body":{"license.html":{}}}],["officetel",{"_index":1406,"title":{},"body":{"classes/Setting.html":{}}}],["oldpassword",{"_index":1222,"title":{},"body":{"classes/PasswordDto.html":{}}}],["on('all",{"_index":1486,"title":{},"body":{"classes/StatusTask.html":{}}}],["oncejob",{"_index":1480,"title":{},"body":{"classes/StatusTask.html":{}}}],["onetomany",{"_index":319,"title":{},"body":{"classes/Category.html":{},"classes/Organization.html":{}}}],["onetomany((type",{"_index":321,"title":{},"body":{"classes/Category.html":{},"classes/Organization.html":{}}}],["onetomany(undefined",{"_index":308,"title":{},"body":{"classes/Category.html":{},"classes/Organization.html":{}}}],["onlinesaleurl",{"_index":1407,"title":{},"body":{"classes/Setting.html":{}}}],["openinfo",{"_index":1411,"title":{},"body":{"classes/Setting.html":{}}}],["optional",{"_index":1468,"title":{},"body":{"classes/StatusTask.html":{}}}],["order",{"_index":1012,"title":{},"body":{"controllers/IndexController.html":{},"classes/StatusTask.html":{},"miscellaneous/variables.html":{}}}],["org",{"_index":1571,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["org.id",{"_index":953,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["org.users",{"_index":1596,"title":{},"body":{"classes/User.html":{}}}],["organization",{"_index":396,"title":{"classes/Organization.html":{}},"body":{"modules/CommonModule.html":{},"injectables/ImportService.html":{},"classes/Organization.html":{},"injectables/OrganizationService.html":{},"injectables/Seed.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["organization.create(payload",{"_index":1212,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["organization.entity",{"_index":1592,"title":{},"body":{"classes/User.html":{}}}],["organization.parent",{"_index":1213,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["organization.sheetsmap",{"_index":947,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["organizationarr",{"_index":949,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["organizationarr.find((org",{"_index":952,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["organizationarr.push(organization.create(item",{"_index":954,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["organizationcontroller",{"_index":29,"title":{"classes/OrganizationController.html":{}},"body":{"modules/ApiModule.html":{},"classes/OrganizationController.html":{},"coverage.html":{}}}],["organizationrepository",{"_index":1202,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["organizations",{"_index":935,"title":{},"body":{"injectables/ImportService.html":{},"classes/Organization.html":{},"injectables/Seed.html":{}}}],["organizations.foreach((item",{"_index":950,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["organizationservice",{"_index":369,"title":{"injectables/OrganizationService.html":{}},"body":{"modules/CommonModule.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"coverage.html":{},"overview.html":{}}}],["organizationsresult",{"_index":1375,"title":{},"body":{"injectables/Seed.html":{}}}],["organizationsresult['organizations",{"_index":1377,"title":{},"body":{"injectables/Seed.html":{}}}],["orm",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["otherwise",{"_index":1814,"title":{},"body":{"license.html":{}}}],["out",{"_index":1816,"title":{},"body":{"license.html":{}}}],["overview",{"_index":1819,"title":{"overview.html":{}},"body":{}}],["page",{"_index":1047,"title":{},"body":{"controllers/IndexController.html":{}}}],["pagesize",{"_index":1026,"title":{},"body":{"controllers/IndexController.html":{}}}],["param",{"_index":196,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"controllers/IndexController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/UserController.html":{},"miscellaneous/variables.html":{}}}],["params",{"_index":966,"title":{},"body":{"controllers/IndexController.html":{},"classes/UserController.html":{}}}],["parent",{"_index":69,"title":{},"body":{"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Category.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["parent(@body",{"_index":221,"title":{},"body":{"classes/AuthorityController.html":{},"classes/OrganizationController.html":{}}}],["parent(dto",{"_index":182,"title":{},"body":{"classes/AuthorityController.html":{},"classes/OrganizationController.html":{}}}],["parent(payload",{"_index":240,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/OrganizationService.html":{}}}],["parents",{"_index":654,"title":{},"body":{"injectables/ContentService.html":{},"controllers/IndexController.html":{}}}],["particular",{"_index":1802,"title":{},"body":{"license.html":{}}}],["passport",{"_index":1101,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportmodule",{"_index":378,"title":{},"body":{"modules/CommonModule.html":{}}}],["passportmodule.register",{"_index":414,"title":{},"body":{"modules/CommonModule.html":{}}}],["passportstrategy",{"_index":1102,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1104,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":1151,"title":{},"body":{"classes/LoginDto.html":{},"classes/PasswordDto.html":{},"injectables/Seed.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["passworddto",{"_index":1220,"title":{"classes/PasswordDto.html":{}},"body":{"classes/PasswordDto.html":{},"classes/UserController.html":{},"coverage.html":{}}}],["path",{"_index":133,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/ContextTrace.html":{},"classes/ExceptionsFilter.html":{},"controllers/IndexController.html":{},"classes/Logger.html":{},"classes/Organization.html":{},"classes/Role.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["path.basename(filename",{"_index":769,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["path.extname(filename).length",{"_index":767,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["path.startswith",{"_index":290,"title":{},"body":{"classes/Base.html":{}}}],["payload",{"_index":181,"title":{},"body":{"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"injectables/JwtStrategy.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/SettingService.html":{},"classes/UserController.html":{},"injectables/UserService.html":{}}}],["payload.category",{"_index":626,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["payload.create_at",{"_index":1658,"title":{},"body":{"injectables/UserService.html":{}}}],["payload.create_at.pop",{"_index":1662,"title":{},"body":{"injectables/UserService.html":{}}}],["payload.create_at.shift",{"_index":1661,"title":{},"body":{"injectables/UserService.html":{}}}],["payload.create_at.split",{"_index":1659,"title":{},"body":{"injectables/UserService.html":{}}}],["payload.fields.split",{"_index":648,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["payload.index",{"_index":1300,"title":{},"body":{"injectables/SearchService.html":{}}}],["payload.isexport",{"_index":643,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["payload.keyword",{"_index":629,"title":{},"body":{"injectables/ContentService.html":{},"injectables/RoleService.html":{},"injectables/SearchService.html":{},"injectables/UserService.html":{}}}],["payload.order",{"_index":639,"title":{},"body":{"injectables/ContentService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["payload.org",{"_index":1656,"title":{},"body":{"injectables/UserService.html":{}}}],["payload.page",{"_index":623,"title":{},"body":{"injectables/ContentService.html":{},"injectables/SearchService.html":{},"injectables/UserService.html":{}}}],["payload.pagesize",{"_index":624,"title":{},"body":{"injectables/ContentService.html":{},"injectables/RoleService.html":{},"injectables/SearchService.html":{},"injectables/UserService.html":{}}}],["payload.parentid",{"_index":264,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/OrganizationService.html":{}}}],["payload.publish_at",{"_index":631,"title":{},"body":{"injectables/ContentService.html":{}}}],["payload.publish_at.pop",{"_index":637,"title":{},"body":{"injectables/ContentService.html":{}}}],["payload.publish_at.shift",{"_index":636,"title":{},"body":{"injectables/ContentService.html":{}}}],["payload.publish_at.split",{"_index":632,"title":{},"body":{"injectables/ContentService.html":{}}}],["payload.sort",{"_index":638,"title":{},"body":{"injectables/ContentService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["payload.type",{"_index":1301,"title":{},"body":{"injectables/SearchService.html":{}}}],["permission",{"_index":1755,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1781,"title":{},"body":{"license.html":{}}}],["person",{"_index":1760,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1782,"title":{},"body":{"license.html":{}}}],["pid",{"_index":112,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Organization.html":{},"miscellaneous/variables.html":{}}}],["pidusage",{"_index":1454,"title":{},"body":{"classes/StatusTask.html":{}}}],["pidusage(process.pid",{"_index":1477,"title":{},"body":{"classes/StatusTask.html":{}}}],["plaintoclass",{"_index":142,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["plaintoclass(authority",{"_index":161,"title":{},"body":{"classes/Authority.html":{}}}],["plaintoclass(category",{"_index":323,"title":{},"body":{"classes/Category.html":{}}}],["plaintoclass(content",{"_index":566,"title":{},"body":{"classes/Content.html":{}}}],["plaintoclass(organization",{"_index":1181,"title":{},"body":{"classes/Organization.html":{}}}],["plaintoclass(role",{"_index":1243,"title":{},"body":{"classes/Role.html":{}}}],["plaintoclass(setting",{"_index":1419,"title":{},"body":{"classes/Setting.html":{}}}],["plaintoclass(user",{"_index":1597,"title":{},"body":{"classes/User.html":{}}}],["pns",{"_index":1410,"title":{},"body":{"classes/Setting.html":{}}}],["port",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":1792,"title":{},"body":{"license.html":{}}}],["position",{"_index":689,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["positionoutput",{"_index":702,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["post",{"_index":172,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"controllers/IndexController.html":{},"classes/LoginController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{}}}],["post('checksvgcode",{"_index":971,"title":{},"body":{"controllers/IndexController.html":{}}}],["post('savesuggesstion",{"_index":999,"title":{},"body":{"controllers/IndexController.html":{}}}],["post()@apiconsumes('multipart/form",{"_index":1519,"title":{},"body":{"classes/StorageController.html":{}}}],["post()@usepipes(new",{"_index":1137,"title":{},"body":{"classes/LoginController.html":{}}}],["postcode",{"_index":1401,"title":{},"body":{"classes/Setting.html":{}}}],["postgres",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ppid",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":1719,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["primarygeneratedcolumn",{"_index":280,"title":{},"body":{"classes/Base.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":120,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["private",{"_index":258,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"injectables/ContentService.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/Seed.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["process.env.node_env",{"_index":906,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["production",{"_index":907,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["properties",{"_index":491,"title":{},"body":{"classes/Content.html":{},"injectables/Seed.html":{}}}],["provided",{"_index":1793,"title":{},"body":{"license.html":{}}}],["providers",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"overview.html":{}}}],["public",{"_index":662,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["publish",{"_index":1775,"title":{},"body":{"license.html":{}}}],["publish_at",{"_index":472,"title":{},"body":{"classes/Content.html":{},"classes/CreateContentDto.html":{},"classes/UpdateContentDto.html":{},"miscellaneous/variables.html":{}}}],["purpose",{"_index":1803,"title":{},"body":{"license.html":{}}}],["pushstatus",{"_index":1445,"title":{},"body":{"classes/StatusTask.html":{}}}],["put",{"_index":189,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SettingController.html":{},"classes/UserController.html":{}}}],["put('parent",{"_index":183,"title":{},"body":{"classes/AuthorityController.html":{},"classes/OrganizationController.html":{}}}],["put('password",{"_index":1633,"title":{},"body":{"classes/UserController.html":{}}}],["put('password')@usepipes(new",{"_index":1611,"title":{},"body":{"classes/UserController.html":{}}}],["qb",{"_index":621,"title":{},"body":{"injectables/ContentService.html":{},"injectables/RoleService.html":{},"injectables/SearchService.html":{},"injectables/UserService.html":{}}}],["qb.addorderby('t.create_at",{"_index":1663,"title":{},"body":{"injectables/UserService.html":{}}}],["qb.addorderby('t.publish_at",{"_index":642,"title":{},"body":{"injectables/ContentService.html":{}}}],["qb.addorderby('t.sort",{"_index":641,"title":{},"body":{"injectables/ContentService.html":{},"injectables/RoleService.html":{}}}],["qb.addorderby(`t.${payload.sort",{"_index":640,"title":{},"body":{"injectables/ContentService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["qb.andwhere",{"_index":633,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["qb.andwhere('organization.id",{"_index":1657,"title":{},"body":{"injectables/UserService.html":{}}}],["qb.andwhere(`t.name",{"_index":1277,"title":{},"body":{"injectables/RoleService.html":{}}}],["qb.andwhere(`t.nickname",{"_index":1655,"title":{},"body":{"injectables/UserService.html":{}}}],["qb.andwhere(`t.title",{"_index":630,"title":{},"body":{"injectables/ContentService.html":{}}}],["qb.getmany",{"_index":645,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["qb.getmanyandcount",{"_index":651,"title":{},"body":{"injectables/ContentService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["qb.innerjoinandselect('t.category",{"_index":627,"title":{},"body":{"injectables/ContentService.html":{}}}],["qb.leftjoinandselect('t.authoritys",{"_index":1276,"title":{},"body":{"injectables/RoleService.html":{}}}],["qb.leftjoinandselect('t.org",{"_index":1654,"title":{},"body":{"injectables/UserService.html":{}}}],["qb.leftjoinandselect('t.roles",{"_index":1653,"title":{},"body":{"injectables/UserService.html":{}}}],["qb.query(new",{"_index":1296,"title":{},"body":{"injectables/SearchService.html":{}}}],["qb.size(payload.pagesize).from((payload.page",{"_index":1298,"title":{},"body":{"injectables/SearchService.html":{}}}],["qb.skip(payload.page",{"_index":649,"title":{},"body":{"injectables/ContentService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["qb.take(payload.pagesize",{"_index":650,"title":{},"body":{"injectables/ContentService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["qb.tojson",{"_index":1302,"title":{},"body":{"injectables/SearchService.html":{}}}],["query",{"_index":195,"title":{},"body":{"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"controllers/IndexController.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/UserController.html":{},"injectables/UserService.html":{}}}],["query(payload",{"_index":242,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["rbac",{"_index":1743,"title":{},"body":{"index.html":{}}}],["react",{"_index":1741,"title":{},"body":{"index.html":{}}}],["readfileasync",{"_index":1700,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["readonly",{"_index":72,"title":{},"body":{"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/BaseService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/SearchController.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/UserController.html":{},"injectables/UserService.html":{}}}],["recommendation",{"_index":1396,"title":{},"body":{"classes/Setting.html":{}}}],["redis",{"_index":385,"title":{},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{},"controllers/IndexController.html":{},"miscellaneous/variables.html":{}}}],["redisclient",{"_index":421,"title":{},"body":{"injectables/CommonService.html":{},"controllers/IndexController.html":{}}}],["redismodule",{"_index":383,"title":{},"body":{"modules/CommonModule.html":{}}}],["redismodule.register(config.redis",{"_index":412,"title":{},"body":{"modules/CommonModule.html":{}}}],["redisservice",{"_index":426,"title":{},"body":{"injectables/CommonService.html":{},"controllers/IndexController.html":{}}}],["relations",{"_index":653,"title":{},"body":{"injectables/ContentService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["remove",{"_index":166,"title":{},"body":{"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/BaseService.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"injectables/SettingService.html":{},"classes/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@query",{"_index":223,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/UserController.html":{}}}],["remove(ids",{"_index":248,"title":{},"body":{"injectables/AuthorityService.html":{},"classes/BaseService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["remove(payload",{"_index":185,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/UserController.html":{}}}],["repository",{"_index":294,"title":{},"body":{"classes/BaseService.html":{},"injectables/ContentService.html":{},"injectables/RoleService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["req",{"_index":969,"title":{},"body":{"controllers/IndexController.html":{},"classes/StorageController.html":{},"miscellaneous/functions.html":{}}}],["req.raw",{"_index":1044,"title":{},"body":{"controllers/IndexController.html":{}}}],["req.raw.body.action",{"_index":1539,"title":{},"body":{"classes/StorageController.html":{}}}],["req.raw.body.target",{"_index":1542,"title":{},"body":{"classes/StorageController.html":{}}}],["req.raw.files",{"_index":1535,"title":{},"body":{"classes/StorageController.html":{}}}],["request",{"_index":891,"title":{},"body":{"classes/ExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["request.headers.xhr",{"_index":908,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["request.raw",{"_index":910,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["request.raw.method",{"_index":899,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["request.raw.url",{"_index":900,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["request.url",{"_index":905,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["request.user",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user[param",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1521,"title":{},"body":{"classes/StorageController.html":{}}}],["res",{"_index":937,"title":{},"body":{"injectables/ImportService.html":{},"controllers/IndexController.html":{},"classes/StorageController.html":{},"miscellaneous/functions.html":{}}}],["res.render",{"_index":1034,"title":{},"body":{"controllers/IndexController.html":{}}}],["res.render('/announcement",{"_index":1074,"title":{},"body":{"controllers/IndexController.html":{}}}],["res.render('/concact",{"_index":1077,"title":{},"body":{"controllers/IndexController.html":{}}}],["res.render('/intro",{"_index":1037,"title":{},"body":{"controllers/IndexController.html":{}}}],["res.render('/message",{"_index":1079,"title":{},"body":{"controllers/IndexController.html":{}}}],["res.render('/suggestions",{"_index":1081,"title":{},"body":{"controllers/IndexController.html":{}}}],["res.send",{"_index":1088,"title":{},"body":{"controllers/IndexController.html":{},"classes/StorageController.html":{}}}],["res.send(await",{"_index":1546,"title":{},"body":{"classes/StorageController.html":{}}}],["res.send(svg_obj",{"_index":1085,"title":{},"body":{"controllers/IndexController.html":{}}}],["res['organizations",{"_index":948,"title":{},"body":{"injectables/ImportService.html":{}}}],["resolve",{"_index":1316,"title":{},"body":{"injectables/Seed.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{}}}],["resolve('./**/*.entity.ts",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolve('./seeds/authoritys.xlsx",{"_index":1378,"title":{},"body":{"injectables/Seed.html":{}}}],["resolve('./seeds/categorys.xlsx",{"_index":1366,"title":{},"body":{"injectables/Seed.html":{}}}],["resolve('./seeds/organizations.xlsx",{"_index":1376,"title":{},"body":{"injectables/Seed.html":{}}}],["resolve('./seeds/roles.xlsx",{"_index":1388,"title":{},"body":{"injectables/Seed.html":{}}}],["resolve('./seeds/settings.xlsx",{"_index":1331,"title":{},"body":{"injectables/Seed.html":{}}}],["resolve('./static",{"_index":1482,"title":{},"body":{"classes/StatusTask.html":{}}}],["resolve(config.static.root)}${config.static.uploadpath}/${path",{"_index":1551,"title":{},"body":{"classes/StorageController.html":{}}}],["response",{"_index":889,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["response.code(httpstatus.internal_server_error).header('content",{"_index":918,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["response.code(httpstatus.internal_server_error).send(html",{"_index":917,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["response.code(status).header('content",{"_index":901,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["response.type('text/html",{"_index":916,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["restriction",{"_index":1768,"title":{},"body":{"license.html":{}}}],["result",{"_index":42,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"modules/SSRModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result['authoritys",{"_index":1381,"title":{},"body":{"injectables/Seed.html":{}}}],["result[0",{"_index":1048,"title":{},"body":{"controllers/IndexController.html":{}}}],["result[0][0",{"_index":1049,"title":{},"body":{"controllers/IndexController.html":{}}}],["return",{"_index":158,"title":{},"body":{"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["rights",{"_index":1771,"title":{},"body":{"license.html":{}}}],["role",{"_index":103,"title":{"classes/Role.html":{}},"body":{"classes/Authority.html":{},"modules/CommonModule.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"injectables/Seed.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["role.authoritys",{"_index":157,"title":{},"body":{"classes/Authority.html":{}}}],["role.create(payload",{"_index":1278,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.entity",{"_index":1591,"title":{},"body":{"classes/User.html":{}}}],["role.sheetsmap",{"_index":1389,"title":{},"body":{"injectables/Seed.html":{}}}],["role.token",{"_index":1353,"title":{},"body":{"injectables/Seed.html":{},"classes/User.html":{}}}],["role.users",{"_index":1595,"title":{},"body":{"classes/User.html":{}}}],["roleadmin",{"_index":1337,"title":{},"body":{"injectables/Seed.html":{}}}],["rolecontroller",{"_index":31,"title":{"classes/RoleController.html":{}},"body":{"modules/ApiModule.html":{},"classes/RoleController.html":{},"coverage.html":{}}}],["rolerepository",{"_index":1267,"title":{},"body":{"injectables/RoleService.html":{}}}],["roles",{"_index":70,"title":{},"body":{"classes/Authority.html":{},"classes/Role.html":{},"injectables/Seed.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["rolesarr",{"_index":1391,"title":{},"body":{"injectables/Seed.html":{}}}],["rolesarr.push(role.create(item",{"_index":1392,"title":{},"body":{"injectables/Seed.html":{}}}],["roleservice",{"_index":370,"title":{"injectables/RoleService.html":{}},"body":{"modules/CommonModule.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["rolesresult",{"_index":1387,"title":{},"body":{"injectables/Seed.html":{}}}],["rolesresult['roles",{"_index":1390,"title":{},"body":{"injectables/Seed.html":{}}}],["root",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roots",{"_index":269,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/OrganizationService.html":{}}}],["roots.foreach(root",{"_index":271,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/OrganizationService.html":{}}}],["row",{"_index":859,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["row.getcell(1",{"_index":826,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["row.getcell(2).value",{"_index":831,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["row:${rownumber",{"_index":829,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["row[headerkey",{"_index":868,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["row[key",{"_index":866,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["row_status",{"_index":78,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["rownumber",{"_index":824,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["rows",{"_index":857,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["rowsmap",{"_index":500,"title":{},"body":{"classes/Content.html":{},"classes/ExcelHelper.html":{},"classes/Setting.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rowsmap[cellkey.value.tostring",{"_index":828,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["rowsmap[item",{"_index":854,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["rowsmap[item].key",{"_index":855,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["rowsmap[key].handler",{"_index":862,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["rowsmap[key].key",{"_index":864,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["rowstatus",{"_index":122,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["rowstatus.normal",{"_index":287,"title":{},"body":{"classes/Base.html":{}}}],["roy",{"_index":1753,"title":{},"body":{"license.html":{}}}],["salt",{"_index":1601,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["save",{"_index":229,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["save(payload",{"_index":244,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"injectables/ContentService.html":{},"injectables/OrganizationService.html":{},"injectables/RoleService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["savesuggesstion",{"_index":963,"title":{},"body":{"controllers/IndexController.html":{}}}],["savesuggesstion(@req",{"_index":1089,"title":{},"body":{"controllers/IndexController.html":{}}}],["savesuggesstion(req",{"_index":998,"title":{},"body":{"controllers/IndexController.html":{}}}],["scenic_list",{"_index":1030,"title":{},"body":{"controllers/IndexController.html":{}}}],["schedule",{"_index":388,"title":{},"body":{"modules/CommonModule.html":{},"classes/StatusTask.html":{}}}],["schedulemodule",{"_index":386,"title":{},"body":{"modules/CommonModule.html":{}}}],["schedulemodule.register",{"_index":413,"title":{},"body":{"modules/CommonModule.html":{}}}],["schema",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":556,"title":{},"body":{"classes/Content.html":{},"classes/ExceptionsFilter.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/StatusTask.html":{}}}],["search(@body",{"_index":1290,"title":{},"body":{"classes/SearchController.html":{}}}],["search(payload",{"_index":1285,"title":{},"body":{"classes/SearchController.html":{},"injectables/SearchService.html":{}}}],["search.ts",{"_index":1693,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["search_analyzer",{"_index":494,"title":{},"body":{"classes/Content.html":{},"injectables/Seed.html":{}}}],["searchcontroller",{"_index":35,"title":{"classes/SearchController.html":{}},"body":{"modules/ApiModule.html":{},"classes/SearchController.html":{},"coverage.html":{}}}],["searchservice",{"_index":371,"title":{"injectables/SearchService.html":{}},"body":{"modules/CommonModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"coverage.html":{},"overview.html":{}}}],["second",{"_index":1467,"title":{},"body":{"classes/StatusTask.html":{}}}],["secret",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretkey",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":1108,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secretorprivatekey",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secure",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seed",{"_index":56,"title":{"injectables/Seed.html":{}},"body":{"modules/AppModule.html":{},"injectables/Seed.html":{},"coverage.html":{},"overview.html":{}}}],["select",{"_index":1505,"title":{},"body":{"classes/StatusTask.html":{}}}],["sell",{"_index":1779,"title":{},"body":{"license.html":{}}}],["seo",{"_index":1412,"title":{},"body":{"classes/Setting.html":{}}}],["server",{"_index":1443,"title":{},"body":{"classes/StatusTask.html":{}}}],["server/.../content.entity.ts",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../decorator.ts",{"_index":1714,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["server/.../elastic",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../enum.ts",{"_index":1706,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server/.../excel.ts",{"_index":1705,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server/.../helper.ts",{"_index":1716,"title":{},"body":{"miscellaneous/functions.html":{}}}],["server/.../index.controller.ts",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../index.ts",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../influx.ts",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../logger.ts",{"_index":1707,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["server/.../main.ts",{"_index":1715,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["server/.../middlewares.ts",{"_index":1717,"title":{},"body":{"miscellaneous/functions.html":{}}}],["server/database",{"_index":1734,"title":{},"body":{"index.html":{}}}],["server/package.json",{"_index":1733,"title":{},"body":{"index.html":{}}}],["server/src/api/api.module.ts",{"_index":5,"title":{},"body":{"modules/ApiModule.html":{}}}],["server/src/api/api.module.ts:29",{"_index":9,"title":{},"body":{"modules/ApiModule.html":{}}}],["server/src/api/controllers/authority.controller.ts",{"_index":162,"title":{},"body":{"classes/AuthorityController.html":{},"coverage.html":{}}}],["server/src/api/controllers/authority.controller.ts:24",{"_index":170,"title":{},"body":{"classes/AuthorityController.html":{}}}],["server/src/api/controllers/authority.controller.ts:28",{"_index":177,"title":{},"body":{"classes/AuthorityController.html":{}}}],["server/src/api/controllers/authority.controller.ts:35",{"_index":180,"title":{},"body":{"classes/AuthorityController.html":{}}}],["server/src/api/controllers/authority.controller.ts:40",{"_index":173,"title":{},"body":{"classes/AuthorityController.html":{}}}],["server/src/api/controllers/authority.controller.ts:45",{"_index":190,"title":{},"body":{"classes/AuthorityController.html":{}}}],["server/src/api/controllers/authority.controller.ts:50",{"_index":184,"title":{},"body":{"classes/AuthorityController.html":{}}}],["server/src/api/controllers/authority.controller.ts:55",{"_index":187,"title":{},"body":{"classes/AuthorityController.html":{}}}],["server/src/api/controllers/category.controller.ts",{"_index":324,"title":{},"body":{"classes/CategoryController.html":{},"coverage.html":{}}}],["server/src/api/controllers/category.controller.ts:24",{"_index":327,"title":{},"body":{"classes/CategoryController.html":{}}}],["server/src/api/controllers/category.controller.ts:28",{"_index":329,"title":{},"body":{"classes/CategoryController.html":{}}}],["server/src/api/controllers/category.controller.ts:35",{"_index":330,"title":{},"body":{"classes/CategoryController.html":{}}}],["server/src/api/controllers/category.controller.ts:45",{"_index":328,"title":{},"body":{"classes/CategoryController.html":{}}}],["server/src/api/controllers/category.controller.ts:50",{"_index":332,"title":{},"body":{"classes/CategoryController.html":{}}}],["server/src/api/controllers/category.controller.ts:55",{"_index":331,"title":{},"body":{"classes/CategoryController.html":{}}}],["server/src/api/controllers/content.controller.ts",{"_index":591,"title":{},"body":{"classes/ContentController.html":{},"coverage.html":{}}}],["server/src/api/controllers/content.controller.ts:24",{"_index":593,"title":{},"body":{"classes/ContentController.html":{}}}],["server/src/api/controllers/content.controller.ts:28",{"_index":597,"title":{},"body":{"classes/ContentController.html":{}}}],["server/src/api/controllers/content.controller.ts:35",{"_index":598,"title":{},"body":{"classes/ContentController.html":{}}}],["server/src/api/controllers/content.controller.ts:40",{"_index":596,"title":{},"body":{"classes/ContentController.html":{}}}],["server/src/api/controllers/content.controller.ts:45",{"_index":594,"title":{},"body":{"classes/ContentController.html":{}}}],["server/src/api/controllers/content.controller.ts:50",{"_index":600,"title":{},"body":{"classes/ContentController.html":{}}}],["server/src/api/controllers/content.controller.ts:55",{"_index":599,"title":{},"body":{"classes/ContentController.html":{}}}],["server/src/api/controllers/login.controller.ts",{"_index":1132,"title":{},"body":{"classes/LoginController.html":{},"coverage.html":{}}}],["server/src/api/controllers/login.controller.ts:14",{"_index":1139,"title":{},"body":{"classes/LoginController.html":{}}}],["server/src/api/controllers/login.controller.ts:9",{"_index":1134,"title":{},"body":{"classes/LoginController.html":{}}}],["server/src/api/controllers/organization.controller.ts",{"_index":1182,"title":{},"body":{"classes/OrganizationController.html":{},"coverage.html":{}}}],["server/src/api/controllers/organization.controller.ts:24",{"_index":1184,"title":{},"body":{"classes/OrganizationController.html":{}}}],["server/src/api/controllers/organization.controller.ts:28",{"_index":1186,"title":{},"body":{"classes/OrganizationController.html":{}}}],["server/src/api/controllers/organization.controller.ts:35",{"_index":1187,"title":{},"body":{"classes/OrganizationController.html":{}}}],["server/src/api/controllers/organization.controller.ts:40",{"_index":1185,"title":{},"body":{"classes/OrganizationController.html":{}}}],["server/src/api/controllers/organization.controller.ts:45",{"_index":1190,"title":{},"body":{"classes/OrganizationController.html":{}}}],["server/src/api/controllers/organization.controller.ts:50",{"_index":1188,"title":{},"body":{"classes/OrganizationController.html":{}}}],["server/src/api/controllers/organization.controller.ts:55",{"_index":1189,"title":{},"body":{"classes/OrganizationController.html":{}}}],["server/src/api/controllers/role.controller.ts",{"_index":1247,"title":{},"body":{"classes/RoleController.html":{},"coverage.html":{}}}],["server/src/api/controllers/role.controller.ts:24",{"_index":1249,"title":{},"body":{"classes/RoleController.html":{}}}],["server/src/api/controllers/role.controller.ts:28",{"_index":1252,"title":{},"body":{"classes/RoleController.html":{}}}],["server/src/api/controllers/role.controller.ts:35",{"_index":1253,"title":{},"body":{"classes/RoleController.html":{}}}],["server/src/api/controllers/role.controller.ts:40",{"_index":1251,"title":{},"body":{"classes/RoleController.html":{}}}],["server/src/api/controllers/role.controller.ts:45",{"_index":1250,"title":{},"body":{"classes/RoleController.html":{}}}],["server/src/api/controllers/role.controller.ts:50",{"_index":1255,"title":{},"body":{"classes/RoleController.html":{}}}],["server/src/api/controllers/role.controller.ts:55",{"_index":1254,"title":{},"body":{"classes/RoleController.html":{}}}],["server/src/api/controllers/search.controller.ts",{"_index":1282,"title":{},"body":{"classes/SearchController.html":{},"coverage.html":{}}}],["server/src/api/controllers/search.controller.ts:11",{"_index":1284,"title":{},"body":{"classes/SearchController.html":{}}}],["server/src/api/controllers/search.controller.ts:15",{"_index":1286,"title":{},"body":{"classes/SearchController.html":{}}}],["server/src/api/controllers/setting.controller.ts",{"_index":1420,"title":{},"body":{"classes/SettingController.html":{},"coverage.html":{}}}],["server/src/api/controllers/setting.controller.ts:13",{"_index":1421,"title":{},"body":{"classes/SettingController.html":{}}}],["server/src/api/controllers/setting.controller.ts:17",{"_index":1422,"title":{},"body":{"classes/SettingController.html":{}}}],["server/src/api/controllers/setting.controller.ts:22",{"_index":1423,"title":{},"body":{"classes/SettingController.html":{}}}],["server/src/api/controllers/storage.controller.ts",{"_index":1514,"title":{},"body":{"classes/StorageController.html":{},"coverage.html":{}}}],["server/src/api/controllers/storage.controller.ts:17",{"_index":1517,"title":{},"body":{"classes/StorageController.html":{}}}],["server/src/api/controllers/storage.controller.ts:23",{"_index":1522,"title":{},"body":{"classes/StorageController.html":{}}}],["server/src/api/controllers/user.controller.ts",{"_index":1605,"title":{},"body":{"classes/UserController.html":{},"coverage.html":{}}}],["server/src/api/controllers/user.controller.ts:25",{"_index":1609,"title":{},"body":{"classes/UserController.html":{}}}],["server/src/api/controllers/user.controller.ts:30",{"_index":1619,"title":{},"body":{"classes/UserController.html":{}}}],["server/src/api/controllers/user.controller.ts:35",{"_index":1620,"title":{},"body":{"classes/UserController.html":{}}}],["server/src/api/controllers/user.controller.ts:41",{"_index":1616,"title":{},"body":{"classes/UserController.html":{}}}],["server/src/api/controllers/user.controller.ts:47",{"_index":1612,"title":{},"body":{"classes/UserController.html":{}}}],["server/src/api/controllers/user.controller.ts:52",{"_index":1613,"title":{},"body":{"classes/UserController.html":{}}}],["server/src/api/controllers/user.controller.ts:57",{"_index":1622,"title":{},"body":{"classes/UserController.html":{}}}],["server/src/api/controllers/user.controller.ts:62",{"_index":1621,"title":{},"body":{"classes/UserController.html":{}}}],["server/src/app.module.ts",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["server/src/common/aspects/decorator.ts",{"_index":1680,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["server/src/common/aspects/enum.ts",{"_index":1708,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server/src/common/aspects/exceptions.filter.ts",{"_index":874,"title":{},"body":{"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["server/src/common/aspects/exceptions.filter.ts:8",{"_index":881,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["server/src/common/aspects/middlewares.ts",{"_index":1685,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["server/src/common/common.module.ts",{"_index":375,"title":{},"body":{"modules/CommonModule.html":{}}}],["server/src/common/dtos/content.dto.ts",{"_index":775,"title":{},"body":{"classes/CreateContentDto.html":{},"classes/UpdateContentDto.html":{},"coverage.html":{}}}],["server/src/common/dtos/content.dto.ts:11",{"_index":1561,"title":{},"body":{"classes/UpdateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:13",{"_index":1563,"title":{},"body":{"classes/UpdateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:15",{"_index":1566,"title":{},"body":{"classes/UpdateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:17",{"_index":1564,"title":{},"body":{"classes/UpdateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:19",{"_index":1565,"title":{},"body":{"classes/UpdateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:21",{"_index":1568,"title":{},"body":{"classes/UpdateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:27",{"_index":1562,"title":{},"body":{"classes/UpdateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:35",{"_index":784,"title":{},"body":{"classes/CreateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:37",{"_index":777,"title":{},"body":{"classes/CreateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:39",{"_index":780,"title":{},"body":{"classes/CreateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:41",{"_index":783,"title":{},"body":{"classes/CreateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:43",{"_index":781,"title":{},"body":{"classes/CreateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:45",{"_index":782,"title":{},"body":{"classes/CreateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:47",{"_index":785,"title":{},"body":{"classes/CreateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:53",{"_index":779,"title":{},"body":{"classes/CreateContentDto.html":{}}}],["server/src/common/dtos/content.dto.ts:9",{"_index":1567,"title":{},"body":{"classes/UpdateContentDto.html":{}}}],["server/src/common/dtos/login.dto.ts",{"_index":1149,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["server/src/common/dtos/login.dto.ts:12",{"_index":1152,"title":{},"body":{"classes/LoginDto.html":{}}}],["server/src/common/dtos/login.dto.ts:24",{"_index":1156,"title":{},"body":{"classes/LoginDto.html":{}}}],["server/src/common/dtos/password.dto.ts",{"_index":1221,"title":{},"body":{"classes/PasswordDto.html":{},"coverage.html":{}}}],["server/src/common/dtos/password.dto.ts:16",{"_index":1223,"title":{},"body":{"classes/PasswordDto.html":{}}}],["server/src/common/dtos/password.dto.ts:28",{"_index":1224,"title":{},"body":{"classes/PasswordDto.html":{}}}],["server/src/common/entities/authority.entity.ts",{"_index":63,"title":{},"body":{"classes/Authority.html":{},"coverage.html":{}}}],["server/src/common/entities/authority.entity.ts:14",{"_index":100,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:20",{"_index":117,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:23",{"_index":91,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:26",{"_index":116,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:29",{"_index":97,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:31",{"_index":87,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:33",{"_index":102,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:36",{"_index":105,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:39",{"_index":135,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:44",{"_index":137,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:49",{"_index":139,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:54",{"_index":141,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:58",{"_index":113,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/authority.entity.ts:73",{"_index":129,"title":{},"body":{"classes/Authority.html":{}}}],["server/src/common/entities/base.ts",{"_index":274,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["server/src/common/entities/base.ts:16",{"_index":277,"title":{},"body":{"classes/Base.html":{}}}],["server/src/common/entities/base.ts:21",{"_index":275,"title":{},"body":{"classes/Base.html":{}}}],["server/src/common/entities/base.ts:26",{"_index":278,"title":{},"body":{"classes/Base.html":{}}}],["server/src/common/entities/base.ts:28",{"_index":279,"title":{},"body":{"classes/Base.html":{}}}],["server/src/common/entities/base.ts:7",{"_index":276,"title":{},"body":{"classes/Base.html":{}}}],["server/src/common/entities/category.entity.ts",{"_index":302,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["server/src/common/entities/category.entity.ts:11",{"_index":312,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/category.entity.ts:14",{"_index":311,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/category.entity.ts:17",{"_index":317,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/category.entity.ts:20",{"_index":316,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/category.entity.ts:23",{"_index":310,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/category.entity.ts:26",{"_index":309,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/category.entity.ts:28",{"_index":306,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/category.entity.ts:30",{"_index":313,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/category.entity.ts:32",{"_index":315,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/category.entity.ts:40",{"_index":318,"title":{},"body":{"classes/Category.html":{}}}],["server/src/common/entities/content.entity.ts",{"_index":468,"title":{},"body":{"classes/Content.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/src/common/entities/content.entity.ts:100",{"_index":532,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:103",{"_index":536,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:106",{"_index":538,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:109",{"_index":534,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:112",{"_index":535,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:115",{"_index":540,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:118",{"_index":497,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:125",{"_index":499,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:128",{"_index":487,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:130",{"_index":531,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:340",{"_index":496,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:390",{"_index":546,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:395",{"_index":548,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:400",{"_index":550,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:405",{"_index":543,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:414",{"_index":545,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:420",{"_index":541,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:440",{"_index":542,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:467",{"_index":544,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:88",{"_index":537,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:91",{"_index":485,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:94",{"_index":533,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/content.entity.ts:97",{"_index":484,"title":{},"body":{"classes/Content.html":{}}}],["server/src/common/entities/organization.entity.ts",{"_index":1165,"title":{},"body":{"classes/Organization.html":{},"coverage.html":{}}}],["server/src/common/entities/organization.entity.ts:13",{"_index":1170,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:16",{"_index":1168,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:19",{"_index":1173,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:22",{"_index":1169,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:24",{"_index":1167,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:26",{"_index":1171,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:29",{"_index":1174,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:32",{"_index":1176,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:37",{"_index":1177,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:42",{"_index":1178,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:46",{"_index":1172,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/organization.entity.ts:54",{"_index":1175,"title":{},"body":{"classes/Organization.html":{}}}],["server/src/common/entities/role.entity.ts",{"_index":1225,"title":{},"body":{"classes/Role.html":{},"coverage.html":{}}}],["server/src/common/entities/role.entity.ts:14",{"_index":1231,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/role.entity.ts:20",{"_index":1234,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/role.entity.ts:23",{"_index":1229,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/role.entity.ts:26",{"_index":1233,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/role.entity.ts:29",{"_index":1230,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/role.entity.ts:33",{"_index":1228,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/role.entity.ts:36",{"_index":1235,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/role.entity.ts:38",{"_index":1232,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/role.entity.ts:46",{"_index":1236,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/role.entity.ts:51",{"_index":1238,"title":{},"body":{"classes/Role.html":{}}}],["server/src/common/entities/setting.entity.ts",{"_index":1394,"title":{},"body":{"classes/Setting.html":{},"coverage.html":{}}}],["server/src/common/entities/setting.entity.ts:12",{"_index":1395,"title":{},"body":{"classes/Setting.html":{}}}],["server/src/common/entities/setting.entity.ts:14",{"_index":1416,"title":{},"body":{"classes/Setting.html":{}}}],["server/src/common/entities/setting.entity.ts:51",{"_index":1418,"title":{},"body":{"classes/Setting.html":{}}}],["server/src/common/entities/setting.entity.ts:9",{"_index":1417,"title":{},"body":{"classes/Setting.html":{}}}],["server/src/common/entities/user.entity.ts",{"_index":1569,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["server/src/common/entities/user.entity.ts:15",{"_index":1573,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:19",{"_index":1581,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:22",{"_index":1577,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:25",{"_index":1574,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:28",{"_index":1576,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:31",{"_index":1575,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:35",{"_index":1583,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:38",{"_index":1578,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:40",{"_index":1582,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:42",{"_index":1585,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:47",{"_index":1587,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:52",{"_index":1588,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/entities/user.entity.ts:59",{"_index":1584,"title":{},"body":{"classes/User.html":{}}}],["server/src/common/lib/elastic",{"_index":1692,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/src/common/lib/excel.ts",{"_index":790,"title":{},"body":{"classes/ExcelHelper.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["server/src/common/lib/excel.ts:10",{"_index":804,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["server/src/common/lib/excel.ts:102",{"_index":796,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["server/src/common/lib/excel.ts:17",{"_index":801,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["server/src/common/lib/excel.ts:24",{"_index":798,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["server/src/common/lib/helper.ts",{"_index":1695,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["server/src/common/lib/influx.ts",{"_index":1696,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/src/common/lib/logger.ts",{"_index":661,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["server/src/common/lib/logger.ts:105",{"_index":1126,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:109",{"_index":1114,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:113",{"_index":1124,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:117",{"_index":1122,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:121",{"_index":1128,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:125",{"_index":1130,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:129",{"_index":1116,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:133",{"_index":1118,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:137",{"_index":1120,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:153",{"_index":1127,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:157",{"_index":1115,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:161",{"_index":1125,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:165",{"_index":1123,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:169",{"_index":1129,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:173",{"_index":1131,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:177",{"_index":1117,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:181",{"_index":1119,"title":{},"body":{"classes/Logger.html":{}}}],["server/src/common/lib/logger.ts:21",{"_index":667,"title":{},"body":{"classes/ContextTrace.html":{}}}],["server/src/common/lib/logger.ts:23",{"_index":669,"title":{},"body":{"classes/ContextTrace.html":{}}}],["server/src/common/lib/logger.ts:24",{"_index":671,"title":{},"body":{"classes/ContextTrace.html":{}}}],["server/src/common/lib/logger.ts:25",{"_index":670,"title":{},"body":{"classes/ContextTrace.html":{}}}],["server/src/common/lib/logger.ts:26",{"_index":668,"title":{},"body":{"classes/ContextTrace.html":{}}}],["server/src/common/services/authority.service.ts",{"_index":226,"title":{},"body":{"injectables/AuthorityService.html":{},"coverage.html":{}}}],["server/src/common/services/authority.service.ts:16",{"_index":243,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["server/src/common/services/authority.service.ts:20",{"_index":239,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["server/src/common/services/authority.service.ts:24",{"_index":245,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["server/src/common/services/authority.service.ts:34",{"_index":241,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["server/src/common/services/authority.service.ts:41",{"_index":236,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["server/src/common/services/authority.service.ts:9",{"_index":233,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["server/src/common/services/base.service.ts",{"_index":292,"title":{},"body":{"classes/BaseService.html":{},"coverage.html":{}}}],["server/src/common/services/base.service.ts:10",{"_index":297,"title":{},"body":{"classes/BaseService.html":{}}}],["server/src/common/services/base.service.ts:3",{"_index":295,"title":{},"body":{"classes/BaseService.html":{}}}],["server/src/common/services/base.service.ts:6",{"_index":296,"title":{},"body":{"classes/BaseService.html":{}}}],["server/src/common/services/category.service.ts",{"_index":342,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["server/src/common/services/category.service.ts:14",{"_index":350,"title":{},"body":{"injectables/CategoryService.html":{}}}],["server/src/common/services/category.service.ts:19",{"_index":347,"title":{},"body":{"injectables/CategoryService.html":{}}}],["server/src/common/services/category.service.ts:23",{"_index":349,"title":{},"body":{"injectables/CategoryService.html":{}}}],["server/src/common/services/category.service.ts:27",{"_index":351,"title":{},"body":{"injectables/CategoryService.html":{}}}],["server/src/common/services/category.service.ts:9",{"_index":345,"title":{},"body":{"injectables/CategoryService.html":{}}}],["server/src/common/services/common.service.ts",{"_index":420,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["server/src/common/services/common.service.ts:13",{"_index":427,"title":{},"body":{"injectables/CommonService.html":{}}}],["server/src/common/services/common.service.ts:22",{"_index":432,"title":{},"body":{"injectables/CommonService.html":{}}}],["server/src/common/services/common.service.ts:31",{"_index":433,"title":{},"body":{"injectables/CommonService.html":{}}}],["server/src/common/services/common.service.ts:53",{"_index":430,"title":{},"body":{"injectables/CommonService.html":{}}}],["server/src/common/services/content.service.ts",{"_index":608,"title":{},"body":{"injectables/ContentService.html":{},"coverage.html":{}}}],["server/src/common/services/content.service.ts:12",{"_index":611,"title":{},"body":{"injectables/ContentService.html":{}}}],["server/src/common/services/content.service.ts:21",{"_index":615,"title":{},"body":{"injectables/ContentService.html":{}}}],["server/src/common/services/content.service.ts:77",{"_index":614,"title":{},"body":{"injectables/ContentService.html":{}}}],["server/src/common/services/content.service.ts:88",{"_index":616,"title":{},"body":{"injectables/ContentService.html":{}}}],["server/src/common/services/import.service.ts",{"_index":919,"title":{},"body":{"injectables/ImportService.html":{},"coverage.html":{}}}],["server/src/common/services/import.service.ts:11",{"_index":925,"title":{},"body":{"injectables/ImportService.html":{}}}],["server/src/common/services/import.service.ts:17",{"_index":927,"title":{},"body":{"injectables/ImportService.html":{}}}],["server/src/common/services/import.service.ts:28",{"_index":930,"title":{},"body":{"injectables/ImportService.html":{}}}],["server/src/common/services/import.service.ts:48",{"_index":932,"title":{},"body":{"injectables/ImportService.html":{}}}],["server/src/common/services/organization.service.ts",{"_index":1199,"title":{},"body":{"injectables/OrganizationService.html":{},"coverage.html":{}}}],["server/src/common/services/organization.service.ts:14",{"_index":1205,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["server/src/common/services/organization.service.ts:19",{"_index":1203,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["server/src/common/services/organization.service.ts:23",{"_index":1207,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["server/src/common/services/organization.service.ts:33",{"_index":1204,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["server/src/common/services/organization.service.ts:40",{"_index":1206,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["server/src/common/services/organization.service.ts:9",{"_index":1201,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["server/src/common/services/role.service.ts",{"_index":1263,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["server/src/common/services/role.service.ts:10",{"_index":1266,"title":{},"body":{"injectables/RoleService.html":{}}}],["server/src/common/services/role.service.ts:16",{"_index":1269,"title":{},"body":{"injectables/RoleService.html":{}}}],["server/src/common/services/role.service.ts:21",{"_index":1270,"title":{},"body":{"injectables/RoleService.html":{}}}],["server/src/common/services/role.service.ts:43",{"_index":1271,"title":{},"body":{"injectables/RoleService.html":{}}}],["server/src/common/services/search.service.ts",{"_index":1292,"title":{},"body":{"injectables/SearchService.html":{},"coverage.html":{}}}],["server/src/common/services/search.service.ts:7",{"_index":1293,"title":{},"body":{"injectables/SearchService.html":{}}}],["server/src/common/services/setting.service.ts",{"_index":1428,"title":{},"body":{"injectables/SettingService.html":{},"coverage.html":{}}}],["server/src/common/services/setting.service.ts:15",{"_index":1434,"title":{},"body":{"injectables/SettingService.html":{}}}],["server/src/common/services/setting.service.ts:19",{"_index":1435,"title":{},"body":{"injectables/SettingService.html":{}}}],["server/src/common/services/setting.service.ts:8",{"_index":1431,"title":{},"body":{"injectables/SettingService.html":{}}}],["server/src/common/services/user.service.ts",{"_index":1638,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["server/src/common/services/user.service.ts:103",{"_index":1649,"title":{},"body":{"injectables/UserService.html":{}}}],["server/src/common/services/user.service.ts:12",{"_index":1642,"title":{},"body":{"injectables/UserService.html":{}}}],["server/src/common/services/user.service.ts:21",{"_index":1648,"title":{},"body":{"injectables/UserService.html":{}}}],["server/src/common/services/user.service.ts:72",{"_index":1645,"title":{},"body":{"injectables/UserService.html":{}}}],["server/src/common/services/user.service.ts:79",{"_index":1647,"title":{},"body":{"injectables/UserService.html":{}}}],["server/src/common/services/user.service.ts:90",{"_index":1644,"title":{},"body":{"injectables/UserService.html":{}}}],["server/src/common/strategys/jwt.strategy.ts",{"_index":1093,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["server/src/common/strategys/jwt.strategy.ts:17",{"_index":1098,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server/src/common/strategys/jwt.strategy.ts:9",{"_index":1096,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server/src/common/tasks/status.task.ts",{"_index":1441,"title":{},"body":{"classes/StatusTask.html":{},"coverage.html":{}}}],["server/src/common/tasks/status.task.ts:119",{"_index":1451,"title":{},"body":{"classes/StatusTask.html":{}}}],["server/src/common/tasks/status.task.ts:129",{"_index":1450,"title":{},"body":{"classes/StatusTask.html":{}}}],["server/src/common/tasks/status.task.ts:14",{"_index":1447,"title":{},"body":{"classes/StatusTask.html":{}}}],["server/src/common/tasks/status.task.ts:45",{"_index":1452,"title":{},"body":{"classes/StatusTask.html":{}}}],["server/src/config/index.ts",{"_index":1698,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/src/main.ts",{"_index":1699,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["server/src/seed/index.ts",{"_index":1303,"title":{},"body":{"injectables/Seed.html":{},"coverage.html":{}}}],["server/src/seed/index.ts:119",{"_index":1311,"title":{},"body":{"injectables/Seed.html":{}}}],["server/src/seed/index.ts:136",{"_index":1312,"title":{},"body":{"injectables/Seed.html":{}}}],["server/src/seed/index.ts:153",{"_index":1310,"title":{},"body":{"injectables/Seed.html":{}}}],["server/src/seed/index.ts:17",{"_index":1309,"title":{},"body":{"injectables/Seed.html":{}}}],["server/src/seed/index.ts:171",{"_index":1313,"title":{},"body":{"injectables/Seed.html":{}}}],["server/src/seed/index.ts:20",{"_index":1315,"title":{},"body":{"injectables/Seed.html":{}}}],["server/src/seed/index.ts:67",{"_index":1314,"title":{},"body":{"injectables/Seed.html":{}}}],["server/src/ssr/controllers/index.controller.ts",{"_index":958,"title":{},"body":{"controllers/IndexController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/src/ssr/controllers/index.controller.ts:101",{"_index":978,"title":{},"body":{"controllers/IndexController.html":{}}}],["server/src/ssr/controllers/index.controller.ts:121",{"_index":994,"title":{},"body":{"controllers/IndexController.html":{}}}],["server/src/ssr/controllers/index.controller.ts:140",{"_index":989,"title":{},"body":{"controllers/IndexController.html":{}}}],["server/src/ssr/controllers/index.controller.ts:179",{"_index":1006,"title":{},"body":{"controllers/IndexController.html":{}}}],["server/src/ssr/controllers/index.controller.ts:210",{"_index":968,"title":{},"body":{"controllers/IndexController.html":{}}}],["server/src/ssr/controllers/index.controller.ts:222",{"_index":975,"title":{},"body":{"controllers/IndexController.html":{}}}],["server/src/ssr/controllers/index.controller.ts:233",{"_index":997,"title":{},"body":{"controllers/IndexController.html":{}}}],["server/src/ssr/controllers/index.controller.ts:245",{"_index":1003,"title":{},"body":{"controllers/IndexController.html":{}}}],["server/src/ssr/controllers/index.controller.ts:254",{"_index":986,"title":{},"body":{"controllers/IndexController.html":{}}}],["server/src/ssr/controllers/index.controller.ts:260",{"_index":972,"title":{},"body":{"controllers/IndexController.html":{}}}],["server/src/ssr/controllers/index.controller.ts:270",{"_index":1000,"title":{},"body":{"controllers/IndexController.html":{}}}],["server/src/ssr/controllers/index.controller.ts:287",{"_index":983,"title":{},"body":{"controllers/IndexController.html":{}}}],["server/src/ssr/controllers/index.controller.ts:42",{"_index":991,"title":{},"body":{"controllers/IndexController.html":{}}}],["server/src/ssr/controllers/index.controller.ts:87",{"_index":981,"title":{},"body":{"controllers/IndexController.html":{}}}],["server/src/ssr/ssr.module.ts",{"_index":1280,"title":{},"body":{"modules/SSRModule.html":{}}}],["serverurl",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server、admin",{"_index":1731,"title":{},"body":{"index.html":{}}}],["servicehotline",{"_index":1403,"title":{},"body":{"classes/Setting.html":{}}}],["services/authority.service",{"_index":408,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/category.service",{"_index":402,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/common.service",{"_index":399,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/content.service",{"_index":403,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/import.service",{"_index":401,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/organization.service",{"_index":406,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/role.service",{"_index":407,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/search.service",{"_index":409,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/setting.service",{"_index":400,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/user.service",{"_index":389,"title":{},"body":{"modules/CommonModule.html":{},"injectables/JwtStrategy.html":{}}}],["session",{"_index":1007,"title":{},"body":{"controllers/IndexController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":394,"title":{"classes/Setting.html":{}},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"injectables/SettingService.html":{},"coverage.html":{}}}],["setting.create(payload",{"_index":1439,"title":{},"body":{"injectables/SettingService.html":{}}}],["setting.ex_info",{"_index":445,"title":{},"body":{"injectables/CommonService.html":{}}}],["setting.service",{"_index":439,"title":{},"body":{"injectables/CommonService.html":{}}}],["setting.sheetsmap",{"_index":1332,"title":{},"body":{"injectables/Seed.html":{}}}],["settingcontroller",{"_index":25,"title":{"classes/SettingController.html":{}},"body":{"modules/ApiModule.html":{},"classes/SettingController.html":{},"coverage.html":{}}}],["settingrepository",{"_index":1432,"title":{},"body":{"injectables/SettingService.html":{}}}],["settingservice",{"_index":372,"title":{"injectables/SettingService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"coverage.html":{},"overview.html":{}}}],["shall",{"_index":1789,"title":{},"body":{"license.html":{}}}],["sheet",{"_index":849,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["sheet.addrows(rows",{"_index":871,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["sheet.columns",{"_index":870,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["sheetmap",{"_index":815,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["sheetmap.cellsmap",{"_index":832,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["sheetmap.handletype",{"_index":819,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["sheetmap.rowsmap",{"_index":821,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["sheetsmap",{"_index":73,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/ExcelHelper.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{}}}],["sheetsmap.rowsmap",{"_index":851,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["sheetsmap[worksheet.name",{"_index":816,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["signoptions",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simple",{"_index":93,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["siteinfo",{"_index":1022,"title":{},"body":{"controllers/IndexController.html":{}}}],["size",{"_index":449,"title":{},"body":{"injectables/CommonService.html":{},"classes/StorageController.html":{}}}],["software",{"_index":1763,"title":{},"body":{"license.html":{}}}],["sort",{"_index":74,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/CreateContentDto.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/UpdateContentDto.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/Authority.html":{},"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseService.html":{},"classes/Category.html":{},"classes/CategoryController.html":{},"injectables/CategoryService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/ExcelHelper.html":{},"classes/ExceptionsFilter.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"classes/LoginController.html":{},"classes/LoginDto.html":{},"classes/Organization.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Role.html":{},"classes/RoleController.html":{},"injectables/RoleService.html":{},"modules/SSRModule.html":{},"classes/SearchController.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"classes/SettingController.html":{},"injectables/SettingService.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["spa",{"_index":1742,"title":{},"body":{"index.html":{}}}],["sql",{"_index":1735,"title":{},"body":{"index.html":{}}}],["ssr/ssr.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["ssrmodule",{"_index":55,"title":{"modules/SSRModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SSRModule.html":{},"modules.html":{},"overview.html":{}}}],["stackinfo",{"_index":760,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stackinfo.columnnumber",{"_index":763,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stackinfo.filename",{"_index":765,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stackinfo.linenumber",{"_index":762,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stacklist",{"_index":757,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stacklist[deep",{"_index":761,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stacktrace",{"_index":674,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stacktrace.getsync",{"_index":759,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stacktrace.stackframe",{"_index":758,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["start",{"_index":1308,"title":{},"body":{"injectables/Seed.html":{}}}],["started",{"_index":1726,"title":{"index.html":{},"license.html":{}},"body":{}}],["stat",{"_index":1363,"title":{},"body":{"injectables/Seed.html":{},"classes/StatusTask.html":{}}}],["stat(path",{"_index":1491,"title":{},"body":{"classes/StatusTask.html":{}}}],["static",{"_index":71,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"classes/Logger.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["staticroot",{"_index":288,"title":{},"body":{"classes/Base.html":{}}}],["staticroot}${path",{"_index":291,"title":{},"body":{"classes/Base.html":{}}}],["stats",{"_index":1493,"title":{},"body":{"classes/StatusTask.html":{}}}],["status",{"_index":895,"title":{},"body":{"classes/ExceptionsFilter.html":{},"classes/StatusTask.html":{},"miscellaneous/variables.html":{}}}],["statustask",{"_index":404,"title":{"classes/StatusTask.html":{}},"body":{"modules/CommonModule.html":{},"classes/StatusTask.html":{},"coverage.html":{}}}],["stdout",{"_index":733,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["storagecontroller",{"_index":21,"title":{"classes/StorageController.html":{}},"body":{"modules/ApiModule.html":{},"classes/StorageController.html":{},"coverage.html":{}}}],["storagecontroller::import",{"_index":1544,"title":{},"body":{"classes/StorageController.html":{}}}],["storagecontroller::upload",{"_index":1553,"title":{},"body":{"classes/StorageController.html":{}}}],["strategy",{"_index":1100,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strategys/jwt.strategy",{"_index":390,"title":{},"body":{"modules/CommonModule.html":{}}}],["string",{"_index":88,"title":{},"body":{"classes/Authority.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseService.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/ContextTrace.html":{},"classes/CreateContentDto.html":{},"classes/Logger.html":{},"classes/LoginDto.html":{},"classes/Organization.html":{},"injectables/OrganizationService.html":{},"classes/PasswordDto.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"injectables/SettingService.html":{},"classes/UpdateContentDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["subject",{"_index":1784,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1777,"title":{},"body":{"license.html":{}}}],["subscribemessage",{"_index":1456,"title":{},"body":{"classes/StatusTask.html":{}}}],["substantial",{"_index":1791,"title":{},"body":{"license.html":{}}}],["suggestions",{"_index":964,"title":{},"body":{"controllers/IndexController.html":{}}}],["suggestions(@req",{"_index":1080,"title":{},"body":{"controllers/IndexController.html":{}}}],["suggestions(req",{"_index":1001,"title":{},"body":{"controllers/IndexController.html":{}}}],["summary",{"_index":473,"title":{},"body":{"classes/Content.html":{},"classes/CreateContentDto.html":{},"classes/UpdateContentDto.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":1105,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/StatusTask.html":{}}}],["super(authorityrepository",{"_index":259,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["super(categoryrepository",{"_index":354,"title":{},"body":{"injectables/CategoryService.html":{}}}],["super(contentrepository",{"_index":620,"title":{},"body":{"injectables/ContentService.html":{}}}],["super(organizationrepository",{"_index":1209,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["super(rolerepository",{"_index":1273,"title":{},"body":{"injectables/RoleService.html":{}}}],["super(settingrepository",{"_index":1437,"title":{},"body":{"injectables/SettingService.html":{}}}],["super(userrepository",{"_index":1651,"title":{},"body":{"injectables/UserService.html":{}}}],["superadmin",{"_index":1246,"title":{},"body":{"classes/Role.html":{},"injectables/Seed.html":{},"classes/User.html":{}}}],["superadmin.org",{"_index":1347,"title":{},"body":{"injectables/Seed.html":{}}}],["superadmin.roles",{"_index":1346,"title":{},"body":{"injectables/Seed.html":{}}}],["svg",{"_index":436,"title":{},"body":{"injectables/CommonService.html":{},"modules.html":{}}}],["svg_code",{"_index":462,"title":{},"body":{"injectables/CommonService.html":{}}}],["svg_hash",{"_index":431,"title":{},"body":{"injectables/CommonService.html":{},"controllers/IndexController.html":{}}}],["svg_obj",{"_index":1083,"title":{},"body":{"controllers/IndexController.html":{}}}],["svg_text",{"_index":429,"title":{},"body":{"injectables/CommonService.html":{},"controllers/IndexController.html":{}}}],["svg_text.touppercase",{"_index":466,"title":{},"body":{"injectables/CommonService.html":{}}}],["svg_text_in_redis",{"_index":463,"title":{},"body":{"injectables/CommonService.html":{}}}],["svg_text_in_redis.touppercase",{"_index":465,"title":{},"body":{"injectables/CommonService.html":{}}}],["svgcaptcha",{"_index":435,"title":{},"body":{"injectables/CommonService.html":{}}}],["svgcaptcha.create",{"_index":448,"title":{},"body":{"injectables/CommonService.html":{}}}],["swagger",{"_index":1744,"title":{},"body":{"index.html":{}}}],["switch",{"_index":712,"title":{},"body":{"classes/ContextTrace.html":{},"classes/ExcelHelper.html":{},"injectables/ImportService.html":{},"classes/Logger.html":{},"classes/StatusTask.html":{},"classes/StorageController.html":{}}}],["synchronize",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sysadmin",{"_index":1341,"title":{},"body":{"injectables/Seed.html":{}}}],["system_status",{"_index":1506,"title":{},"body":{"classes/StatusTask.html":{},"miscellaneous/variables.html":{}}}],["t.create_at",{"_index":1660,"title":{},"body":{"injectables/UserService.html":{}}}],["t.publish_at",{"_index":634,"title":{},"body":{"injectables/ContentService.html":{}}}],["table",{"_index":1702,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1701,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":1513,"title":{},"body":{"classes/StatusTask.html":{},"miscellaneous/variables.html":{}}}],["target",{"_index":130,"title":{},"body":{"classes/Authority.html":{},"injectables/AuthorityService.html":{},"classes/Category.html":{},"classes/Content.html":{},"injectables/ImportService.html":{},"classes/Organization.html":{},"injectables/OrganizationService.html":{},"classes/Role.html":{},"classes/Setting.html":{},"injectables/SettingService.html":{},"classes/StorageController.html":{},"classes/User.html":{}}}],["target.parent",{"_index":265,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/OrganizationService.html":{}}}],["tasks/status.task",{"_index":405,"title":{},"body":{"modules/CommonModule.html":{}}}],["techsupport",{"_index":1397,"title":{},"body":{"classes/Setting.html":{}}}],["text",{"_index":446,"title":{},"body":{"injectables/CommonService.html":{},"classes/Content.html":{},"classes/CreateContentDto.html":{},"injectables/Seed.html":{},"classes/UpdateContentDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["textinterception",{"_index":557,"title":{},"body":{"classes/Content.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["textinterception(text",{"_index":574,"title":{},"body":{"classes/Content.html":{},"miscellaneous/functions.html":{}}}],["this.author",{"_index":585,"title":{},"body":{"classes/Content.html":{}}}],["this.authorityrepository.delete(ids",{"_index":273,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["this.authorityrepository.findone",{"_index":261,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["this.authorityrepository.findone(payload.id",{"_index":268,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["this.authorityrepository.findone(payload.parentid",{"_index":266,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["this.authorityrepository.findroots",{"_index":270,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["this.authorityrepository.findtrees",{"_index":260,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["this.authorityrepository.save(target",{"_index":267,"title":{},"body":{"injectables/AuthorityService.html":{}}}],["this.authorityservice.delete(payload.selectedrows.split",{"_index":224,"title":{},"body":{"classes/AuthorityController.html":{}}}],["this.authorityservice.findonebyid(id",{"_index":215,"title":{},"body":{"classes/AuthorityController.html":{}}}],["this.authorityservice.parent(dto",{"_index":222,"title":{},"body":{"classes/AuthorityController.html":{}}}],["this.authorityservice.query(payload",{"_index":217,"title":{},"body":{"classes/AuthorityController.html":{}}}],["this.authorityservice.save(dto",{"_index":219,"title":{},"body":{"classes/AuthorityController.html":{}}}],["this.category",{"_index":587,"title":{},"body":{"classes/Content.html":{}}}],["this.category.name",{"_index":581,"title":{},"body":{"classes/Content.html":{}}}],["this.categoryrepository.findancestorstree(category",{"_index":357,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categoryrepository.findone",{"_index":356,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categoryrepository.findonebyid(category.parent",{"_index":361,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categoryrepository.findtrees",{"_index":355,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/CommonService.html":{}}}],["this.categoryrepository.save(category",{"_index":362,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categoryservice.findonebyid(id",{"_index":336,"title":{},"body":{"classes/CategoryController.html":{}}}],["this.categoryservice.findonebyname(content.category",{"_index":658,"title":{},"body":{"injectables/ContentService.html":{}}}],["this.categoryservice.findonebyname(key",{"_index":941,"title":{},"body":{"injectables/ImportService.html":{}}}],["this.categoryservice.findparentstree(content.category",{"_index":655,"title":{},"body":{"injectables/ContentService.html":{}}}],["this.categoryservice.query(payload",{"_index":337,"title":{},"body":{"classes/CategoryController.html":{}}}],["this.categoryservice.remove(payload.selectedrows.split",{"_index":341,"title":{},"body":{"classes/CategoryController.html":{}}}],["this.categoryservice.save(dto",{"_index":340,"title":{},"body":{"classes/CategoryController.html":{}}}],["this.commonservice.checksvgcode(svg_hash",{"_index":1087,"title":{},"body":{"controllers/IndexController.html":{}}}],["this.commonservice.getsiteinfo",{"_index":1023,"title":{},"body":{"controllers/IndexController.html":{}}}],["this.commonservice.getsvgcode",{"_index":1084,"title":{},"body":{"controllers/IndexController.html":{}}}],["this.connection",{"_index":1338,"title":{},"body":{"injectables/Seed.html":{}}}],["this.connection.getrepository(authority).save(arr",{"_index":1386,"title":{},"body":{"injectables/Seed.html":{}}}],["this.connection.getrepository(content).save(list",{"_index":946,"title":{},"body":{"injectables/ImportService.html":{}}}],["this.connection.getrepository(role).save(rolesarr",{"_index":1393,"title":{},"body":{"injectables/Seed.html":{}}}],["this.connection.getrepository(setting).save",{"_index":1329,"title":{},"body":{"injectables/Seed.html":{}}}],["this.connection.getrepository(user).save(superadmin",{"_index":1349,"title":{},"body":{"injectables/Seed.html":{}}}],["this.connection.gettreerepository(category).save(categoryarr",{"_index":1374,"title":{},"body":{"injectables/Seed.html":{}}}],["this.connection.gettreerepository(organization).save(organizationarr",{"_index":955,"title":{},"body":{"injectables/ImportService.html":{},"injectables/Seed.html":{}}}],["this.contentrepository.createquerybuilder('t",{"_index":622,"title":{},"body":{"injectables/ContentService.html":{}}}],["this.contentrepository.findone",{"_index":652,"title":{},"body":{"injectables/ContentService.html":{}}}],["this.contentrepository.save(content",{"_index":659,"title":{},"body":{"injectables/ContentService.html":{}}}],["this.contentservice.findoneandparents(id",{"_index":1036,"title":{},"body":{"controllers/IndexController.html":{}}}],["this.contentservice.findonebyid(id",{"_index":604,"title":{},"body":{"classes/ContentController.html":{}}}],["this.contentservice.query",{"_index":1025,"title":{},"body":{"controllers/IndexController.html":{}}}],["this.contentservice.query(payload",{"_index":605,"title":{},"body":{"classes/ContentController.html":{}}}],["this.contentservice.remove(payload.selectedrows.split",{"_index":607,"title":{},"body":{"classes/ContentController.html":{}}}],["this.contentservice.save",{"_index":1092,"title":{},"body":{"controllers/IndexController.html":{}}}],["this.contentservice.save(dto",{"_index":606,"title":{},"body":{"classes/ContentController.html":{}}}],["this.id",{"_index":160,"title":{},"body":{"classes/Authority.html":{},"classes/Content.html":{},"classes/Organization.html":{}}}],["this.importauthoritys",{"_index":1335,"title":{},"body":{"injectables/Seed.html":{}}}],["this.importcategorys",{"_index":1333,"title":{},"body":{"injectables/Seed.html":{}}}],["this.importcontents(file",{"_index":934,"title":{},"body":{"injectables/ImportService.html":{}}}],["this.importorganizations",{"_index":1334,"title":{},"body":{"injectables/Seed.html":{}}}],["this.importorganizations(file",{"_index":936,"title":{},"body":{"injectables/ImportService.html":{}}}],["this.importroles",{"_index":1336,"title":{},"body":{"injectables/Seed.html":{}}}],["this.importservice.handlefile(file",{"_index":1547,"title":{},"body":{"classes/StorageController.html":{}}}],["this.initelasticsearchindices",{"_index":1328,"title":{},"body":{"injectables/Seed.html":{}}}],["this.jwtservice.sign(_.toplainobject(user",{"_index":1668,"title":{},"body":{"injectables/UserService.html":{}}}],["this.name",{"_index":159,"title":{},"body":{"classes/Authority.html":{},"classes/Organization.html":{}}}],["this.organizationrepository.delete(ids",{"_index":1219,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationrepository.findone",{"_index":1211,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationrepository.findone(payload.id",{"_index":1216,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationrepository.findone(payload.parentid",{"_index":1214,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationrepository.findroots",{"_index":1218,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationrepository.findtrees",{"_index":1210,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationrepository.save(organization",{"_index":1215,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationrepository.save(target",{"_index":1217,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.organizationservice.findonebyid(id",{"_index":1194,"title":{},"body":{"classes/OrganizationController.html":{}}}],["this.organizationservice.parent(dto",{"_index":1197,"title":{},"body":{"classes/OrganizationController.html":{}}}],["this.organizationservice.query(payload",{"_index":1195,"title":{},"body":{"classes/OrganizationController.html":{}}}],["this.organizationservice.remove(payload.selectedrows.split",{"_index":1198,"title":{},"body":{"classes/OrganizationController.html":{}}}],["this.organizationservice.save(dto",{"_index":1196,"title":{},"body":{"classes/OrganizationController.html":{}}}],["this.password",{"_index":1603,"title":{},"body":{"classes/User.html":{}}}],["this.publish_at",{"_index":570,"title":{},"body":{"classes/Content.html":{}}}],["this.redisclient",{"_index":441,"title":{},"body":{"injectables/CommonService.html":{},"controllers/IndexController.html":{}}}],["this.redisclient.get(svg_hash",{"_index":464,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.redisclient.set",{"_index":459,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.redisservice.getclient",{"_index":442,"title":{},"body":{"injectables/CommonService.html":{},"controllers/IndexController.html":{}}}],["this.repository.findbyids(ids",{"_index":300,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.findone(id",{"_index":298,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.remove(await",{"_index":299,"title":{},"body":{"classes/BaseService.html":{}}}],["this.rolerepository.createquerybuilder('t",{"_index":1275,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.findone",{"_index":1274,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.save(role",{"_index":1279,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roles",{"_index":1599,"title":{},"body":{"classes/User.html":{}}}],["this.roles.length",{"_index":1600,"title":{},"body":{"classes/User.html":{}}}],["this.roleservice.findoneandrelations(id",{"_index":1259,"title":{},"body":{"classes/RoleController.html":{}}}],["this.roleservice.query(payload",{"_index":1260,"title":{},"body":{"classes/RoleController.html":{}}}],["this.roleservice.remove(payload.selectedrows.split",{"_index":1262,"title":{},"body":{"classes/RoleController.html":{}}}],["this.roleservice.save(dto",{"_index":1261,"title":{},"body":{"classes/RoleController.html":{}}}],["this.searchservice.search(payload",{"_index":1291,"title":{},"body":{"classes/SearchController.html":{}}}],["this.server",{"_index":1488,"title":{},"body":{"classes/StatusTask.html":{}}}],["this.server.emit('filechange",{"_index":1489,"title":{},"body":{"classes/StatusTask.html":{}}}],["this.server.emit('status",{"_index":1510,"title":{},"body":{"classes/StatusTask.html":{}}}],["this.settingrepository.findone",{"_index":1438,"title":{},"body":{"injectables/SettingService.html":{}}}],["this.settingrepository.save(target",{"_index":1440,"title":{},"body":{"injectables/SettingService.html":{}}}],["this.settingservice.getsettingbytoken",{"_index":444,"title":{},"body":{"injectables/CommonService.html":{},"classes/SettingController.html":{}}}],["this.settingservice.save(dto",{"_index":1427,"title":{},"body":{"classes/SettingController.html":{}}}],["this.summary",{"_index":573,"title":{},"body":{"classes/Content.html":{}}}],["this.text",{"_index":580,"title":{},"body":{"classes/Content.html":{}}}],["this.thumbnailpath",{"_index":582,"title":{},"body":{"classes/Content.html":{}}}],["this.title",{"_index":579,"title":{},"body":{"classes/Content.html":{}}}],["this.token",{"_index":1245,"title":{},"body":{"classes/Role.html":{}}}],["this.userrepository.createquerybuilder('t",{"_index":1652,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.delete(ids",{"_index":1673,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":1665,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(user",{"_index":1671,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.changepassword(user.id",{"_index":1635,"title":{},"body":{"classes/UserController.html":{}}}],["this.userservice.findonebyid(params.id",{"_index":1628,"title":{},"body":{"classes/UserController.html":{}}}],["this.userservice.findonebyid(payload.id",{"_index":1110,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userservice.findonebyid(user.id",{"_index":1632,"title":{},"body":{"classes/UserController.html":{}}}],["this.userservice.login(dto.account",{"_index":1147,"title":{},"body":{"classes/LoginController.html":{}}}],["this.userservice.query(payload",{"_index":1629,"title":{},"body":{"classes/UserController.html":{}}}],["this.userservice.remove(payload.selectedrows.split",{"_index":1637,"title":{},"body":{"classes/UserController.html":{}}}],["this.userservice.save(dto",{"_index":1636,"title":{},"body":{"classes/UserController.html":{}}}],["this.videopath",{"_index":583,"title":{},"body":{"classes/Content.html":{}}}],["this.views",{"_index":584,"title":{},"body":{"classes/Content.html":{}}}],["this.watchfiles",{"_index":1466,"title":{},"body":{"classes/StatusTask.html":{}}}],["throw",{"_index":212,"title":{},"body":{"classes/AuthorityController.html":{},"injectables/AuthorityService.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"injectables/ContentService.html":{},"classes/ExcelHelper.html":{},"controllers/IndexController.html":{},"injectables/JwtStrategy.html":{},"classes/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RoleController.html":{},"classes/StorageController.html":{},"injectables/UserService.html":{}}}],["thumbnail",{"_index":474,"title":{},"body":{"classes/Content.html":{},"classes/CreateContentDto.html":{},"classes/UpdateContentDto.html":{},"miscellaneous/variables.html":{}}}],["thumbnailpath",{"_index":482,"title":{},"body":{"classes/Content.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":1507,"title":{},"body":{"classes/StatusTask.html":{}}}],["timeout",{"_index":1461,"title":{},"body":{"classes/StatusTask.html":{}}}],["timeout(5000",{"_index":1479,"title":{},"body":{"classes/StatusTask.html":{}}}],["timestamp",{"_index":498,"title":{},"body":{"classes/Content.html":{},"classes/ExceptionsFilter.html":{},"classes/StatusTask.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":83,"title":{},"body":{"classes/Authority.html":{},"classes/Content.html":{},"classes/CreateContentDto.html":{},"classes/Organization.html":{},"classes/Setting.html":{},"classes/UpdateContentDto.html":{},"miscellaneous/variables.html":{}}}],["titlearr",{"_index":833,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["titlearr[cellnumber",{"_index":837,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["titlearr[cellnumber].split",{"_index":839,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["togetmenuindex",{"_index":1009,"title":{},"body":{"controllers/IndexController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["togetmenuindex(siteinfo.menus",{"_index":1045,"title":{},"body":{"controllers/IndexController.html":{}}}],["tohtml",{"_index":915,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["token",{"_index":75,"title":{},"body":{"classes/Authority.html":{},"classes/Role.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"injectables/SettingService.html":{}}}],["toplainonly",{"_index":1593,"title":{},"body":{"classes/User.html":{}}}],["tort",{"_index":1813,"title":{},"body":{"license.html":{}}}],["trace",{"_index":679,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["trace(...args",{"_index":740,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["transformclasstoplain",{"_index":613,"title":{},"body":{"injectables/ContentService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["transformer",{"_index":144,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/Organization.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Setting.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["tree",{"_index":147,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Organization.html":{}}}],["tree('materialized",{"_index":153,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Organization.html":{}}}],["treechildren",{"_index":86,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Organization.html":{}}}],["treeparent",{"_index":101,"title":{},"body":{"classes/Authority.html":{},"classes/Category.html":{},"classes/Organization.html":{}}}],["treerepository",{"_index":232,"title":{},"body":{"injectables/AuthorityService.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"injectables/OrganizationService.html":{}}}],["true",{"_index":99,"title":{},"body":{"classes/Authority.html":{},"injectables/CommonService.html":{},"classes/ContextTrace.html":{},"injectables/ImportService.html":{},"controllers/IndexController.html":{},"classes/Logger.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/StorageController.html":{},"classes/User.html":{}}}],["true})@column({comment",{"_index":1580,"title":{},"body":{"classes/User.html":{}}}],["try",{"_index":1545,"title":{},"body":{"classes/StorageController.html":{}}}],["ttl",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":155,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/ContextTrace.html":{},"classes/ExceptionsFilter.html":{},"controllers/IndexController.html":{},"classes/Logger.html":{},"classes/Organization.html":{},"classes/Role.html":{},"injectables/SearchService.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"classes/StatusTask.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":696,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["typeorm",{"_index":149,"title":{},"body":{"classes/Authority.html":{},"injectables/AuthorityService.html":{},"classes/Base.html":{},"classes/BaseService.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"injectables/CommonService.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"injectables/ImportService.html":{},"classes/Organization.html":{},"injectables/OrganizationService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"injectables/Seed.html":{},"classes/Setting.html":{},"injectables/SettingService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["typeormmodule",{"_index":381,"title":{},"body":{"modules/CommonModule.html":{}}}],["typeormmodule.forfeature([setting",{"_index":419,"title":{},"body":{"modules/CommonModule.html":{}}}],["typeormmodule.forroot(config.orm",{"_index":418,"title":{},"body":{"modules/CommonModule.html":{}}}],["typeormmoduleoptions",{"_index":382,"title":{},"body":{"modules/CommonModule.html":{}}}],["typeoutput",{"_index":703,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["unauthorizedexception",{"_index":1103,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":95,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["undefined)@jointable",{"_index":1227,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["unique",{"_index":98,"title":{},"body":{"classes/Authority.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["unknown",{"_index":878,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["unlink",{"_index":1502,"title":{},"body":{"classes/StatusTask.html":{}}}],["unlinkdir",{"_index":1503,"title":{},"body":{"classes/StatusTask.html":{}}}],["update",{"_index":167,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SettingController.html":{},"classes/UserController.html":{}}}],["update(@body",{"_index":220,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SettingController.html":{},"classes/UserController.html":{}}}],["update(dto",{"_index":188,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SettingController.html":{},"classes/UserController.html":{}}}],["update_at",{"_index":79,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["updatecontentdto",{"_index":788,"title":{"classes/UpdateContentDto.html":{}},"body":{"classes/CreateContentDto.html":{},"classes/UpdateContentDto.html":{},"coverage.html":{}}}],["updatedatecolumn",{"_index":282,"title":{},"body":{"classes/Base.html":{}}}],["updatedatecolumn({comment",{"_index":126,"title":{},"body":{"classes/Authority.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Content.html":{},"classes/Organization.html":{},"classes/Role.html":{},"classes/Setting.html":{},"classes/User.html":{}}}],["upload",{"_index":1515,"title":{},"body":{"classes/StorageController.html":{},"miscellaneous/enumerations.html":{}}}],["upload(@req",{"_index":1533,"title":{},"body":{"classes/StorageController.html":{}}}],["upload(req",{"_index":1518,"title":{},"body":{"classes/StorageController.html":{}}}],["uploadactiontype",{"_index":1527,"title":{},"body":{"classes/StorageController.html":{},"miscellaneous/enumerations.html":{}}}],["uploadactiontype.import",{"_index":1541,"title":{},"body":{"classes/StorageController.html":{}}}],["uploadactiontype.upload",{"_index":1540,"title":{},"body":{"classes/StorageController.html":{}}}],["uploaddirpath",{"_index":1481,"title":{},"body":{"classes/StatusTask.html":{}}}],["uploadpath",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploads",{"_index":1357,"title":{},"body":{"injectables/Seed.html":{},"classes/StatusTask.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":305,"title":{},"body":{"classes/Category.html":{},"classes/ExceptionsFilter.html":{},"controllers/IndexController.html":{},"classes/Setting.html":{}}}],["use",{"_index":1772,"title":{},"body":{"license.html":{}}}],["useguards",{"_index":194,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{}}}],["useguards(authguard",{"_index":208,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SearchController.html":{},"classes/SettingController.html":{},"classes/StorageController.html":{},"classes/UserController.html":{}}}],["useinterceptors",{"_index":199,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SettingController.html":{},"classes/UserController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":209,"title":{},"body":{"classes/AuthorityController.html":{},"classes/CategoryController.html":{},"classes/ContentController.html":{},"classes/OrganizationController.html":{},"classes/RoleController.html":{},"classes/SettingController.html":{},"classes/UserController.html":{}}}],["usepipes",{"_index":1140,"title":{},"body":{"classes/LoginController.html":{},"classes/UserController.html":{}}}],["usepipes(new",{"_index":1145,"title":{},"body":{"classes/LoginController.html":{},"classes/UserController.html":{}}}],["user",{"_index":391,"title":{"classes/User.html":{}},"body":{"modules/CommonModule.html":{},"injectables/JwtStrategy.html":{},"classes/Organization.html":{},"classes/Role.html":{},"injectables/Seed.html":{},"classes/User.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.create",{"_index":1340,"title":{},"body":{"injectables/Seed.html":{}}}],["user.create(payload",{"_index":1672,"title":{},"body":{"injectables/UserService.html":{}}}],["user.entity",{"_index":1179,"title":{},"body":{"classes/Organization.html":{},"classes/Role.html":{}}}],["user.org",{"_index":1180,"title":{},"body":{"classes/Organization.html":{}}}],["user.password",{"_index":1667,"title":{},"body":{"injectables/UserService.html":{}}}],["user.roles",{"_index":1242,"title":{},"body":{"classes/Role.html":{},"injectables/Seed.html":{}}}],["usercontroller",{"_index":19,"title":{"classes/UserController.html":{}},"body":{"modules/ApiModule.html":{},"classes/UserController.html":{},"coverage.html":{}}}],["username",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrepository",{"_index":1641,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":1166,"title":{},"body":{"classes/Organization.html":{},"classes/Role.html":{},"injectables/Seed.html":{}}}],["userservice",{"_index":373,"title":{"injectables/UserService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginController.html":{},"classes/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["util",{"_index":673,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["util.inspect(value",{"_index":697,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["util.promisify(fs.readfile",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uuid",{"_index":1523,"title":{},"body":{"classes/StorageController.html":{}}}],["val",{"_index":510,"title":{},"body":{"classes/Content.html":{},"classes/ExcelHelper.html":{},"miscellaneous/variables.html":{}}}],["val.address",{"_index":515,"title":{},"body":{"classes/Content.html":{}}}],["val.company",{"_index":511,"title":{},"body":{"classes/Content.html":{}}}],["val.content",{"_index":530,"title":{},"body":{"classes/Content.html":{}}}],["val.fax",{"_index":513,"title":{},"body":{"classes/Content.html":{}}}],["val.name",{"_index":562,"title":{},"body":{"classes/Content.html":{},"miscellaneous/variables.html":{}}}],["val.nickname",{"_index":528,"title":{},"body":{"classes/Content.html":{}}}],["val.phone",{"_index":512,"title":{},"body":{"classes/Content.html":{}}}],["val.postcode",{"_index":516,"title":{},"body":{"classes/Content.html":{}}}],["val.question",{"_index":519,"title":{},"body":{"classes/Content.html":{}}}],["val.reply",{"_index":520,"title":{},"body":{"classes/Content.html":{}}}],["val.sale",{"_index":514,"title":{},"body":{"classes/Content.html":{}}}],["val.title",{"_index":529,"title":{},"body":{"classes/Content.html":{}}}],["validate",{"_index":1094,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":1097,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationpipe",{"_index":1138,"title":{},"body":{"classes/LoginController.html":{},"classes/UserController.html":{}}}],["validator",{"_index":787,"title":{},"body":{"classes/CreateContentDto.html":{},"classes/LoginDto.html":{},"classes/PasswordDto.html":{},"classes/UpdateContentDto.html":{}}}],["value",{"_index":85,"title":{},"body":{"classes/Authority.html":{},"classes/ContextTrace.html":{},"classes/Logger.html":{},"classes/Organization.html":{}}}],["value.columnnumber",{"_index":695,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["value.context",{"_index":693,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["value.linenumber",{"_index":694,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["variable",{"_index":1683,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1821,"title":{"miscellaneous/variables.html":{}},"body":{}}],["video",{"_index":475,"title":{},"body":{"classes/Content.html":{},"controllers/IndexController.html":{},"miscellaneous/variables.html":{}}}],["video(@req",{"_index":1068,"title":{},"body":{"controllers/IndexController.html":{}}}],["video(req",{"_index":1004,"title":{},"body":{"controllers/IndexController.html":{}}}],["video/characteristic",{"_index":1069,"title":{},"body":{"controllers/IndexController.html":{}}}],["video/show",{"_index":1070,"title":{},"body":{"controllers/IndexController.html":{}}}],["video_list",{"_index":1032,"title":{},"body":{"controllers/IndexController.html":{}}}],["videodetail",{"_index":1071,"title":{},"body":{"controllers/IndexController.html":{}}}],["videopath",{"_index":483,"title":{},"body":{"classes/Content.html":{},"miscellaneous/variables.html":{}}}],["views",{"_index":476,"title":{},"body":{"classes/Content.html":{},"classes/CreateContentDto.html":{},"classes/UpdateContentDto.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":11,"title":{},"body":{"modules/ApiModule.html":{},"classes/Logger.html":{}}}],["warn",{"_index":681,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["warn(...args",{"_index":748,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["warning",{"_index":1113,"title":{},"body":{"classes/Logger.html":{}}}],["warning(...args",{"_index":750,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["warranties",{"_index":1799,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1794,"title":{},"body":{"license.html":{}}}],["watchfiles",{"_index":1446,"title":{},"body":{"classes/StatusTask.html":{}}}],["websocket",{"_index":1746,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["websocketgateway",{"_index":1457,"title":{},"body":{"classes/StatusTask.html":{}}}],["websocketgateway(config.websocket.port",{"_index":1464,"title":{},"body":{"classes/StatusTask.html":{}}}],["websocketserver",{"_index":1448,"title":{},"body":{"classes/StatusTask.html":{}}}],["wechat",{"_index":1398,"title":{},"body":{"classes/Setting.html":{}}}],["week",{"_index":1473,"title":{},"body":{"classes/StatusTask.html":{}}}],["weibo",{"_index":1399,"title":{},"body":{"classes/Setting.html":{}}}],["whether",{"_index":1811,"title":{},"body":{"license.html":{}}}],["without",{"_index":1767,"title":{},"body":{"license.html":{}}}],["workbook",{"_index":799,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["workbook.addworksheet(sheetsmap.map",{"_index":850,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["workbook.eachsheet((worksheet",{"_index":814,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["workbook.xlsx.load(buffer",{"_index":813,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["workbook.xlsx.readfile(filepath",{"_index":811,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["workbook.xlsx.writebuffer",{"_index":872,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["worksheet.eachrow((row",{"_index":823,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["worksheet.getrow(1).eachcell((cell",{"_index":834,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["worksheet.name",{"_index":848,"title":{},"body":{"classes/ExcelHelper.html":{}}}],["yarn",{"_index":1736,"title":{},"body":{"index.html":{}}}],["youch",{"_index":883,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["youch(exception",{"_index":909,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/ApiModule.html":{"url":"modules/ApiModule.html","title":"module - ApiModule","body":"\n                   \n\n\n\n\n    模块列表\n    ApiModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            server/src/api/api.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/api/api.module.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, NestModule, MiddlewareConsumer } from '@nestjs/common';\nimport { logger } from '../common/aspects/middlewares';\nimport { LoginController } from './controllers/login.controller';\nimport { UserController } from './controllers/user.controller';\nimport { StorageController } from './controllers/storage.controller';\nimport { ContentController } from './controllers/content.controller';\nimport { SettingController } from './controllers/setting.controller';\nimport { CategoryController } from './controllers/category.controller';\nimport { OrganizationController } from './controllers/organization.controller';\nimport { RoleController } from './controllers/role.controller';\nimport { AuthorityController } from './controllers/authority.controller';\nimport { SearchController } from './controllers/search.controller';\n\n@Module({\n    controllers: [\n        StorageController,\n        SettingController,\n        LoginController,\n        UserController,\n        ContentController,\n        CategoryController,\n        OrganizationController,\n        AuthorityController,\n        RoleController,\n        SearchController\n    ]\n})\nexport class ApiModule implements NestModule {\n    configure(consumer: MiddlewareConsumer): void {\n        consumer.apply(logger).forRoutes('*');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    模块列表\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nApiModule\n\nApiModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nSSRModule\n\nSSRModule\n\nAppModule -->\n\nSSRModule->AppModule\n\n\n\n\n\nSeed\n\nSeed\n\nAppModule -->\n\nSeed->AppModule\n\n\n\n\n\n\n    \n    \n    \n        放大\n        重置\n        缩小\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            server/src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    提供商列表\n                    \n                        \n                            Seed\n                        \n                    \n                \n                \n                    引入\n                    \n                        \n                            ApiModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            SSRModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Seed } from './seed';\nimport { CommonModule } from './common/common.module';\nimport { ApiModule } from './api/api.module';\nimport { SSRModule } from './ssr/ssr.module';\n\n@Module({\n\timports: [ CommonModule, ApiModule, SSRModule ],\n\tproviders: [ Seed ]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Authority.html":{"url":"classes/Authority.html","title":"class - Authority","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Authority\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/authority.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                desc\n                            \n                            \n                                ex_info\n                            \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                            \n                                roles\n                            \n                            \n                                    Static\n                                    Readonly\n                                sheetsMap\n                            \n                            \n                                sort\n                            \n                            \n                                token\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    label\n                                \n                                \n                                    title\n                                \n                                \n                                    key\n                                \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Authority[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @TreeChildren()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/authority.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desc\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '描述', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/authority.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/authority.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '名称', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/authority.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Authority\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @TreeParent()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/authority.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Role[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ManyToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/authority.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            sheetsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n        权限: {\n            map: 'authoritys',\n            handleType: ExcelHandleType.ARRAY,\n            cellsMap: {\n                ID: 'id',\n                名称: 'name',\n                标识: 'token',\n                描述: 'desc',\n                排序: 'sort',\n                PID: 'parent'\n            }\n        }\n    }\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/authority.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '排序', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/authority.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '标识', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/authority.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: Object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/authority.entity.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                Object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(path: string)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n\n                \n                    \n                        getlabel()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/authority.entity.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/authority.entity.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n\n                \n                    \n                        getkey()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/authority.entity.ts:49\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/authority.entity.ts:54\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { plainToClass, Expose } from 'class-transformer';\nimport { Base } from './base';\nimport { Entity, Column, Tree, TreeParent, TreeChildren, ManyToMany } from 'typeorm';\nimport { ExcelHandleType } from '../lib/excel';\nimport { Role } from '../../common/entities/role.entity';\n\n@Entity()\n@Tree('materialized-path')\nexport class Authority extends Base {\n    @Column({\n        comment: '名称',\n        unique: true\n    })\n    name: string;\n\n    @Column({\n        comment: '标识',\n        unique: true\n    })\n    token: string;\n\n    @Column({ comment: '描述', default: '' })\n    desc: string;\n\n    @Column({ comment: '排序', default: 0 })\n    sort: number;\n\n    @Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n    ex_info: any;\n\n    @TreeChildren() children: Authority[];\n\n    @TreeParent() parent: Authority;\n\n    @ManyToMany((type) => Role, (role) => role.authoritys)\n    roles: Role[];\n\n    @Expose()\n    get label(): string {\n        return this.name;\n    }\n\n    @Expose()\n    get title(): string {\n        return this.name;\n    }\n\n    @Expose()\n    get key(): string {\n        return this.id;\n    }\n\n    @Expose()\n    get value(): string {\n        return this.id;\n    }\n\n    static readonly sheetsMap: object = {\n        权限: {\n            map: 'authoritys',\n            handleType: ExcelHandleType.ARRAY,\n            cellsMap: {\n                ID: 'id',\n                名称: 'name',\n                标识: 'token',\n                描述: 'desc',\n                排序: 'sort',\n                PID: 'parent'\n            }\n        }\n    };\n\n    static create(target: Object) {\n        return plainToClass(Authority, target);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/AuthorityController.html":{"url":"classes/AuthorityController.html","title":"class - AuthorityController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  AuthorityController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/authority.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                parent\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(authorityService: AuthorityService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/authority.controller.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        authorityService\n                                                  \n                                                        \n                                                                        AuthorityService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/authority.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/authority.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('list')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/authority.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            parent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parent(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put('parent')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/authority.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/authority.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/authority.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport {\n    UseGuards,\n    Get,\n    Query,\n    Delete,\n    Param,\n    BadRequestException,\n    Post,\n    Put,\n    Body,\n    UseInterceptors\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ClassSerializerInterceptor } from '@nestjs/common';\nimport { Api } from '../../common/aspects/decorator';\nimport { AuthorityService } from '../../common/services/authority.service';\n\n@Api('authority')\n@ApiUseTags('authority')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\n@UseInterceptors(ClassSerializerInterceptor)\nexport class AuthorityController {\n    constructor(private readonly authorityService: AuthorityService) {}\n\n    @Get(':id')\n    async findOne(@Param('id') id) {\n        if (!id) throw new BadRequestException('参数 id 错误');\n\n        return await this.authorityService.findOneById(id);\n    }\n\n    @Get('list')\n    async list(@Query() payload) {\n        return await this.authorityService.query(payload);\n    }\n\n    @Post()\n    async create(@Body() dto: any) {\n        return await this.authorityService.save(dto);\n    }\n\n    @Put()\n    async update(@Body() dto: any) {\n        return await this.authorityService.save(dto);\n    }\n\n    @Put('parent')\n    async parent(@Body() dto: any) {\n        return await this.authorityService.parent(dto);\n    }\n\n    @Delete()\n    async remove(@Query() payload) {\n        return await this.authorityService.delete(payload.selectedRows.split(','));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/AuthorityService.html":{"url":"injectables/AuthorityService.html","title":"injectable - AuthorityService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  AuthorityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/authority.service.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseService\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findOneByName\n                            \n                            \n                                    Async\n                                parent\n                            \n                            \n                                    Async\n                                query\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(authorityRepository: TreeRepository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/authority.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        authorityRepository\n                                                  \n                                                        \n                                                                        TreeRepository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(ids: string[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/authority.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByName(name: string)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/authority.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            parent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parent(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/authority.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/authority.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/authority.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { Injectable, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TreeRepository } from 'typeorm';\nimport { BaseService } from './base.service';\nimport { Authority } from '../entities/authority.entity';\n\n@Injectable()\nexport class AuthorityService extends BaseService {\n    constructor(\n        @InjectRepository(Authority) private readonly authorityRepository: TreeRepository\n    ) {\n        super(authorityRepository);\n    }\n\n    async query(payload: any) {\n        return await this.authorityRepository.findTrees();\n    }\n\n    async findOneByName(name: string) {\n        return await this.authorityRepository.findOne({ name });\n    }\n\n    async save(payload: any) {\n        const target = Authority.create(payload) as Authority;\n\n        if (!!payload.parentId) {\n            target.parent = await this.authorityRepository.findOne(payload.parentId);\n        }\n\n        return await this.authorityRepository.save(target);\n    }\n\n    async parent(payload: any) {\n        const target = await this.authorityRepository.findOne(payload.id);\n        target.parent = await this.authorityRepository.findOne(payload.parentId);\n\n        return await this.authorityRepository.save(target);\n    }\n\n    async delete(ids: string[]) {\n        const roots = await this.authorityRepository.findRoots();\n\n        // roots.forEach(root => {\n        // \tif (ids.includes(root.id)) throw new BadRequestException('不能删除根节点');\n        // });\n\n        return await this.authorityRepository.delete(ids);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/base.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/base.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/base.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/base.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/base.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(path: string)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/base.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn, Column } from 'typeorm';\nimport { config } from '../../config';\nimport { RowStatus } from '../aspects/enum';\nimport { Exclude } from 'class-transformer';\n\nexport abstract class Base {\n\t@PrimaryGeneratedColumn('uuid') id: string;\n\n\t@Exclude()\n\t@Column({\n\t\ttype: 'enum',\n\t\tdefault: RowStatus.NORMAL,\n\t\tenum: RowStatus,\n\t\tcomment: '行状态'\n\t})\n\trow_status: RowStatus;\n\n\t@CreateDateColumn({\n\t\tcomment: '创建时间'\n\t})\n\tcreate_at: number;\n\n\t@UpdateDateColumn({\n\t\tcomment: '更新时间'\n\t})\n\tupdate_at: number;\n\n\tstatic getFullPath(path: string) {\n\t\tconst staticRoot = `${config.serverUrl}/${config.static.root}`;\n\n\t\tif (!!path) {\n\t\t\treturn path.startsWith('/') ? `${staticRoot}${path}` : path;\n\t\t}\n\n\t\treturn '';\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/BaseService.html":{"url":"classes/BaseService.html","title":"class - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/base.service.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/base.service.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/base.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/base.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Repository } from 'typeorm';\n\nexport abstract class BaseService {\n    constructor(private readonly repository: Repository) {}\n\n    async findOneById(id: string) {\n        return await this.repository.findOne(id);\n    }\n\n    async remove(ids: string[]) {\n        return await this.repository.remove(await this.repository.findByIds(ids));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/category.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                contents\n                            \n                            \n                                ex_info\n                            \n                            \n                                icon\n                            \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                            \n                                    Static\n                                    Readonly\n                                sheetsMap\n                            \n                            \n                                sort\n                            \n                            \n                                url\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Category[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @TreeChildren()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/category.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Content[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/category.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/category.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '图标', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/category.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '名称'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/category.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Category\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @TreeParent()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/category.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            sheetsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n\t\t分类: {\n\t\t\tmap: 'categorys',\n\t\t\thandleType: ExcelHandleType.ARRAY,\n\t\t\tcellsMap: { ID: 'id', 名称: 'name', 图标: 'icon', 链接: 'url', 排序: 'sort', PID: 'parent' }\n\t\t}\n\t}\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/category.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '排序', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/category.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '地址'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/category.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/category.entity.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(path: string)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Base } from './base';\nimport { Entity, Column, Tree, TreeChildren, TreeParent, OneToMany } from 'typeorm';\nimport { plainToClass } from 'class-transformer';\nimport { ExcelHandleType } from '../lib/excel';\nimport { Content } from './content.entity';\n\n@Entity()\n@Tree('materialized-path')\nexport class Category extends Base {\n\t@Column({ comment: '名称' })\n\tname: string;\n\n\t@Column({ comment: '图标', default: '' })\n\ticon: string;\n\n\t@Column({ comment: '地址' })\n\turl: string;\n\n\t@Column({ comment: '排序', default: 0 })\n\tsort: number;\n\n\t@Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n\tex_info: any;\n\n\t@OneToMany((type) => Content, (content) => content.category)\n\tcontents: Content[];\n\n\t@TreeChildren() children: Category[];\n\n\t@TreeParent() parent: Category;\n\n\tstatic readonly sheetsMap: object = {\n\t\t分类: {\n\t\t\tmap: 'categorys',\n\t\t\thandleType: ExcelHandleType.ARRAY,\n\t\t\tcellsMap: { ID: 'id', 名称: 'name', 图标: 'icon', 链接: 'url', 排序: 'sort', PID: 'parent' }\n\t\t}\n\t};\n\n\tstatic create(target: object) {\n\t\treturn plainToClass(Category, target);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/CategoryController.html":{"url":"classes/CategoryController.html","title":"class - CategoryController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  CategoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/category.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/category.controller.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/category.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/category.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('list')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/category.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/category.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/category.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport {\n\tUseGuards,\n\tGet,\n\tQuery,\n\tDelete,\n\tParam,\n\tBadRequestException,\n\tPost,\n\tPut,\n\tBody,\n\tUseInterceptors\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ClassSerializerInterceptor } from '@nestjs/common';\nimport { Api } from '../../common/aspects/decorator';\nimport { CategoryService } from '../../common/services/category.service';\n\n@Api('category')\n@ApiUseTags('category')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\n@UseInterceptors(ClassSerializerInterceptor)\nexport class CategoryController {\n\tconstructor(private readonly categoryService: CategoryService) { }\n\n\t@Get(':id')\n\tasync findOne(@Param('id') id) {\n\t\tif (!id) throw new BadRequestException('参数 id 错误');\n\n\t\treturn await this.categoryService.findOneById(id);\n\t}\n\n\t@Get('list')\n\tasync list(@Query() payload) {\n\t\treturn await this.categoryService.query(payload);\n\t}\n\n\t// @Get('export')\n\t// async export(@Query() payload) {\n\t// \treturn await this.categoryService.query(payload);\n\t// }\n\n\t@Post()\n\tasync create(@Body() dto: any) {\n\t\treturn await this.categoryService.save(dto);\n\t}\n\n\t@Put()\n\tasync update(@Body() dto: any) {\n\t\treturn await this.categoryService.save(dto);\n\t}\n\n\t@Delete()\n\tasync remove(@Query() payload) {\n\t\treturn await this.categoryService.remove(payload.selectedRows.split(','));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/category.service.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseService\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneByName\n                            \n                            \n                                    Async\n                                findParentsTree\n                            \n                            \n                                    Async\n                                query\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(categoryRepository: TreeRepository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/category.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        categoryRepository\n                                                  \n                                                        \n                                                                        TreeRepository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByName(name: string)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/category.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findParentsTree\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findParentsTree(category: Category)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/category.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                Category\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/category.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/category.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TreeRepository } from 'typeorm';\nimport { BaseService } from './base.service';\nimport { Category } from '../entities/category.entity';\n\n@Injectable()\nexport class CategoryService extends BaseService {\n\tconstructor(@InjectRepository(Category) private readonly categoryRepository: TreeRepository) {\n\t\tsuper(categoryRepository);\n\t}\n\n\tasync query(payload: any) {\n\n\t\treturn await this.categoryRepository.findTrees();\n\t}\n\n\tasync findOneByName(name: string) {\n\t\treturn await this.categoryRepository.findOne({ name });\n\t}\n\n\tasync findParentsTree(category: Category) {\n\t\treturn await this.categoryRepository.findAncestorsTree(category);\n\t}\n\n\tasync save(payload: any) {\n\t\tconst category = Category.create(payload) as Category;\n\n\t\t// if (!_.isEmpty(payload.category) && _.isString(content.category)) {\n\t\t// \tcontent.category = await this.categoryRepository.findOneById(category.parent);\n\t\t// }\n\n\t\treturn await this.categoryRepository.save(category);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    模块列表\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nAuthorityService \n\nAuthorityService \n\n\n\nCategoryService \n\nCategoryService \n\n\n\nCommonService \n\nCommonService \n\n\n\nContentService \n\nContentService \n\n\n\nImportService \n\nImportService \n\n\n\nOrganizationService \n\nOrganizationService \n\n\n\nRoleService \n\nRoleService \n\n\n\nSearchService \n\nSearchService \n\n\n\nSettingService \n\nSettingService \n\n\n\nUserService \n\nUserService \n\n\n\nCommonModule\n\nCommonModule\n\nAuthorityService  -->\n\nCommonModule->AuthorityService \n\n\n\nCategoryService  -->\n\nCommonModule->CategoryService \n\n\n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\nContentService  -->\n\nCommonModule->ContentService \n\n\n\nImportService  -->\n\nCommonModule->ImportService \n\n\n\nOrganizationService  -->\n\nCommonModule->OrganizationService \n\n\n\nRoleService  -->\n\nCommonModule->RoleService \n\n\n\nSearchService  -->\n\nCommonModule->SearchService \n\n\n\nSettingService  -->\n\nCommonModule->SettingService \n\n\n\nUserService  -->\n\nCommonModule->UserService \n\n\n\n\n\nAuthorityService\n\nAuthorityService\n\nCommonModule -->\n\nAuthorityService->CommonModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCommonModule -->\n\nCategoryService->CommonModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\nContentService\n\nContentService\n\nCommonModule -->\n\nContentService->CommonModule\n\n\n\n\n\nImportService\n\nImportService\n\nCommonModule -->\n\nImportService->CommonModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nCommonModule -->\n\nJwtStrategy->CommonModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nCommonModule -->\n\nOrganizationService->CommonModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nCommonModule -->\n\nRoleService->CommonModule\n\n\n\n\n\nSearchService\n\nSearchService\n\nCommonModule -->\n\nSearchService->CommonModule\n\n\n\n\n\nSettingService\n\nSettingService\n\nCommonModule -->\n\nSettingService->CommonModule\n\n\n\n\n\nUserService\n\nUserService\n\nCommonModule -->\n\nUserService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        放大\n        重置\n        缩小\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            server/src/common/common.module.ts\n        \n\n\n\n\n        \n            \n                \n                    提供商列表\n                    \n                        \n                            AuthorityService\n                        \n                        \n                            CategoryService\n                        \n                        \n                            CommonService\n                        \n                        \n                            ContentService\n                        \n                        \n                            ImportService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            OrganizationService\n                        \n                        \n                            RoleService\n                        \n                        \n                            SearchService\n                        \n                        \n                            SettingService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    导出\n                    \n                        \n                            AuthorityService\n                        \n                        \n                            CategoryService\n                        \n                        \n                            CommonService\n                        \n                        \n                            ContentService\n                        \n                        \n                            ImportService\n                        \n                        \n                            OrganizationService\n                        \n                        \n                            RoleService\n                        \n                        \n                            SearchService\n                        \n                        \n                            SettingService\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, Global, CacheModule } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport { RedisModule } from 'nestjs-redis';\nimport { ScheduleModule } from 'nest-schedule';\nimport { config } from '../config';\nimport { UserService } from './services/user.service';\nimport { JwtStrategy } from './strategys/jwt.strategy';\nimport { User } from './entities/user.entity';\nimport { Content } from './entities/content.entity';\nimport { Category } from './entities/category.entity';\nimport { Setting } from './entities/setting.entity';\nimport { Organization } from './entities/organization.entity';\nimport { Role } from './entities/role.entity';\nimport { Authority } from './entities/authority.entity';\nimport { CommonService } from './services/common.service';\nimport { SettingService } from './services/setting.service';\nimport { ImportService } from './services/import.service';\nimport { CategoryService } from './services/category.service';\nimport { ContentService } from './services/content.service';\nimport { StatusTask } from './tasks/status.task';\nimport { OrganizationService } from './services/organization.service';\nimport { RoleService } from './services/role.service';\nimport { AuthorityService } from './services/authority.service';\nimport { SearchService } from './services/search.service';\n\n@Global()\n@Module({\n    imports: [\n        // CacheModule.register({\n        // \t...config.cache\n        // }),\n        RedisModule.register(config.redis),\n        ScheduleModule.register(),\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n        JwtModule.register(config.jwt),\n        TypeOrmModule.forRoot(config.orm as TypeOrmModuleOptions),\n        TypeOrmModule.forFeature([Setting, Category, User, Content, Organization, Role, Authority])\n    ],\n    providers: [\n        JwtStrategy,\n        ImportService,\n        CommonService,\n        CategoryService,\n        ContentService,\n        UserService,\n        SettingService,\n        OrganizationService,\n        AuthorityService,\n        RoleService,\n        SearchService,\n        StatusTask\n    ],\n    exports: [\n        ImportService,\n        CommonService,\n        CategoryService,\n        ContentService,\n        UserService,\n        SettingService,\n        OrganizationService,\n        AuthorityService,\n        RoleService,\n        SearchService\n    ]\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/common.service.ts\n        \n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                redisClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkSVGCode\n                            \n                            \n                                    Async\n                                getSiteInfo\n                            \n                            \n                                    Async\n                                getSVGCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(settingService: SettingService, redisService: RedisService, categoryRepository: TreeRepository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/common.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        settingService\n                                                  \n                                                        \n                                                                        SettingService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                    RedisService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        categoryRepository\n                                                  \n                                                        \n                                                                        TreeRepository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkSVGCode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkSVGCode(svg_hash: string, svg_text: string)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/common.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    svg_hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    svg_text\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSiteInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSiteInfo()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/common.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSVGCode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSVGCode()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/common.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :     {}\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redisClient\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Redis\n\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/services/common.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import * as crypto from 'crypto';\nimport * as svgCaptcha from 'svg-captcha';\nimport { Redis } from 'ioredis';\nimport { RedisService } from 'nestjs-redis';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Category } from '../entities/category.entity';\nimport { TreeRepository } from 'typeorm';\nimport { SettingService } from './setting.service';\n\n@Injectable()\nexport class CommonService {\n\tredisClient: Redis;\n\tconstructor(\n\t\tprivate readonly settingService: SettingService,\n\t\tprivate readonly redisService: RedisService,\n\t\t@InjectRepository(Category) private readonly categoryRepository: TreeRepository\n\t) {\n\t\tthis.redisClient = this.redisService.getClient();\n\t}\n\n\tasync getSiteInfo() {\n\t\tconst menus = await this.categoryRepository.findTrees();\n\t\tconst setting = await this.settingService.getSettingByToken();\n\t\treturn {\n\t\t\tmenus,\n\t\t\t...setting.ex_info\n\t\t};\n\t}\n\n\tasync getSVGCode() {\n\t\tconst { text, data } = svgCaptcha.create({\n\t\t\tsize: 4, // 验证码长度\n\t\t\tignoreChars: '0oO1I1k', // 验证码字符中排除 0o1i\n\t\t\tnoise: 4, // 干扰线条的数量\n\t\t\tcolor: true, // 验证码的字符是否有颜色，默认没有，如果设定了背景，则默认有\n\t\t\tbackground: '#cc9966' // 验证码图片背景颜色\n\t\t});\n\t\tconst svg_hash = crypto.createHash('md5').update(data).digest('hex');\n\t\t\n\t\tthis.redisClient.set(\n\t\t\tsvg_hash,\n\t\t\ttext,\n\t\t\t'EX',\n\t\t\t60*2\n\t\t);\n\t\treturn {\n\t\t\tsvg_hash,\n\t\t\tsvg_code: data\n\t\t};\n\t}\n\n\tasync checkSVGCode(svg_hash: string, svg_text: string) {\n\t\tconst svg_text_in_redis = await this.redisClient.get(svg_hash);\n\n\t\tif (svg_text_in_redis && svg_text_in_redis.toUpperCase() === svg_text.toUpperCase()) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Content.html":{"url":"classes/Content.html","title":"class - Content","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Content\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/content.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                author\n                            \n                            \n                                category\n                            \n                            \n                                    Static\n                                    Readonly\n                                esIndex\n                            \n                            \n                                ex_info\n                            \n                            \n                                publish_at\n                            \n                            \n                                    Static\n                                    Readonly\n                                sheetsMap\n                            \n                            \n                                sort\n                            \n                            \n                                source\n                            \n                            \n                                summary\n                            \n                            \n                                text\n                            \n                            \n                                thumbnail\n                            \n                            \n                                title\n                            \n                            \n                                video\n                            \n                            \n                                views\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                afterInsert\n                            \n                            \n                                    Async\n                                afterUpdate\n                            \n                            \n                                    Async\n                                beforeInsert\n                            \n                            \n                                    Async\n                                beforeRemove\n                            \n                            \n                                    Async\n                                beforeUpdate\n                            \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thumbnailPath\n                                \n                                \n                                    videoPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '地址', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '作者', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Category\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:128\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            esIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         IndicesCreateParams\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n        index: 'contents',\n        body: {\n            type: 'content',\n            mappings: {\n                content: {\n                    properties: {\n                        title: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        text: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        summary: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        category: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        thumbnail: {\n                            type: 'string'\n                        },\n                        video: {\n                            type: 'string'\n                        },\n                        author: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        views: {\n                            type: 'integer'\n                        },\n                        publish_at: {\n                            type: 'string'\n                        }\n                    }\n                }\n            }\n        }\n    }\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:340\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:118\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publish_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'timestamp', default: undefined, comment: '发布时间'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:125\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            sheetsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n        景区介绍: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        地理概况: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        人文历史: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        工艺特色: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        发展规划: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        当地特产: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        特色工艺品: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        游览须知: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n\n        景点一览: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        全景720度: {\n            map: '720度全景',\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        电子导游导览: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        摄影佳作: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        视频赏析: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n\n        特色餐饮: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        周边住宿: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        旅游购物: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        周边娱乐: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        游程推荐: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        美文游记: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n\n        官方公告: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        精彩活动: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        新闻动态: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        联系方式: {\n            handleType,\n            cellsMap: {\n                公司名称: 'ex_info.company',\n                电话: 'ex_info.phone',\n                传真: 'ex_info.fax',\n                销售: 'ex_info.sale',\n                地址: 'ex_info.address',\n                邮编: 'ex_info.postcode'\n            },\n            rowsMap: {\n                'ex_info.company': {\n                    header: '公司名称',\n                    handler: (val) => val.company\n                },\n                'ex_info.phone': {\n                    header: '电话',\n                    handler: (val) => val.phone\n                },\n                'ex_info.fax': {\n                    header: '传真',\n                    handler: (val) => val.fax\n                },\n                'ex_info.sale': {\n                    header: '销售',\n                    handler: (val) => val.sale\n                },\n                'ex_info.address': {\n                    header: '地址',\n                    handler: (val) => val.address\n                },\n                'ex_info.postcode': {\n                    header: '邮编',\n                    handler: (val) => val.postcode\n                }\n            }\n        },\n        留言咨询: {\n            handleType,\n            cellsMap: {\n                问题: 'ex_info.question',\n                回复: 'ex_info.reply'\n            },\n            rowsMap: {\n                'ex_info.question': {\n                    header: '问题',\n                    handler: (val) => val.question\n                },\n                'ex_info.reply': {\n                    header: '回复',\n                    handler: (val) => val.reply\n                },\n                update_at: {\n                    header: '回复时间',\n                    handler: (val) => (val ? moment(val).format('YYYY-MM-DD HH:mm:ss') : '')\n                },\n                create_at: {\n                    header: '留言时间',\n                    handler: (val) => (val ? moment(val).format('YYYY-MM-DD HH:mm:ss') : '')\n                }\n            }\n        },\n        投诉建议: {\n            handleType,\n            cellsMap: {\n                昵称: 'ex_info.nickname',\n                标题: 'ex_info.title',\n                内容: 'ex_info.content',\n                电话: 'ex_info.phone'\n            },\n            rowsMap: {\n                'ex_info.nickname': {\n                    header: '昵称',\n                    handler: (val) => val.nickname\n                },\n                'ex_info.title': {\n                    header: '标题',\n                    handler: (val) => val.title\n                },\n                'ex_info.content': {\n                    header: '内容',\n                    handler: (val) => val.content\n                },\n                'ex_info.phone': {\n                    header: '电话',\n                    handler: (val) => val.phone\n                },\n                create_at: {\n                    header: '提交时间',\n                    handler: (val) => (val ? moment(val).format('YYYY-MM-DD HH:mm:ss') : '')\n                }\n            }\n        }\n    }\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:130\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '排序', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:100\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '来源', default: '本站'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            summary\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '摘要', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:109\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '正文', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbnail\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '图片', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '标题', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            video\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '视频', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:106\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'bigint', comment: '浏览量', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/content.entity.ts:115\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            afterInsert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInsert()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @AfterInsert()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/entities/content.entity.ts:420\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            afterUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    afterUpdate()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @AfterUpdate()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/entities/content.entity.ts:440\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            beforeInsert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beforeInsert()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @BeforeInsert()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/entities/content.entity.ts:405\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            beforeRemove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beforeRemove()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @BeforeRemove()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/entities/content.entity.ts:467\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            beforeUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beforeUpdate()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @BeforeUpdate()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/entities/content.entity.ts:414\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/content.entity.ts:390\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         Content | []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(path: string)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        thumbnailPath\n                    \n                \n\n                \n                    \n                        getthumbnailPath()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/content.entity.ts:395\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        videoPath\n                    \n                \n\n                \n                    \n                        getvideoPath()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/content.entity.ts:400\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport * as moment from 'moment';\nimport {\n    Entity,\n    Column,\n    ManyToOne,\n    BeforeInsert,\n    BeforeUpdate,\n    AfterInsert,\n    AfterUpdate,\n    BeforeRemove\n} from 'typeorm';\nimport { plainToClass, Expose } from 'class-transformer';\nimport { Base } from './base';\nimport { Category } from './category.entity';\nimport { ExcelHandleType } from '../lib/excel';\nimport { es } from '../lib/elastic-search';\nimport { textInterception, extractionTextInHtml } from '../lib/helper';\nimport { IndicesCreateParams } from 'elasticsearch';\n\nconst handleType = ExcelHandleType.ARRAY;\nconst cellsMap = {\n    标题: 'title',\n    作者: 'author',\n    来源: 'source',\n    地址: 'address',\n    排序: 'sort',\n    发布时间: 'publish_at',\n    正文: 'text',\n    图片: 'thumbnail',\n    视频: 'video'\n};\nconst rowsMap = {\n    id: {\n        header: '编号'\n    },\n    title: {\n        header: '标题'\n    },\n    author: {\n        header: '作者'\n    },\n    source: {\n        header: '来源'\n    },\n    address: {\n        header: '地址'\n    },\n    sort: {\n        header: '排序'\n    },\n    thumbnailPath: {\n        header: '图片',\n        key: 'thumbnail',\n        handler: (val) => Content.getFullPath(val)\n    },\n    videoPath: {\n        header: '视频',\n        key: 'video',\n        handler: (val) => Content.getFullPath(val)\n    },\n    summary: {\n        header: '摘要'\n    },\n    text: {\n        header: '正文'\n    },\n    views: {\n        header: '浏览量'\n    },\n    publish_at: {\n        header: '发布时间',\n        handler: (val) => (val ? moment(val).format('YYYY-MM-DD HH:mm:ss') : '')\n    },\n    update_at: {\n        header: '修改时间',\n        handler: (val) => (val ? moment(val).format('YYYY-MM-DD HH:mm:ss') : '')\n    },\n    category: {\n        header: '分类',\n        handler: (val) => (val ? val.name : '')\n    }\n};\n\n@Entity()\nexport class Content extends Base {\n    @Column({ comment: '标题', default: '' })\n    title: string;\n\n    @Column({ comment: '作者', default: '' })\n    author: string;\n\n    @Column({ comment: '来源', default: '本站' })\n    source: string;\n\n    @Column({ comment: '地址', default: '' })\n    address: string;\n\n    @Column({ comment: '排序', default: 0 })\n    sort: number;\n\n    @Column({ comment: '图片', default: '' })\n    thumbnail: string;\n\n    @Column({ comment: '视频', default: '' })\n    video: string;\n\n    @Column({ comment: '摘要', default: '' })\n    summary: string;\n\n    @Column({ comment: '正文', default: '' })\n    text: string;\n\n    @Column({ type: 'bigint', comment: '浏览量', default: 0 })\n    views: number;\n\n    @Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n    ex_info: any;\n\n    @Column({\n        type: 'timestamp',\n        default: null,\n        comment: '发布时间'\n    })\n    publish_at: string;\n\n    @ManyToOne((type) => Category, (category) => category.contents)\n    category: Category;\n\n    static readonly sheetsMap: object = {\n        景区介绍: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        地理概况: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        人文历史: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        工艺特色: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        发展规划: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        当地特产: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        特色工艺品: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        游览须知: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n\n        景点一览: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        全景720度: {\n            map: '720度全景',\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        电子导游导览: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        摄影佳作: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        视频赏析: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n\n        特色餐饮: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        周边住宿: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        旅游购物: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        周边娱乐: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        游程推荐: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        美文游记: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n\n        官方公告: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        精彩活动: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        新闻动态: {\n            handleType,\n            cellsMap,\n            rowsMap\n        },\n        联系方式: {\n            handleType,\n            cellsMap: {\n                公司名称: 'ex_info.company',\n                电话: 'ex_info.phone',\n                传真: 'ex_info.fax',\n                销售: 'ex_info.sale',\n                地址: 'ex_info.address',\n                邮编: 'ex_info.postcode'\n            },\n            rowsMap: {\n                'ex_info.company': {\n                    header: '公司名称',\n                    handler: (val) => val.company\n                },\n                'ex_info.phone': {\n                    header: '电话',\n                    handler: (val) => val.phone\n                },\n                'ex_info.fax': {\n                    header: '传真',\n                    handler: (val) => val.fax\n                },\n                'ex_info.sale': {\n                    header: '销售',\n                    handler: (val) => val.sale\n                },\n                'ex_info.address': {\n                    header: '地址',\n                    handler: (val) => val.address\n                },\n                'ex_info.postcode': {\n                    header: '邮编',\n                    handler: (val) => val.postcode\n                }\n            }\n        },\n        留言咨询: {\n            handleType,\n            cellsMap: {\n                问题: 'ex_info.question',\n                回复: 'ex_info.reply'\n            },\n            rowsMap: {\n                'ex_info.question': {\n                    header: '问题',\n                    handler: (val) => val.question\n                },\n                'ex_info.reply': {\n                    header: '回复',\n                    handler: (val) => val.reply\n                },\n                update_at: {\n                    header: '回复时间',\n                    handler: (val) => (val ? moment(val).format('YYYY-MM-DD HH:mm:ss') : '')\n                },\n                create_at: {\n                    header: '留言时间',\n                    handler: (val) => (val ? moment(val).format('YYYY-MM-DD HH:mm:ss') : '')\n                }\n            }\n        },\n        投诉建议: {\n            handleType,\n            cellsMap: {\n                昵称: 'ex_info.nickname',\n                标题: 'ex_info.title',\n                内容: 'ex_info.content',\n                电话: 'ex_info.phone'\n            },\n            rowsMap: {\n                'ex_info.nickname': {\n                    header: '昵称',\n                    handler: (val) => val.nickname\n                },\n                'ex_info.title': {\n                    header: '标题',\n                    handler: (val) => val.title\n                },\n                'ex_info.content': {\n                    header: '内容',\n                    handler: (val) => val.content\n                },\n                'ex_info.phone': {\n                    header: '电话',\n                    handler: (val) => val.phone\n                },\n                create_at: {\n                    header: '提交时间',\n                    handler: (val) => (val ? moment(val).format('YYYY-MM-DD HH:mm:ss') : '')\n                }\n            }\n        }\n    };\n\n    static readonly esIndex: IndicesCreateParams = {\n        index: 'contents',\n        body: {\n            type: 'content',\n            mappings: {\n                content: {\n                    properties: {\n                        title: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        text: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        summary: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        category: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        thumbnail: {\n                            type: 'string'\n                        },\n                        video: {\n                            type: 'string'\n                        },\n                        author: {\n                            type: 'text',\n                            analyzer: 'ik_max_word',\n                            search_analyzer: 'ik_max_word'\n                        },\n                        views: {\n                            type: 'integer'\n                        },\n                        publish_at: {\n                            type: 'string'\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    static create(target: object): Content | Content[] {\n        return plainToClass(Content, target);\n    }\n\n    @Expose()\n    get thumbnailPath(): string {\n        return Base.getFullPath(this.thumbnail);\n    }\n\n    @Expose()\n    get videoPath(): string {\n        return Base.getFullPath(this.video);\n    }\n\n    @BeforeInsert()\n    async beforeInsert() {\n        if (_.isEmpty(this.publish_at)) {\n            this.publish_at = moment().format('YYYY-MM-DD HH:mm:ss');\n        }\n        const text = extractionTextInHtml(this.text);\n        this.summary = textInterception(text, 120);\n    }\n\n    @BeforeUpdate()\n    async beforeUpdate() {\n        const text = extractionTextInHtml(this.text);\n        this.summary = textInterception(text, 120);\n    }\n\n    @AfterInsert()\n    async afterInsert() {\n        await es.index({\n            index: Content.esIndex.index,\n            type: Content.esIndex.body.type,\n            id: this.id,\n            body: {\n                title: this.title,\n                text: this.text,\n                summary: this.summary,\n                category: this.category.name,\n                thumbnail: this.thumbnailPath,\n                video: this.videoPath,\n                views: this.views,\n                author: this.author,\n                publish_at: this.publish_at\n            }\n        });\n    }\n\n    @AfterUpdate()\n    async afterUpdate() {\n        const doc = {\n            title: this.title,\n            text: this.text,\n            summary: this.summary,\n            thumbnail: this.thumbnailPath,\n            video: this.videoPath,\n            views: this.views,\n            author: this.author,\n            publish_at: this.publish_at\n        };\n\n        if (!!this.category) {\n            doc['category'] = this.category.name;\n        }\n\n        await es.update({\n            index: Content.esIndex.index,\n            type: Content.esIndex.body.type,\n            id: this.id,\n            body: {\n                doc\n            }\n        });\n    }\n\n    @BeforeRemove()\n    async beforeRemove() {\n        await es.delete({\n            index: Content.esIndex.index,\n            type: Content.esIndex.body.type,\n            id: this.id\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/ContentController.html":{"url":"classes/ContentController.html","title":"class - ContentController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  ContentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/content.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                export\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(contentService: ContentService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/content.controller.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        contentService\n                                                  \n                                                        \n                                                                        ContentService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/content.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            export\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    export(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('export')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/content.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/content.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('list')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/content.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/content.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/content.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport {\n\tUseGuards,\n\tGet,\n\tQuery,\n\tDelete,\n\tParam,\n\tBadRequestException,\n\tPost,\n\tPut,\n\tBody,\n\tUseInterceptors\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Api } from '../../common/aspects/decorator';\nimport { ContentService } from '../../common/services/content.service';\nimport { ClassSerializerInterceptor } from '@nestjs/common';\n\n@Api('content')\n@ApiUseTags('content')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\n@UseInterceptors(ClassSerializerInterceptor)\nexport class ContentController {\n\tconstructor(private readonly contentService: ContentService) { }\n\n\t@Get(':id')\n\tasync findOne(@Param('id') id) {\n\t\tif (!id) throw new BadRequestException('参数 id 错误');\n\n\t\treturn await this.contentService.findOneById(id);\n\t}\n\n\t@Get('list')\n\tasync list(@Query() payload) {\n\t\treturn await this.contentService.query(payload);\n\t}\n\n\t@Get('export')\n\tasync export(@Query() payload) {\n\t\treturn await this.contentService.query(payload);\n\t}\n\n\t@Post()\n\tasync create(@Body() dto: any) {\n\t\treturn await this.contentService.save(dto);\n\t}\n\n\t@Put()\n\tasync update(@Body() dto: any) {\n\t\treturn await this.contentService.save(dto);\n\t}\n\n\t@Delete()\n\tasync remove(@Query() payload) {\n\t\treturn await this.contentService.remove(payload.selectedRows.split(','));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/ContentService.html":{"url":"injectables/ContentService.html","title":"injectable - ContentService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  ContentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/content.service.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseService\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneAndParents\n                            \n                            \n                                    Async\n                                query\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, contentRepository: Repository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/content.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        contentRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneAndParents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAndParents(id: string)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/content.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(payload: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/content.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/content.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { Injectable, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { TransformClassToPlain } from 'class-transformer';\nimport { BaseService } from './base.service';\nimport { Content } from '../entities/content.entity';\nimport { CategoryService } from './category.service';\nimport { ExcelHelper } from '../lib/excel';\n\n@Injectable()\nexport class ContentService extends BaseService {\n    constructor(\n        private readonly categoryService: CategoryService,\n        @InjectRepository(Content) private readonly contentRepository: Repository\n    ) {\n        super(contentRepository);\n    }\n\n    @TransformClassToPlain()\n    async query(payload: any) {\n        const qb = this.contentRepository.createQueryBuilder('t');\n\n        if (!payload.page) {\n            payload.page = 0;\n        }\n\n        if (!payload.pageSize) {\n            payload.pageSize = 10;\n        }\n\n        if (!!payload.category) {\n            qb.innerJoinAndSelect('t.category', 'category', 'category.name = :category', {\n                category: payload.category\n            });\n        }\n\n        if (!!payload.keyword) {\n            qb.andWhere(`t.title LIKE '%${payload.keyword}%'`);\n        }\n\n        if (!!payload.publish_at) {\n            payload.publish_at = payload.publish_at.split(',');\n            qb.andWhere(\n                `t.publish_at BETWEEN '${payload.publish_at.shift()}' AND '${payload.publish_at.pop()}'`\n            );\n        }\n\n        if (!!payload.sort && !!payload.order) {\n            qb.addOrderBy(`t.${payload.sort}`, payload.order);\n        } else {\n            // 默认排序规则\n            qb.addOrderBy('t.sort', 'DESC');\n            qb.addOrderBy('t.publish_at', 'DESC');\n        }\n\n        if (!!payload.isExport) {\n            if (!payload.category) throw new BadRequestException('分类参数错误');\n\n            const dataSource = await qb.getMany();\n\n            // 执行导出逻辑\n            return await ExcelHelper.export(\n                dataSource,\n                Content.sheetsMap[payload.category],\n                payload.fields.split(',')\n            );\n        } else {\n            qb.skip(payload.page * payload.pageSize);\n            qb.take(payload.pageSize);\n        }\n\n        return await qb.getManyAndCount();\n    }\n\n    @TransformClassToPlain()\n    async findOneAndParents(id: string) {\n        const content = await this.contentRepository.findOne({\n            where: { id },\n            relations: ['category']\n        });\n\n        const parents = await this.categoryService.findParentsTree(content.category);\n\n        return { content, parents };\n    }\n\n    async save(payload: any) {\n        const content = Content.create(payload) as Content;\n\n        if (!_.isEmpty(content.category) && _.isString(content.category)) {\n            content.category = await this.categoryService.findOneByName(content.category);\n        }\n\n        return await this.contentRepository.save(content);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/ContextTrace.html":{"url":"classes/ContextTrace.html","title":"class - ContextTrace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  ContextTrace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/lib/logger.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    可选的\n                                columnNumber\n                            \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    Public\n                                    Readonly\n                                    可选的\n                                lineNumber\n                            \n                            \n                                    Public\n                                    Readonly\n                                    可选的\n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(context: string, path?: string, lineNumber?: number, columnNumber?: number)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/lib/logger.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            是\n                                                    \n                                                    \n                                                \n                                                \n                                                        lineNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            是\n                                                    \n                                                    \n                                                \n                                                \n                                                        columnNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            是\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                可选的\n                            columnNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/lib/logger.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/lib/logger.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                可选的\n                            lineNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/lib/logger.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                可选的\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/lib/logger.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport * as Path from 'path';\nimport * as Log4js from 'log4js';\nimport * as Util from 'util';\nimport * as Moment from 'moment';\nimport * as StackTrace from 'stacktrace-js';\nimport Chalk from 'chalk';\n\nexport enum LoggerLevel {\n    ALL = 'ALL',\n    MARK = 'MARK',\n    TRACE = 'TRACE',\n    DEBUG = 'DEBUG',\n    INFO = 'INFO',\n    WARN = 'WARN',\n    ERROR = 'ERROR',\n    FATAL = 'FATAL',\n    OFF = 'OFF'\n}\n\nexport class ContextTrace {\n    constructor(\n        public readonly context: string,\n        public readonly path?: string,\n        public readonly lineNumber?: number,\n        public readonly columnNumber?: number\n    ) {}\n}\n\nLog4js.addLayout('Nestify', (logConfig: any) => {\n    return (logEvent: Log4js.LoggingEvent): string => {\n        let moduleName: string = '';\n        let position: string = '';\n\n        const messageList: string[] = [];\n        logEvent.data.forEach((value: any) => {\n            if (value instanceof ContextTrace) {\n                moduleName = value.context;\n                if (value.lineNumber && value.columnNumber) {\n                    position = `${value.lineNumber}, ${value.columnNumber}`;\n                }\n                return;\n            }\n\n            if (typeof value !== 'string') {\n                value = Util.inspect(value, false, 3, true);\n            }\n\n            messageList.push(value);\n        });\n\n        const messageOutput: string = messageList.join(' ');\n        const positionOutput: string = position ? ` [${position}]` : '';\n        const typeOutput: string = `[${logConfig.type}] ${logEvent.pid.toString()}   - `;\n        const dateOutput: string = `${Moment(logEvent.startTime).format('YYYY-MM-DD HH:mm:ss')}`;\n        const moduleOutput: string = moduleName ? `[${moduleName}] ` : '[LoggerService] ';\n        let levelOutput: string = `[${logEvent.level}] ${messageOutput}`;\n\n        switch (logEvent.level.toString()) {\n            case LoggerLevel.DEBUG:\n                levelOutput = Chalk.green(levelOutput);\n                break;\n            case LoggerLevel.INFO:\n                levelOutput = Chalk.cyan(levelOutput);\n                break;\n            case LoggerLevel.WARN:\n                levelOutput = Chalk.yellow(levelOutput);\n                break;\n            case LoggerLevel.ERROR:\n                levelOutput = Chalk.red(levelOutput);\n                break;\n            case LoggerLevel.FATAL:\n                levelOutput = Chalk.hex('#DD4C35')(levelOutput);\n                break;\n            default:\n                levelOutput = Chalk.grey(levelOutput);\n                break;\n        }\n\n        return `${Chalk.green(typeOutput)}${dateOutput}    ${Chalk.yellow(\n            moduleOutput\n        )}${levelOutput}${positionOutput}`;\n    };\n});\n\nLog4js.configure({\n    appenders: {\n        console: {\n            type: 'stdout',\n            layout: { type: 'Nestify' }\n        }\n    },\n    categories: {\n        default: {\n            appenders: ['console'],\n            level: 'debug'\n        }\n    }\n});\n\nconst logger = Log4js.getLogger();\nlogger.level = 'debug';\n\nexport class Logger {\n    static trace(...args) {\n        logger.trace(Logger.getStackTrace(), ...args);\n    }\n\n    static debug(...args) {\n        logger.debug(Logger.getStackTrace(), ...args);\n    }\n\n    static log(...args) {\n        logger.info(Logger.getStackTrace(), ...args);\n    }\n\n    static info(...args) {\n        logger.info(Logger.getStackTrace(), ...args);\n    }\n\n    static warn(...args) {\n        logger.warn(Logger.getStackTrace(), ...args);\n    }\n\n    static warning(...args) {\n        logger.warn(Logger.getStackTrace(), ...args);\n    }\n\n    static error(...args) {\n        logger.error(Logger.getStackTrace(), ...args);\n    }\n\n    static fatal(...args) {\n        logger.fatal(Logger.getStackTrace(), ...args);\n    }\n\n    static getStackTrace(deep: number = 2): ContextTrace {\n        const stackList: StackTrace.StackFrame[] = StackTrace.getSync();\n        const stackInfo: StackTrace.StackFrame = stackList[deep];\n\n        const lineNumber: number = stackInfo.lineNumber;\n        const columnNumber: number = stackInfo.columnNumber;\n        const fileName: string = stackInfo.fileName;\n\n        const extnameLength: number = Path.extname(fileName).length;\n        let basename: string = Path.basename(fileName);\n        basename = basename.substr(0, basename.length - extnameLength);\n        const context: string = _.upperFirst(_.camelCase(basename));\n\n        return new ContextTrace(context, fileName, lineNumber, columnNumber);\n    }\n\n    trace(...args) {\n        logger.trace(Logger.getStackTrace(), ...args);\n    }\n\n    debug(...args) {\n        logger.debug(Logger.getStackTrace(), ...args);\n    }\n\n    log(...args) {\n        logger.info(Logger.getStackTrace(), ...args);\n    }\n\n    info(...args) {\n        logger.info(Logger.getStackTrace(), ...args);\n    }\n\n    warn(...args) {\n        logger.warn(Logger.getStackTrace(), ...args);\n    }\n\n    warning(...args) {\n        logger.warn(Logger.getStackTrace(), ...args);\n    }\n\n    error(...args) {\n        logger.error(Logger.getStackTrace(), ...args);\n    }\n\n    fatal(...args) {\n        logger.fatal(Logger.getStackTrace(), ...args);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/CreateContentDto.html":{"url":"classes/CreateContentDto.html","title":"class - CreateContentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  CreateContentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/dtos/content.dto.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                author\n                            \n                            \n                                    Readonly\n                                publish_at\n                            \n                            \n                                    Readonly\n                                sort\n                            \n                            \n                                    Readonly\n                                summary\n                            \n                            \n                                    Readonly\n                                text\n                            \n                            \n                                    Readonly\n                                thumbnail\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                views\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            publish_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@IsNotEmpty({message: '发布时间不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            summary\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            thumbnail\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@IsNotEmpty({message: '标题不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateContentDto {\n\t@ApiModelProperty()\n\t@IsNotEmpty({\n\t\tmessage: '标题不能为空'\n\t})\n\treadonly title: string;\n\n\t@ApiModelProperty() readonly author: string;\n\n\t@ApiModelProperty() readonly sort: number;\n\n\t@ApiModelProperty() readonly thumbnail: string;\n\n\t@ApiModelProperty() readonly summary: string;\n\n\t@ApiModelProperty() readonly text: string;\n\n\t@ApiModelProperty() readonly views: number;\n\n\t@ApiModelProperty()\n\t@IsNotEmpty({\n\t\tmessage: '发布时间不能为空'\n\t})\n\treadonly publish_at: string;\n}\n\nexport class CreateContentDto {\n\t@ApiModelProperty()\n\t@IsNotEmpty({\n\t\tmessage: '标题不能为空'\n\t})\n\treadonly title: string;\n\n\t@ApiModelProperty() readonly author: string;\n\n\t@ApiModelProperty() readonly sort: number;\n\n\t@ApiModelProperty() readonly thumbnail: string;\n\n\t@ApiModelProperty() readonly summary: string;\n\n\t@ApiModelProperty() readonly text: string;\n\n\t@ApiModelProperty() readonly views: number;\n\n\t@ApiModelProperty()\n\t@IsNotEmpty({\n\t\tmessage: '发布时间不能为空'\n\t})\n\treadonly publish_at: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/ExcelHelper.html":{"url":"classes/ExcelHelper.html","title":"class - ExcelHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  ExcelHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/lib/excel.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                export\n                            \n                            \n                                    Static\n                                    Async\n                                load\n                            \n                            \n                                    Static\n                                    Async\n                                loadFromBuffer\n                            \n                            \n                                    Static\n                                    Async\n                                loadFromFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            export\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    export(dataSource, sheetsMap, fields)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/excel.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dataSource\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    sheetsMap\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    fields\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(workbook, sheetsMap)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/excel.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    workbook\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    sheetsMap\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            loadFromBuffer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadFromBuffer(buffer, sheetsMap)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/excel.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    buffer\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    sheetsMap\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            loadFromFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadFromFile(filePath, sheetsMap)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/excel.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    filePath\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    sheetsMap\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport * as Excel from 'exceljs';\n\nexport enum ExcelHandleType {\n\tKV,\n\tARRAY\n}\n\nexport class ExcelHelper {\n\tstatic async loadFromFile(filePath, sheetsMap) {\n\t\tconst workbook = new Excel.Workbook();\n\t\tawait workbook.xlsx.readFile(filePath);\n\n\t\treturn await ExcelHelper.load(workbook, sheetsMap);\n\t}\n\n\tstatic async loadFromBuffer(buffer, sheetsMap) {\n\t\tconst workbook = new Excel.Workbook();\n\t\tawait workbook.xlsx.load(buffer);\n\n\t\treturn await ExcelHelper.load(workbook, sheetsMap);\n\t}\n\n\tstatic async load(workbook, sheetsMap) {\n\t\tconst info = {};\n\n\t\tworkbook.eachSheet((worksheet) => {\n\t\t\tconst sheetMap = sheetsMap[worksheet.name];\n\t\t\tif (!sheetMap) {\n\t\t\t\tconsole.error(`${worksheet.name} 工作表映射加载失败！`)\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet item = null;\n\n\t\t\tswitch (sheetMap.handleType) {\n\t\t\t\tcase ExcelHandleType.KV:\n\t\t\t\t\tconst rowsMap = sheetMap.rowsMap;\n\t\t\t\t\tif (!rowsMap) throw new Error(`${worksheet.name} 行映射加载失败！`);\n\n\t\t\t\t\titem = {};\n\t\t\t\t\tworksheet.eachRow((row, rowNumber) => {\n\t\t\t\t\t\tconst cellKey = row.getCell(1);\n\t\t\t\t\t\tif (!cellKey) return false;\n\n\t\t\t\t\t\tconst mapKey = rowsMap[cellKey.value.toString()];\n\t\t\t\t\t\tif (!mapKey) throw new Error(`${worksheet.name} [row:${rowNumber}] 列映射加载失败！`);\n\n\t\t\t\t\t\titem[mapKey] = row.getCell(2).value;\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase ExcelHandleType.ARRAY:\n\t\t\t\t\tconst cellsMap = sheetMap.cellsMap;\n\t\t\t\t\tif (!cellsMap) throw new Error(`${worksheet.name} 表头映射加载失败！`);\n\n\t\t\t\t\tconst titleArr = [];\n\n\t\t\t\t\titem = [];\n\t\t\t\t\tworksheet.getRow(1).eachCell((cell, cellNumber) => {\n\t\t\t\t\t\tconst mapKey = cellsMap[cell.value.toString()];\n\t\t\t\t\t\tif (!mapKey) throw new Error(`${worksheet.name} 表头列映射加载失败！`);\n\n\t\t\t\t\t\ttitleArr[cellNumber] = mapKey;\n\t\t\t\t\t});\n\n\t\t\t\t\tworksheet.eachRow((row, rowNumber) => {\n\t\t\t\t\t\tif (rowNumber  {\n\n\t\t\t\t\t\t\tconst obj = titleArr[cellNumber].split('.');\n\n\t\t\t\t\t\t\tif (_.isArray(obj) && obj.length >= 2) {\n\t\t\t\t\t\t\t\tif (!cellObj[obj[0]]) {\n\t\t\t\t\t\t\t\t\tcellObj[obj[0]] = {};\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcellObj[obj[0]][obj[1]] = cell.value;\n\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcellObj[titleArr[cellNumber]] = cell.value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\titem.push(cellObj);\n\n\t\t\t\t\t});\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tinfo[sheetMap.map || worksheet.name] = item;\n\n\t\t});\n\n\t\treturn info;\n\t}\n\n\tstatic async export(dataSource, sheetsMap, fields) {\n\t\tconst workbook = new Excel.Workbook();\n\t\tconst sheet = workbook.addWorksheet(sheetsMap.map);\n\t\tconst rowsMap = sheetsMap.rowsMap;\n\n\t\tconst columns = fields.map(item => {\n\t\t\tif (!!rowsMap[item]) {\n\t\t\t\trowsMap[item].key = rowsMap[item].key ? rowsMap[item].key : item;\n\t\t\t\treturn rowsMap[item];\n\t\t\t}\n\t\t}).filter(item => !!item);\n\n\t\tconst rows = dataSource.map(item => {\n\t\t\tconst row = {};\n\n\t\t\tObject.keys(rowsMap).forEach(key => {\n\n\t\t\t\tif (fields.includes(key)) {\n\t\t\t\t\tconst handler = rowsMap[key].handler || (val => val);\n\t\t\t\t\tconst headerKey = rowsMap[key].key || key;\n\n\t\t\t\t\tconst obj = key.split('.');\n\n\t\t\t\t\tif (_.isArray(obj) && obj.length >= 2) {\n\t\t\t\t\t\trow[key] = handler(item[obj[0]]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trow[headerKey] = handler(item[headerKey]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn row;\n\t\t});\n\n\t\tsheet.columns = columns;\n\t\tsheet.addRows(rows);\n\n\t\treturn await workbook.xlsx.writeBuffer();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/ExceptionsFilter.html":{"url":"classes/ExceptionsFilter.html","title":"class - ExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  ExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/aspects/exceptions.filter.ts\n        \n\n\n\n            \n                实现\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    catch(exception: unknown, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/aspects/exceptions.filter.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as Youch from 'youch';\nimport * as moment from 'moment';\nimport { Catch, ArgumentsHost, HttpException, ExceptionFilter, HttpStatus } from '@nestjs/common';\nimport { Logger } from '../lib/logger'\n\n@Catch()\nexport class ExceptionsFilter implements ExceptionFilter {\n\tasync catch(exception: unknown, host: ArgumentsHost) {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\tconst request = ctx.getRequest();\n\n\t\tLogger.error('exception', exception);\n\t\tLogger.error(request.headers.xhr);\n\n\t\tconst timestamp = moment().format('YYYY-MM-DD HH:mm:ss');\n\n\t\tif (exception instanceof HttpException) {\n\t\t\tconst status = exception.getStatus();\n\t\t\tLogger.error(`Catch http exception at ${request.raw.method} ${request.raw.url} ${status}`);\n\n\t\t\tresponse.code(status).header('Content-Type', 'application/json; charset=utf-8').send({\n\t\t\t\t...exception,\n\t\t\t\ttimestamp,\n\t\t\t\tpath: request.url\n\t\t\t});\n\t\t} else {\n\t\t\tif (process.env.NODE_ENV !== 'production' && !request.headers.xhr) {\n\t\t\t\tconst youch = new Youch(exception, request.raw);\n\n\t\t\t\tconst html = await youch\n\t\t\t\t\t.addLink(({ message }) => {\n\t\t\t\t\t\tconst url = `https://cn.bing.com/search?q=${encodeURIComponent(`[adonis.js] ${message}`)}`;\n\t\t\t\t\t\treturn `Search Bing`;\n\t\t\t\t\t})\n\t\t\t\t\t.toHTML();\n\n\t\t\t\tresponse.type('text/html');\n\t\t\t\tresponse.code(HttpStatus.INTERNAL_SERVER_ERROR).send(html);\n\n\t\t\t} else {\n\t\t\t\tresponse.code(HttpStatus.INTERNAL_SERVER_ERROR).header('Content-Type', 'application/json; charset=utf-8').send({\n\t\t\t\t\t...exception,\n\t\t\t\t\ttimestamp,\n\t\t\t\t\tpath: request.url\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/ImportService.html":{"url":"injectables/ImportService.html","title":"injectable - ImportService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  ImportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/import.service.ts\n        \n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleFile\n                            \n                            \n                                    Async\n                                importContents\n                            \n                            \n                                    Async\n                                importOrganizations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(connection: Connection, categoryService: CategoryService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/import.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                        Connection\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handleFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFile(file, target)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/import.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    file\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    target\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            importContents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    importContents(file)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/import.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    file\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            importOrganizations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    importOrganizations(file)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/import.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    file\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ExcelHelper } from '../lib/excel';\nimport { Content } from '../entities/content.entity';\nimport { Organization } from '../entities/organization.entity';\nimport { CategoryService } from './category.service';\nimport { InjectConnection } from '@nestjs/typeorm';\nimport { Connection } from 'typeorm';\n\n\n@Injectable()\nexport class ImportService {\n\tconstructor(\n\t\t@InjectConnection() private readonly connection: Connection,\n\t\tprivate readonly categoryService: CategoryService\n\t) { }\n\n\tasync handleFile(file, target) {\n\t\tswitch (target) {\n\t\t\tcase 'contents':\n\t\t\t\treturn await this.importContents(file);\n\t\t\tcase 'organizations':\n\t\t\t\treturn await this.importOrganizations(file);\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync importContents(file) {\n\t\tconst res = await ExcelHelper.loadFromBuffer(file.data, Content.sheetsMap);\n\n\t\tObject.keys(res).forEach(async (key) => {\n\t\t\tconst category = await this.categoryService.findOneByName(key);\n\n\t\t\tif (!category) return false;\n\n\t\t\tconst news = Content.create(res[key]) as Content[];\n\t\t\tconst list = news.map((item) => {\n\t\t\t\titem.category = category;\n\t\t\t\treturn item;\n\t\t\t});\n\n\t\t\tawait this.connection.getRepository(Content).save(list);\n\t\t});\n\n\t\treturn true;\n\t}\n\n\tasync importOrganizations(file) {\n\t\tconst res = await ExcelHelper.loadFromBuffer(file.data, Organization.sheetsMap);\n\t\tconst organizations = res['organizations'];\n\t\tconst organizationArr = [];\n\n\t\torganizations.forEach((item) => {\n\t\t\tif (!!item.parent) {\n\t\t\t\titem.parent = organizationArr.find((org) => org.id === item.parent);\n\t\t\t}\n\t\t\torganizationArr.push(Organization.create(item));\n\t\t});\n\n\t\tawait this.connection.getTreeRepository(Organization).save(organizationArr);\n\n\t\treturn true;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"controllers/IndexController.html":{"url":"controllers/IndexController.html","title":"controller - IndexController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IndexController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/ssr/controllers/index.controller.ts\n        \n\n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                announcement\n                            \n                            \n                                    Async\n                                checkSVGCode\n                            \n                            \n                                    Async\n                                concact\n                            \n                            \n                                    Async\n                                content\n                            \n                            \n                                    Async\n                                contentId\n                            \n                            \n                                    Async\n                                error\n                            \n                            \n                                    Async\n                                getSVGCode\n                            \n                            \n                                    Async\n                                image\n                            \n                            \n                                    Async\n                                index\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                message\n                            \n                            \n                                    Async\n                                saveSuggesstion\n                            \n                            \n                                    Async\n                                suggestions\n                            \n                            \n                                    Async\n                                video\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            announcement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    announcement(req, res, params, query)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('announcement')\n                \n            \n\n            \n                \n                    被定义在 server/src/ssr/controllers/index.controller.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkSVGCode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkSVGCode(req, res, body, params, query)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post('checkSVGCode')\n                \n            \n\n            \n                \n                    被定义在 server/src/ssr/controllers/index.controller.ts:260\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            concact\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    concact(req, res, params, query)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('concact')\n                \n            \n\n            \n                \n                    被定义在 server/src/ssr/controllers/index.controller.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            content\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    content(req, res, params, query)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('content/:category')\n                \n            \n\n            \n                \n                    被定义在 server/src/ssr/controllers/index.controller.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            contentId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    contentId(req, res, params, query)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('content/id/:id')\n                \n            \n\n            \n                \n                    被定义在 server/src/ssr/controllers/index.controller.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('error')\n                \n            \n\n            \n                \n                    被定义在 server/src/ssr/controllers/index.controller.ts:287\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSVGCode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSVGCode(req, res, body, params, query)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('getSVGCode')\n                \n            \n\n            \n                \n                    被定义在 server/src/ssr/controllers/index.controller.ts:254\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            image\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    image(req, res, params, query)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('image/:category')\n                \n            \n\n            \n                \n                    被定义在 server/src/ssr/controllers/index.controller.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            index\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    index(req, res, params, query)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    被定义在 server/src/ssr/controllers/index.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(req, res, params, query)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('list/:category')\n                \n            \n\n            \n                \n                    被定义在 server/src/ssr/controllers/index.controller.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            message\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    message(req, res, params, query)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('message')\n                \n            \n\n            \n                \n                    被定义在 server/src/ssr/controllers/index.controller.ts:233\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            saveSuggesstion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveSuggesstion(req, res, body, params, query)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post('saveSuggesstion')\n                \n            \n\n            \n                \n                    被定义在 server/src/ssr/controllers/index.controller.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            suggestions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    suggestions(req, res, params, query)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('suggestions')\n                \n            \n\n            \n                \n                    被定义在 server/src/ssr/controllers/index.controller.ts:245\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            video\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    video(req, res, params, query)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('video/:category')\n                \n            \n\n            \n                \n                    被定义在 server/src/ssr/controllers/index.controller.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { RedisService } from 'nestjs-redis';\nimport { Redis } from 'ioredis';\nimport * as _ from 'lodash';\nimport { Controller, Req, Res, Param, Query, Get, Post, Body, Session } from '@nestjs/common';\nimport { CommonService } from '../../common/services/common.service';\nimport { ContentService } from '../../common/services/content.service';\n\nconst toGetMenuIndex = (menus, asPath) => {\n\tlet path = asPath.split('?').shift().split('/').pop();\n\tlet index = 0;\n\tlet order = 0;\n\tmenus.forEach((menu, i) => {\n\t\tif (menu.children && menu.children.length > 0) {\n\t\t\tmenu.children.forEach((item, j) => {\n\t\t\t\tif (path === item.url.split('/').pop()) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\torder = j;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t});\n\treturn {\n\t\tmenu_show: menus[index],\n\t\torder\n\t};\n}\n\n@Controller()\nexport class IndexController {\n\n\tredisClient: Redis;\n\n\tconstructor(\n\t\tprivate readonly commonService: CommonService,\n\t\tprivate readonly contentService: ContentService,\n\t\tprivate readonly redisService: RedisService\n\t) {\n\t\tthis.redisClient = this.redisService.getClient();\n\t}\n\n\t@Get()\n\tasync index(@Req() req, @Res() res, @Param() params, @Query() query) {\n\t\tconst siteInfo = await this.commonService.getSiteInfo();\n\n\t\tconst activity_list = await this.contentService.query({\n\t\t\tcategory: '精彩活动',\n\t\t\tpageSize: 5\n\t\t});\n\n\t\tconst news_list = await this.contentService.query({\n\t\t\tcategory: '新闻动态',\n\t\t\tpageSize: 5\n\t\t});\n\n\t\tconst notice_list = await this.contentService.query({\n\t\t\tcategory: '官方公告',\n\t\t\tpageSize: 3\n\t\t});\n\n\t\tconst scenic_list = await this.contentService.query({\n\t\t\tcategory: '景点一览',\n\t\t\tpageSize: 4\n\t\t});\n\n\t\tconst characteristic_list = await this.contentService.query({\n\t\t\tcategory: '工艺特色',\n\t\t\tpageSize: 10\n\t\t});\n\n\t\tconst video_list = await this.contentService.query({\n\t\t\tcategory: '视频赏析',\n\t\t\tpageSize: 1\n\t\t});\n\n\t\treturn res.render('/', {\n\t\t\tsiteInfo,\n\t\t\tnews_list,\n\t\t\tactivity_list,\n\t\t\tnotice_list,\n\t\t\tscenic_list,\n\t\t\tcharacteristic_list,\n\t\t\tvideo_list\n\t\t});\n\t}\n\n\t@Get('content/id/:id')\n\tasync contentId(@Req() req, @Res() res, @Param() params, @Query() query) {\n\t\tconst { id } = params;\n\t\tconst siteInfo = await this.commonService.getSiteInfo();\n\t\tconst { content, parents } = await this.contentService.findOneAndParents(id);\n\n\t\treturn res.render('/intro', {\n\t\t\ttype: 'content',\n\t\t\tsiteInfo,\n\t\t\tcontent,\n\t\t\tparents\n\t\t});\n\t}\n\n\t@Get('content/:category')\n\tasync content(@Req() req, @Res() res, @Param() params, @Query() query) {\n\t\t// /content/introduction\n\t\t// /content/geo_profile\n\t\t// /content/culture\n\t\t// /content/development\n\t\t// /content/instructions\n\n\t\tconst { url } = req.raw;\n\t\tconst siteInfo = await this.commonService.getSiteInfo();\n\t\tconst { menu_show, order } = toGetMenuIndex(siteInfo.menus, url);\n\t\tconst result = await this.contentService.query({ category: menu_show.children[order].name, page: 0, pageSize: 1 });\n\n\t\treturn res.render('/intro', {\n\t\t\ttype: 'content',\n\t\t\tsiteInfo,\n\t\t\tcontent: result[0] ? result[0][0] : {}\n\t\t});\n\t}\n\n\t@Get('list/:category')\n\tasync list(@Req() req, @Res() res, @Param() params, @Query() query) {\n\t\t// /list/scenery\n\t\t// /list/activities\n\t\t// /list/news\n\n\t\tconst { page } = query;\n\t\tconst { url } = req.raw;\n\t\tconst siteInfo = await this.commonService.getSiteInfo();\n\t\tconst { menu_show, order } = toGetMenuIndex(siteInfo.menus, url);\n\t\tconst result = await this.contentService.query({ category: menu_show.children[order].name, page: page ? Number(page) : 0 });\n\n\t\treturn res.render('/intro', {\n\t\t\ttype: 'list',\n\t\t\tsiteInfo,\n\t\t\tlist: result\n\t\t});\n\t}\n\n\t@Get('image/:category')\n\tasync image(@Req() req, @Res() res, @Param() params, @Query() query) {\n\t\t// /image/specialty\n\t\t// /image/crafts\n\t\t// /image/guide\n\t\t// /image/photo\n\t\t// /image/delicious\n\t\t// /image/hotel\n\t\t// /image/shopping\n\t\t// /image/entertainment\n\t\t// /image/trips\n\t\t// /image/travels\n\n\t\tconst { id } = query;\n\t\tconst { page } = query;\n\t\tconst { url } = req.raw;\n\t\tconst siteInfo = await this.commonService.getSiteInfo();\n\n\t\tif (id) {\n\t\t\tconst { content, parents } = await this.contentService.findOneAndParents(id);\n\n\t\t\treturn res.render('/intro', {\n\t\t\t\ttype: 'imageDetail',\n\t\t\t\tsiteInfo,\n\t\t\t\tcontent,\n\t\t\t\tparents\n\t\t\t});\n\t\t} else {\n\t\t\tconst { menu_show, order } = toGetMenuIndex(siteInfo.menus, url);\n\t\t\tconst result = await this.contentService.query({ category: menu_show.children[order].name, page: page ? Number(page) : 0, pageSize: 12 });\n\t\t\t\n\t\t\treturn res.render('/intro', {\n\t\t\t\ttype: 'image',\n\t\t\t\tsiteInfo,\n\t\t\t\tlist: result\n\t\t\t});\n\t\t}\n\t}\n\n\t@Get('video/:category')\n\tasync video(@Req() req, @Res() res, @Param() params, @Query() query) {\n\t\t// /video/characteristic\n\t\t// /video/show\n\n\t\tconst { id } = query;\n\t\tconst { page } = query;\n\t\tconst { url } = req.raw;\n\t\tconst siteInfo = await this.commonService.getSiteInfo();\n\n\t\tif (id) {\n\t\t\tconst { content, parents } = await this.contentService.findOneAndParents(id);\n\n\t\t\treturn res.render('/intro', {\n\t\t\t\ttype: 'videoDetail',\n\t\t\t\tsiteInfo,\n\t\t\t\tcontent,\n\t\t\t\tparents\n\t\t\t});\n\t\t} else {\n\t\t\tconst { menu_show, order } = toGetMenuIndex(siteInfo.menus, url);\n\t\t\tconst result = await this.contentService.query({ category: menu_show.children[order].name, page: page ? Number(page) : 0, pageSize: 12 });\n\n\t\t\treturn res.render('/intro', {\n\t\t\t\ttype: 'video',\n\t\t\t\tsiteInfo,\n\t\t\t\tlist: result\n\t\t\t});\n\t\t}\n\t}\n\n\t@Get('announcement')\n\tasync announcement(@Req() req, @Res() res, @Param() params, @Query() query) {\n\t\tconst { page } = query;\n\t\tconst siteInfo = await this.commonService.getSiteInfo();\n\t\tconst result = await this.contentService.query({ category: '官方公告', page: page ? Number(page) : 0, pageSize: 20 });\n\n\t\treturn res.render('/announcement', {\n\t\t\tsiteInfo,\n\t\t\tlist: result\n\t\t});\n\t}\n\n\t@Get('concact')\n\tasync concact(@Req() req, @Res() res, @Param() params, @Query() query) {\n\t\tconst siteInfo = await this.commonService.getSiteInfo();\n\t\tconst result = await this.contentService.query({ category: '联系方式', pageSize: 1000 });\n\n\t\treturn res.render('/concact', {\n\t\t\tsiteInfo,\n\t\t\tlist: result\n\t\t});\n\t}\n\n\t@Get('message')\n\tasync message(@Req() req, @Res() res, @Param() params, @Query() query) {\n\t\tconst { page } = query;\n\t\tconst siteInfo = await this.commonService.getSiteInfo();\n\t\tconst result = await this.contentService.query({ category: '留言咨询', page: page ? Number(page) : 0, pageSize: 10 });\n\n\t\treturn res.render('/message', {\n\t\t\tsiteInfo,\n\t\t\tlist: result\n\t\t});\n\t}\n\n\t@Get('suggestions')\n\tasync suggestions(@Req() req, @Res() res, @Param() params, @Query() query) {\n\t\tconst siteInfo = await this.commonService.getSiteInfo();\n\n\t\treturn res.render('/suggestions', {\n\t\t\tsiteInfo\n\t\t});\n\t}\n\n\t@Get('getSVGCode')\n\tasync getSVGCode(@Req() req, @Res() res, @Body() body, @Param() params, @Query() query) {\n\t\tconst svg_obj = await this.commonService.getSVGCode();\n\t\treturn res.send(svg_obj);\n\t}\n\n\t@Post('checkSVGCode')\n\tasync checkSVGCode(@Req() req, @Res() res, @Body() body, @Param() params, @Query() query) {\n\t\tconst { svg_hash, svg_text } = body;\n\t\tconst result = await this.commonService.checkSVGCode(svg_hash, svg_text);\n\t\t\n\t\treturn res.send({\n\t\t\tresult\n\t\t});\n\t}\n\n\t@Post('saveSuggesstion')\n\tasync saveSuggesstion(@Req() req, @Res() res, @Body() body, @Param() params, @Query() query) {\n\t\tbody.question = body.title;\n\t\tdelete body.title;\n\t\tconst result = await this.contentService.save({\n\t\t\tcategory: '留言咨询',\n\t\t\tex_info: body\n\t\t});\n\t\tif (result) {\n\t\t\tres.send({ result: true });\n\t\t} else {\n\t\t\tres.send({ result: false });\n\t\t}\n\t\t\n\t}\n\n\n\t@Get('error')\n\tasync error() {\n\t\tthrow new Error('服务器错误');\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/strategys/jwt.strategy.ts\n        \n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/strategys/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: User)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/strategys/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                User\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { config } from '../../config';\nimport { User } from '../entities/user.entity';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor(private readonly userService: UserService) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tsecretOrKey: config.jwt.secretOrPrivateKey\n\t\t});\n\t}\n\n\tasync validate(payload: User) {\n\t\tconst user = await this.userService.findOneById(payload.id);\n\t\tif (!user) {\n\t\t\tthrow new UnauthorizedException('身份验证失败');\n\t\t}\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/lib/logger.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                debug\n                            \n                            \n                                debug\n                            \n                            \n                                    Static\n                                error\n                            \n                            \n                                error\n                            \n                            \n                                    Static\n                                fatal\n                            \n                            \n                                fatal\n                            \n                            \n                                    Static\n                                getStackTrace\n                            \n                            \n                                    Static\n                                info\n                            \n                            \n                                info\n                            \n                            \n                                    Static\n                                log\n                            \n                            \n                                log\n                            \n                            \n                                    Static\n                                trace\n                            \n                            \n                                trace\n                            \n                            \n                                    Static\n                                warn\n                            \n                            \n                                warn\n                            \n                            \n                                    Static\n                                warning\n                            \n                            \n                                warning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    debug(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fatal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fatal(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fatal\n                        \n                        \n                    \n                \n            \n            \n                \nfatal(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getStackTrace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStackTrace(deep: number)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                    缺省值\n                                \n                            \n                            \n                                \n                                    deep\n                                    \n                                                number\n                                    \n\n                                    \n                                        否\n                                    \n\n                                    \n                                        2\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         ContextTrace\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            info\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    info(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            trace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trace(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trace\n                        \n                        \n                    \n                \n            \n            \n                \ntrace(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            warning\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    warning(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warning\n                        \n                        \n                    \n                \n            \n            \n                \nwarning(...args: any[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/lib/logger.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport * as Path from 'path';\nimport * as Log4js from 'log4js';\nimport * as Util from 'util';\nimport * as Moment from 'moment';\nimport * as StackTrace from 'stacktrace-js';\nimport Chalk from 'chalk';\n\nexport enum LoggerLevel {\n    ALL = 'ALL',\n    MARK = 'MARK',\n    TRACE = 'TRACE',\n    DEBUG = 'DEBUG',\n    INFO = 'INFO',\n    WARN = 'WARN',\n    ERROR = 'ERROR',\n    FATAL = 'FATAL',\n    OFF = 'OFF'\n}\n\nexport class ContextTrace {\n    constructor(\n        public readonly context: string,\n        public readonly path?: string,\n        public readonly lineNumber?: number,\n        public readonly columnNumber?: number\n    ) {}\n}\n\nLog4js.addLayout('Nestify', (logConfig: any) => {\n    return (logEvent: Log4js.LoggingEvent): string => {\n        let moduleName: string = '';\n        let position: string = '';\n\n        const messageList: string[] = [];\n        logEvent.data.forEach((value: any) => {\n            if (value instanceof ContextTrace) {\n                moduleName = value.context;\n                if (value.lineNumber && value.columnNumber) {\n                    position = `${value.lineNumber}, ${value.columnNumber}`;\n                }\n                return;\n            }\n\n            if (typeof value !== 'string') {\n                value = Util.inspect(value, false, 3, true);\n            }\n\n            messageList.push(value);\n        });\n\n        const messageOutput: string = messageList.join(' ');\n        const positionOutput: string = position ? ` [${position}]` : '';\n        const typeOutput: string = `[${logConfig.type}] ${logEvent.pid.toString()}   - `;\n        const dateOutput: string = `${Moment(logEvent.startTime).format('YYYY-MM-DD HH:mm:ss')}`;\n        const moduleOutput: string = moduleName ? `[${moduleName}] ` : '[LoggerService] ';\n        let levelOutput: string = `[${logEvent.level}] ${messageOutput}`;\n\n        switch (logEvent.level.toString()) {\n            case LoggerLevel.DEBUG:\n                levelOutput = Chalk.green(levelOutput);\n                break;\n            case LoggerLevel.INFO:\n                levelOutput = Chalk.cyan(levelOutput);\n                break;\n            case LoggerLevel.WARN:\n                levelOutput = Chalk.yellow(levelOutput);\n                break;\n            case LoggerLevel.ERROR:\n                levelOutput = Chalk.red(levelOutput);\n                break;\n            case LoggerLevel.FATAL:\n                levelOutput = Chalk.hex('#DD4C35')(levelOutput);\n                break;\n            default:\n                levelOutput = Chalk.grey(levelOutput);\n                break;\n        }\n\n        return `${Chalk.green(typeOutput)}${dateOutput}    ${Chalk.yellow(\n            moduleOutput\n        )}${levelOutput}${positionOutput}`;\n    };\n});\n\nLog4js.configure({\n    appenders: {\n        console: {\n            type: 'stdout',\n            layout: { type: 'Nestify' }\n        }\n    },\n    categories: {\n        default: {\n            appenders: ['console'],\n            level: 'debug'\n        }\n    }\n});\n\nconst logger = Log4js.getLogger();\nlogger.level = 'debug';\n\nexport class Logger {\n    static trace(...args) {\n        logger.trace(Logger.getStackTrace(), ...args);\n    }\n\n    static debug(...args) {\n        logger.debug(Logger.getStackTrace(), ...args);\n    }\n\n    static log(...args) {\n        logger.info(Logger.getStackTrace(), ...args);\n    }\n\n    static info(...args) {\n        logger.info(Logger.getStackTrace(), ...args);\n    }\n\n    static warn(...args) {\n        logger.warn(Logger.getStackTrace(), ...args);\n    }\n\n    static warning(...args) {\n        logger.warn(Logger.getStackTrace(), ...args);\n    }\n\n    static error(...args) {\n        logger.error(Logger.getStackTrace(), ...args);\n    }\n\n    static fatal(...args) {\n        logger.fatal(Logger.getStackTrace(), ...args);\n    }\n\n    static getStackTrace(deep: number = 2): ContextTrace {\n        const stackList: StackTrace.StackFrame[] = StackTrace.getSync();\n        const stackInfo: StackTrace.StackFrame = stackList[deep];\n\n        const lineNumber: number = stackInfo.lineNumber;\n        const columnNumber: number = stackInfo.columnNumber;\n        const fileName: string = stackInfo.fileName;\n\n        const extnameLength: number = Path.extname(fileName).length;\n        let basename: string = Path.basename(fileName);\n        basename = basename.substr(0, basename.length - extnameLength);\n        const context: string = _.upperFirst(_.camelCase(basename));\n\n        return new ContextTrace(context, fileName, lineNumber, columnNumber);\n    }\n\n    trace(...args) {\n        logger.trace(Logger.getStackTrace(), ...args);\n    }\n\n    debug(...args) {\n        logger.debug(Logger.getStackTrace(), ...args);\n    }\n\n    log(...args) {\n        logger.info(Logger.getStackTrace(), ...args);\n    }\n\n    info(...args) {\n        logger.info(Logger.getStackTrace(), ...args);\n    }\n\n    warn(...args) {\n        logger.warn(Logger.getStackTrace(), ...args);\n    }\n\n    warning(...args) {\n        logger.warn(Logger.getStackTrace(), ...args);\n    }\n\n    error(...args) {\n        logger.error(Logger.getStackTrace(), ...args);\n    }\n\n    fatal(...args) {\n        logger.fatal(Logger.getStackTrace(), ...args);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/LoginController.html":{"url":"classes/LoginController.html","title":"class - LoginController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  LoginController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/login.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/login.controller.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(dto: LoginDto)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/login.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Post, UsePipes, ValidationPipe, Body } from '@nestjs/common';\nimport { ApiUseTags } from '@nestjs/swagger';\nimport { Api } from '../../common/aspects/decorator';\nimport { LoginDto } from '../../common/dtos/login.dto';\nimport { UserService } from '../../common/services/user.service';\n\n@Api('login')\n@ApiUseTags('login')\nexport class LoginController {\n\tconstructor(private readonly userService: UserService) { }\n\n\t@Post()\n\t@UsePipes(new ValidationPipe())\n\tasync login(@Body() dto: LoginDto) {\n\t\treturn await this.userService.login(dto.account, dto.password);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/dtos/login.dto.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                account\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@IsNotEmpty({message: '帐号不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/login.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@MinLength(8, {message: '密码不能少于8位'})@MaxLength(12, {message: '密码不能大于12位'})@IsNotEmpty({message: '密码不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/login.dto.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMobilePhone, MinLength, MaxLength, IsNotEmpty } from 'class-validator';\nimport { ApiModelProperty } from '@nestjs/swagger';\n\nexport class LoginDto {\n\t@ApiModelProperty()\n\t// @IsMobilePhone('zh-CN', {\n\t// \tmessage: '手机号无效'\n\t// })\n\t@IsNotEmpty({\n\t\tmessage: '帐号不能为空'\n\t})\n\treadonly account: string;\n\n\t@ApiModelProperty()\n\t@MinLength(8, {\n\t\tmessage: '密码不能少于8位'\n\t})\n\t@MaxLength(12, {\n\t\tmessage: '密码不能大于12位'\n\t})\n\t@IsNotEmpty({\n\t\tmessage: '密码不能为空'\n\t})\n\treadonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Organization.html":{"url":"classes/Organization.html","title":"class - Organization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/organization.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                desc\n                            \n                            \n                                ex_info\n                            \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                            \n                                    Static\n                                    Readonly\n                                sheetsMap\n                            \n                            \n                                sort\n                            \n                            \n                                users\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    title\n                                \n                                \n                                    key\n                                \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Organization[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @TreeChildren()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/organization.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desc\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '描述', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/organization.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/organization.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '名称'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/organization.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Organization\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @TreeParent()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/organization.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            sheetsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n        组织架构: {\n            map: 'organizations',\n            handleType: ExcelHandleType.ARRAY,\n            cellsMap: { ID: 'id', 名称: 'name', 描述: 'desc', 排序: 'sort', PID: 'parent' }\n        }\n    }\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/organization.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '排序', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/organization.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         User[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/organization.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: Object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/organization.entity.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                Object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(path: string)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/organization.entity.ts:32\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n\n                \n                    \n                        getkey()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/organization.entity.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/organization.entity.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { plainToClass, Expose } from 'class-transformer';\nimport { Base } from './base';\nimport { Entity, Column, Tree, TreeChildren, TreeParent, OneToMany } from 'typeorm';\nimport { ExcelHandleType } from '../lib/excel';\nimport { User } from './user.entity';\n\n@Entity()\n@Tree('materialized-path')\nexport class Organization extends Base {\n    @Column({\n        comment: '名称'\n    })\n    name: string;\n\n    @Column({ comment: '描述', default: '' })\n    desc: string;\n\n    @Column({ comment: '排序', default: 0 })\n    sort: number;\n\n    @Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n    ex_info: any;\n\n    @TreeChildren() children: Organization[];\n\n    @TreeParent() parent: Organization;\n\n    @OneToMany((type) => User, (user) => user.org)\n    users: User[];\n\n    @Expose()\n    get title(): string {\n        return this.name;\n    }\n\n    @Expose()\n    get key(): string {\n        return this.id;\n    }\n\n    @Expose()\n    get value(): string {\n        return this.id;\n    }\n\n    static readonly sheetsMap: object = {\n        组织架构: {\n            map: 'organizations',\n            handleType: ExcelHandleType.ARRAY,\n            cellsMap: { ID: 'id', 名称: 'name', 描述: 'desc', 排序: 'sort', PID: 'parent' }\n        }\n    };\n\n    static create(target: Object) {\n        return plainToClass(Organization, target);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/OrganizationController.html":{"url":"classes/OrganizationController.html","title":"class - OrganizationController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  OrganizationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/organization.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                parent\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/organization.controller.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/organization.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/organization.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('list')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/organization.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            parent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parent(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put('parent')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/organization.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/organization.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/organization.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport {\n\tUseGuards,\n\tGet,\n\tQuery,\n\tDelete,\n\tParam,\n\tBadRequestException,\n\tPost,\n\tPut,\n\tBody,\n\tUseInterceptors\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ClassSerializerInterceptor } from '@nestjs/common';\nimport { Api } from '../../common/aspects/decorator';\nimport { OrganizationService } from '../../common/services/organization.service';\n\n@Api('organization')\n@ApiUseTags('organization')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\n@UseInterceptors(ClassSerializerInterceptor)\nexport class OrganizationController {\n\tconstructor(private readonly organizationService: OrganizationService) { }\n\n\t@Get(':id')\n\tasync findOne(@Param('id') id) {\n\t\tif (!id) throw new BadRequestException('参数 id 错误');\n\n\t\treturn await this.organizationService.findOneById(id);\n\t}\n\n\t@Get('list')\n\tasync list(@Query() payload) {\n\t\treturn await this.organizationService.query(payload);\n\t}\n\n\t@Post()\n\tasync create(@Body() dto: any) {\n\t\treturn await this.organizationService.save(dto);\n\t}\n\n\t@Put()\n\tasync update(@Body() dto: any) {\n\t\treturn await this.organizationService.save(dto);\n\t}\n\n\t@Put('parent')\n\tasync parent(@Body() dto: any) {\n\t\treturn await this.organizationService.parent(dto);\n\t}\n\n\t@Delete()\n\tasync remove(@Query() payload) {\n\t\treturn await this.organizationService.remove(payload.selectedRows.split(','));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/organization.service.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseService\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneByName\n                            \n                            \n                                    Async\n                                parent\n                            \n                            \n                                    Async\n                                query\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(organizationRepository: TreeRepository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/organization.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        organizationRepository\n                                                  \n                                                        \n                                                                        TreeRepository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByName(name: string)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/organization.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            parent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parent(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/organization.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/organization.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/organization.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/organization.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { Injectable, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TreeRepository } from 'typeorm';\nimport { BaseService } from './base.service';\nimport { Organization } from '../entities/organization.entity';\n\n@Injectable()\nexport class OrganizationService extends BaseService {\n\tconstructor(@InjectRepository(Organization) private readonly organizationRepository: TreeRepository) {\n\t\tsuper(organizationRepository);\n\t}\n\n\tasync query(payload: any) {\n\n\t\treturn await this.organizationRepository.findTrees();\n\t}\n\n\tasync findOneByName(name: string) {\n\t\treturn await this.organizationRepository.findOne({ name });\n\t}\n\n\tasync save(payload: any) {\n\t\tconst organization = Organization.create(payload) as Organization;\n\n\t\tif (!!payload.parentId) {\n\t\t\torganization.parent = await this.organizationRepository.findOne(payload.parentId);\n\t\t}\n\n\t\treturn await this.organizationRepository.save(organization);\n\t}\n\n\tasync parent(payload: any) {\n\t\tconst target = await this.organizationRepository.findOne(payload.id);\n\t\ttarget.parent = await this.organizationRepository.findOne(payload.parentId);\n\n\t\treturn await this.organizationRepository.save(target);\n\t}\n\n\tasync remove(ids: string[]) {\n\n\t\tconst roots = await this.organizationRepository.findRoots();\n\n\t\troots.forEach(root => {\n\t\t\tif (ids.includes(root.id)) throw new BadRequestException('不能删除根节点');\n\t\t});\n\n\t\treturn await this.organizationRepository.delete(ids);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/PasswordDto.html":{"url":"classes/PasswordDto.html","title":"class - PasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  PasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/dtos/password.dto.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                oldPassword\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            oldPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@MinLength(8, {message: '旧密码不能少于8位'})@MaxLength(12, {message: '旧密码不能大于12位'})@IsNotEmpty({message: '旧密码不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/password.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@MinLength(8, {message: '密码不能少于8位'})@MaxLength(12, {message: '密码不能大于12位'})@IsNotEmpty({message: '密码不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/password.dto.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MinLength, MaxLength, IsNotEmpty } from 'class-validator';\nimport { ApiModelProperty } from '@nestjs/swagger';\n\nexport class PasswordDto {\n\n\t@ApiModelProperty()\n\t@MinLength(8, {\n\t\tmessage: '旧密码不能少于8位'\n\t})\n\t@MaxLength(12, {\n\t\tmessage: '旧密码不能大于12位'\n\t})\n\t@IsNotEmpty({\n\t\tmessage: '旧密码不能为空'\n\t})\n\treadonly oldPassword: string;\n\n\t@ApiModelProperty()\n\t@MinLength(8, {\n\t\tmessage: '密码不能少于8位'\n\t})\n\t@MaxLength(12, {\n\t\tmessage: '密码不能大于12位'\n\t})\n\t@IsNotEmpty({\n\t\tmessage: '密码不能为空'\n\t})\n\treadonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/role.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                authoritys\n                            \n                            \n                                desc\n                            \n                            \n                                ex_info\n                            \n                            \n                                name\n                            \n                            \n                                    Static\n                                    Readonly\n                                sheetsMap\n                            \n                            \n                                sort\n                            \n                            \n                                token\n                            \n                            \n                                users\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isSuperAdmin\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authoritys\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Authority[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ManyToMany(undefined, undefined)@JoinTable()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/role.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desc\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '描述', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/role.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/role.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '名称', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/role.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            sheetsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n        角色: {\n            map: 'roles',\n            handleType: ExcelHandleType.ARRAY,\n            cellsMap: { ID: 'id', 名称: 'name', 标识: 'token', 描述: 'desc', 排序: 'sort' }\n        }\n    }\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/role.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '排序', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/role.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '标识', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/role.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         User[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ManyToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/role.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: Object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/role.entity.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                Object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(path: string)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        isSuperAdmin\n                    \n                \n\n                \n                    \n                        getisSuperAdmin()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/role.entity.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { plainToClass, Expose } from 'class-transformer';\nimport { Base } from './base';\nimport { Entity, Column, ManyToMany, JoinTable } from 'typeorm';\nimport { ExcelHandleType } from '../lib/excel';\nimport { Authority } from './authority.entity';\nimport { User } from './user.entity';\n\n@Entity()\nexport class Role extends Base {\n    @Column({\n        comment: '名称',\n        unique: true\n    })\n    name: string;\n\n    @Column({\n        comment: '标识',\n        unique: true\n    })\n    token: string;\n\n    @Column({ comment: '描述', default: '' })\n    desc: string;\n\n    @Column({ comment: '排序', default: 0 })\n    sort: number;\n\n    @Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n    ex_info: any;\n\n    @ManyToMany((type) => Authority, (authority) => authority.roles)\n    @JoinTable()\n    authoritys: Authority[];\n\n    @ManyToMany((type) => User, (user) => user.roles)\n    users: User[];\n\n    static readonly sheetsMap: object = {\n        角色: {\n            map: 'roles',\n            handleType: ExcelHandleType.ARRAY,\n            cellsMap: { ID: 'id', 名称: 'name', 标识: 'token', 描述: 'desc', 排序: 'sort' }\n        }\n    };\n\n    static create(target: Object) {\n        return plainToClass(Role, target);\n    }\n\n    @Expose()\n    get isSuperAdmin(): boolean {\n        return this.token === 'superAdmin';\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/RoleController.html":{"url":"classes/RoleController.html","title":"class - RoleController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  RoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/role.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                export\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(roleService: RoleService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/role.controller.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/role.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            export\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    export(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('export')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/role.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/role.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('list')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/role.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/role.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/role.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport {\n\tUseGuards,\n\tGet,\n\tQuery,\n\tDelete,\n\tParam,\n\tBadRequestException,\n\tPost,\n\tPut,\n\tBody,\n\tUseInterceptors\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Api } from '../../common/aspects/decorator';\nimport { ClassSerializerInterceptor } from '@nestjs/common';\nimport { RoleService } from '../../common/services/role.service';\n\n@Api('role')\n@ApiUseTags('role')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\n@UseInterceptors(ClassSerializerInterceptor)\nexport class RoleController {\n\tconstructor(private readonly roleService: RoleService) { }\n\n\t@Get(':id')\n\tasync findOne(@Param('id') id) {\n\t\tif (!id) throw new BadRequestException('参数 id 错误');\n\n\t\treturn await this.roleService.findOneAndRelations(id);\n\t}\n\n\t@Get('list')\n\tasync list(@Query() payload) {\n\t\treturn await this.roleService.query(payload);\n\t}\n\n\t@Get('export')\n\tasync export(@Query() payload) {\n\t\treturn await this.roleService.query(payload);\n\t}\n\n\t@Post()\n\tasync create(@Body() dto: any) {\n\t\treturn await this.roleService.save(dto);\n\t}\n\n\t@Put()\n\tasync update(@Body() dto: any) {\n\t\treturn await this.roleService.save(dto);\n\t}\n\n\t@Delete()\n\tasync remove(@Query() payload) {\n\t\treturn await this.roleService.remove(payload.selectedRows.split(','));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/role.service.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseService\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneAndRelations\n                            \n                            \n                                    Async\n                                query\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(roleRepository: Repository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/role.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneAndRelations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAndRelations(id: string)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/role.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(payload: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/role.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/role.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { TransformClassToPlain } from 'class-transformer';\nimport { BaseService } from './base.service';\nimport { Role } from '../entities/role.entity';\n\n@Injectable()\nexport class RoleService extends BaseService {\n    constructor(@InjectRepository(Role) private readonly roleRepository: Repository) {\n        super(roleRepository);\n    }\n\n    @TransformClassToPlain()\n    async findOneAndRelations(id: string) {\n        return await this.roleRepository.findOne({ where: { id }, relations: ['authoritys'] });\n    }\n\n    @TransformClassToPlain()\n    async query(payload: any) {\n        const qb = this.roleRepository.createQueryBuilder('t');\n\n        qb.leftJoinAndSelect('t.authoritys', 'authority');\n\n        if (!!payload.keyword) {\n            qb.andWhere(`t.name LIKE '%${payload.keyword}%'`);\n        }\n\n        if (!!payload.sort && !!payload.order) {\n            qb.addOrderBy(`t.${payload.sort}`, payload.order);\n        } else {\n            // 默认排序规则\n            qb.addOrderBy('t.sort', 'DESC');\n        }\n\n        qb.skip(payload.page * payload.pageSize);\n        qb.take(payload.pageSize);\n\n        return await qb.getManyAndCount();\n    }\n\n    async save(payload: any) {\n        const role = Role.create(payload) as Role;\n\n        return await this.roleRepository.save(role);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules/SSRModule.html":{"url":"modules/SSRModule.html","title":"module - SSRModule","body":"\n                   \n\n\n\n\n    模块列表\n    SSRModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            文件\n        \n        \n            server/src/ssr/ssr.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            IndexController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IndexController } from './controllers/index.controller';\n\n@Module({\n\tcontrollers: [ IndexController ]\n})\nexport class SSRModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/SearchController.html":{"url":"classes/SearchController.html","title":"class - SearchController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  SearchController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/search.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(searchService: SearchService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/search.controller.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        searchService\n                                                  \n                                                        \n                                                                        SearchService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/search.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport { UseGuards, Post, Body } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Api } from '../../common/aspects/decorator';\nimport { SearchService } from '../../common/services/search.service';\n\n@Api('search')\n@ApiUseTags('search')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\nexport class SearchController {\n    constructor(private readonly searchService: SearchService) {}\n\n    @Post()\n    async search(@Body() payload) {\n        return await this.searchService.search(payload);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/SearchService.html":{"url":"injectables/SearchService.html","title":"injectable - SearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  SearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/search.service.ts\n        \n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/search.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { es, esb } from '../lib/elastic-search';\nimport { Content } from '../entities/content.entity';\n\n@Injectable()\nexport class SearchService {\n    async search(payload: any) {\n        const qb = new esb.RequestBodySearch();\n\n        if (!!payload.keyword) {\n            qb.query(new esb.MatchQuery(payload.field, payload.keyword));\n        }\n\n        if (!payload.page) {\n            payload.page = 1;\n        }\n\n        if (!payload.pageSize) {\n            payload.pageSize = 10;\n        }\n        qb.size(payload.pageSize).from((payload.page - 1) * payload.pageSize);\n\n        return await es.search({\n            index: payload.index || Content.esIndex.index,\n            type: payload.type || Content.esIndex.body.type,\n            body: qb.toJSON()\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/Seed.html":{"url":"injectables/Seed.html","title":"injectable - Seed","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  Seed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/seed/index.ts\n        \n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                importAuthoritys\n                            \n                            \n                                    Async\n                                importCategorys\n                            \n                            \n                                    Async\n                                importOrganizations\n                            \n                            \n                                    Async\n                                importRoles\n                            \n                            \n                                    Async\n                                initElasticSearchIndices\n                            \n                            \n                                    Async\n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n                        \n                            \n                                被定义在 server/src/seed/index.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                        Connection\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            importAuthoritys\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    importAuthoritys()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/seed/index.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            importCategorys\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    importCategorys()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/seed/index.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            importOrganizations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    importOrganizations()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/seed/index.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            importRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    importRoles()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/seed/index.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            initElasticSearchIndices\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initElasticSearchIndices()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/seed/index.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/seed/index.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { resolve } from 'path';\nimport { Injectable } from '@nestjs/common';\nimport { User } from '../common/entities/user.entity';\nimport { Category } from '../common/entities/category.entity';\nimport { Setting } from '../common/entities/setting.entity';\nimport { ExcelHelper } from '../common/lib/excel';\nimport { InjectConnection } from '@nestjs/typeorm';\nimport { Connection } from 'typeorm';\nimport { Logger } from '../common/lib/logger';\nimport { es } from '../common/lib/elastic-search';\nimport { Organization } from '../common/entities/organization.entity';\nimport { Role } from '../common/entities/role.entity';\nimport { Authority } from '../common/entities/authority.entity';\nimport { Content } from '../common/entities/content.entity';\n\n@Injectable()\nexport class Seed {\n    constructor(@InjectConnection() private readonly connection: Connection) {}\n\n    async start() {\n        Logger.log('seed start');\n\n        await this.initElasticSearchIndices();\n\n        await this.connection.getRepository(Setting).save({\n            token: 'default',\n            ex_info: await ExcelHelper.loadFromFile(\n                resolve('./seeds/settings.xlsx'),\n                Setting.sheetsMap\n            )\n        });\n\n        await this.importCategorys();\n        await this.importOrganizations();\n        await this.importAuthoritys();\n        await this.importRoles();\n\n        const roleAdmin = await this.connection\n            .getRepository(Role)\n            .findOne({ token: 'superAdmin' });\n\n        const superAdmin = User.create({\n            account: 'SysAdmin',\n            password: '12345678',\n            nickname: '超级管理员',\n            avatar: '/images/superadmin.png'\n        });\n        superAdmin.roles = [roleAdmin];\n        superAdmin.org = await this.connection\n            .getRepository(Organization)\n            .findOne({ name: '股东会' });\n\n        await this.connection.getRepository(User).save(superAdmin);\n\n        // 查询拥有超级管理员角色的用户\n        const users = await this.connection\n            .createQueryBuilder(User, 'user')\n            .leftJoinAndSelect('user.org', 'organization')\n            .leftJoinAndMapOne('user.role', 'user.roles', 'role', 'role.token = :token', {\n                token: 'superAdmin'\n            })\n            .getManyAndCount();\n\n        Logger.log(users);\n    }\n\n    async initElasticSearchIndices() {\n        if (await es.indices.exists({ index: 'uploads' })) {\n            await es.indices.delete({ index: 'uploads' });\n        }\n\n        await es.indices.create({\n            index: 'uploads',\n            body: {\n                type: 'uploads',\n                mappings: {\n                    file: {\n                        properties: {\n                            baseName: {\n                                type: 'text',\n                                analyzer: 'ik_max_word',\n                                search_analyzer: 'ik_max_word'\n                            },\n                            dirName: {\n                                type: 'text',\n                                analyzer: 'ik_max_word',\n                                search_analyzer: 'ik_max_word'\n                            },\n                            extName: {\n                                type: 'text',\n                                analyzer: 'ik_max_word',\n                                search_analyzer: 'ik_max_word'\n                            },\n                            path: {\n                                type: 'text',\n                                analyzer: 'ik_max_word',\n                                search_analyzer: 'ik_max_word'\n                            },\n                            type: {\n                                type: 'string'\n                            },\n                            // https://nodejs.org/api/fs.html#fs_stats_dev\n                            stat: {\n                                type: 'object'\n                            }\n                        }\n                    }\n                }\n            }\n        });\n\n        if (await es.indices.exists({ index: Content.esIndex.index })) {\n            await es.indices.delete({ index: Content.esIndex.index });\n        }\n\n        await es.indices.create(Content.esIndex);\n    }\n\n    async importCategorys() {\n        const categorysResult = await ExcelHelper.loadFromFile(\n            resolve('./seeds/categorys.xlsx'),\n            Category.sheetsMap\n        );\n        const categorys = categorysResult['categorys'];\n        const categoryArr = [];\n\n        categorys.forEach((item) => {\n            if (!!item.parent) {\n                item.parent = categoryArr.find((cate) => cate.id === item.parent);\n            }\n            categoryArr.push(Category.create(item));\n        });\n        await this.connection.getTreeRepository(Category).save(categoryArr);\n    }\n\n    async importOrganizations() {\n        const organizationsResult = await ExcelHelper.loadFromFile(\n            resolve('./seeds/organizations.xlsx'),\n            Organization.sheetsMap\n        );\n        const organizations = organizationsResult['organizations'];\n        const organizationArr = [];\n\n        organizations.forEach((item) => {\n            if (!!item.parent) {\n                item.parent = organizationArr.find((org) => org.id === item.parent);\n            }\n            organizationArr.push(Organization.create(item));\n        });\n        await this.connection.getTreeRepository(Organization).save(organizationArr);\n    }\n\n    async importAuthoritys() {\n        const result = await ExcelHelper.loadFromFile(\n            resolve('./seeds/authoritys.xlsx'),\n            Authority.sheetsMap\n        );\n        const athoritys = result['authoritys'];\n        const arr = [];\n\n        for (let item of athoritys) {\n            if (!!item.parent) {\n                item.parent = arr.find((auth) => auth.id === item.parent);\n            }\n            arr.push(Authority.create(item));\n        }\n\n        await this.connection.getRepository(Authority).save(arr);\n    }\n\n    async importRoles() {\n        const rolesResult = await ExcelHelper.loadFromFile(\n            resolve('./seeds/roles.xlsx'),\n            Role.sheetsMap\n        );\n        const roles = rolesResult['roles'];\n        const rolesArr = [];\n\n        for (let item of roles) {\n            rolesArr.push(Role.create(item));\n        }\n\n        await this.connection.getRepository(Role).save(rolesArr);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/Setting.html":{"url":"classes/Setting.html","title":"class - Setting","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  Setting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/setting.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                ex_info\n                            \n                            \n                                    Static\n                                    Readonly\n                                sheetsMap\n                            \n                            \n                                token\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/setting.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            sheetsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n\t\t系统设置: {\n\t\t\tmap: 'setting',\n\t\t\thandleType: ExcelHandleType.KV,\n\t\t\trowsMap: {\n\t\t\t\t介绍: 'recommendation',\n\t\t\t\t网站标题: 'title',\n\t\t\t\t技术支持: 'techSupport',\n\t\t\t\t微信二维码: 'wechat',\n\t\t\t\t微博二维码: 'weibo',\n\t\t\t\t地址: 'address',\n\t\t\t\t乘车路线: 'busLine',\n\t\t\t\t邮编: 'postcode',\n\t\t\t\t传真: 'fax',\n\t\t\t\t服务热线: 'serviceHotline',\n\t\t\t\t售票热线: 'bookingHotline',\n\t\t\t\t合作热线: 'cooperationHotline',\n\t\t\t\t办公电话: 'officeTel',\n\t\t\t\t预订链接: 'onlineSaleUrl',\n\t\t\t\t版权: 'copyright',\n\t\t\t\t备案号: 'icp',\n\t\t\t\t公网安备: 'pns',\n\t\t\t\t游玩时间: 'openInfo'\n\t\t\t}\n\t\t},\n\t\t全站SEO: {\n\t\t\tmap: 'seo',\n\t\t\thandleType: ExcelHandleType.KV,\n\t\t\trowsMap: { 标题: 'title', 关键词: 'keywords', 描述: 'description' }\n\t\t},\n\t\t友情链接: {\n\t\t\tmap: 'links',\n\t\t\thandleType: ExcelHandleType.ARRAY,\n\t\t\tcellsMap: { ID: 'id', 标题: 'title', 地址: 'url', 排序: 'sort' }\n\t\t}\n\t}\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/setting.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '标志', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/setting.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/setting.entity.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(path: string)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Base } from './base';\nimport { Entity, Column } from 'typeorm';\nimport { plainToClass } from 'class-transformer';\nimport { ExcelHandleType } from '../lib/excel';\n\n@Entity()\nexport class Setting extends Base {\n\t@Column({ comment: '标志', unique: true })\n\ttoken: string;\n\n\t@Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n\tex_info: any;\n\n\tstatic readonly sheetsMap: object = {\n\t\t系统设置: {\n\t\t\tmap: 'setting',\n\t\t\thandleType: ExcelHandleType.KV,\n\t\t\trowsMap: {\n\t\t\t\t介绍: 'recommendation',\n\t\t\t\t网站标题: 'title',\n\t\t\t\t技术支持: 'techSupport',\n\t\t\t\t微信二维码: 'wechat',\n\t\t\t\t微博二维码: 'weibo',\n\t\t\t\t地址: 'address',\n\t\t\t\t乘车路线: 'busLine',\n\t\t\t\t邮编: 'postcode',\n\t\t\t\t传真: 'fax',\n\t\t\t\t服务热线: 'serviceHotline',\n\t\t\t\t售票热线: 'bookingHotline',\n\t\t\t\t合作热线: 'cooperationHotline',\n\t\t\t\t办公电话: 'officeTel',\n\t\t\t\t预订链接: 'onlineSaleUrl',\n\t\t\t\t版权: 'copyright',\n\t\t\t\t备案号: 'icp',\n\t\t\t\t公网安备: 'pns',\n\t\t\t\t游玩时间: 'openInfo'\n\t\t\t}\n\t\t},\n\t\t全站SEO: {\n\t\t\tmap: 'seo',\n\t\t\thandleType: ExcelHandleType.KV,\n\t\t\trowsMap: { 标题: 'title', 关键词: 'keywords', 描述: 'description' }\n\t\t},\n\t\t友情链接: {\n\t\t\tmap: 'links',\n\t\t\thandleType: ExcelHandleType.ARRAY,\n\t\t\tcellsMap: { ID: 'id', 标题: 'title', 地址: 'url', 排序: 'sort' }\n\t\t}\n\t};\n\n\tstatic create(target: object) {\n\t\treturn plainToClass(Setting, target);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/SettingController.html":{"url":"classes/SettingController.html","title":"class - SettingController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  SettingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/setting.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(settingService: SettingService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/setting.controller.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        settingService\n                                                  \n                                                        \n                                                                        SettingService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/setting.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/setting.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport { UseGuards, Get, Put, Body, UseInterceptors } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Api } from '../../common/aspects/decorator';\nimport { ClassSerializerInterceptor } from '@nestjs/common';\nimport { SettingService } from '../../common/services/setting.service';\n\n@Api('setting')\n@ApiUseTags('setting')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\n@UseInterceptors(ClassSerializerInterceptor)\nexport class SettingController {\n    constructor(private readonly settingService: SettingService) {}\n\n    @Get('')\n    async findOne() {\n        return await this.settingService.getSettingByToken();\n    }\n\n    @Put()\n    async update(@Body() dto: any) {\n        return await this.settingService.save(dto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/SettingService.html":{"url":"injectables/SettingService.html","title":"injectable - SettingService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  SettingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/setting.service.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseService\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSettingByToken\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(settingRepository: Repository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/setting.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        settingRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSettingByToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSettingByToken(token: string)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/setting.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                    缺省值\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n                                    \n                                        'default'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(payload: any)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/setting.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Setting } from '../entities/setting.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { BaseService } from './base.service';\n\n@Injectable()\nexport class SettingService extends BaseService {\n    constructor(\n        @InjectRepository(Setting) private readonly settingRepository: Repository\n    ) {\n        super(settingRepository);\n    }\n\n    async getSettingByToken(token: string = 'default') {\n        return await this.settingRepository.findOne({ token });\n    }\n\n    async save(payload: any) {\n        const target = Setting.create(payload) as Setting;\n        return await this.settingRepository.save(target);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/StatusTask.html":{"url":"classes/StatusTask.html","title":"class - StatusTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  StatusTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/tasks/status.task.ts\n        \n\n\n            \n                继承\n            \n            \n                        NestSchedule\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intervalJob\n                            \n                            \n                                    Async\n                                pushStatus\n                            \n                            \n                                    Async\n                                watchFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/tasks/status.task.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @WebSocketServer()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/tasks/status.task.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            intervalJob\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intervalJob()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Interval(3000)\n                \n            \n\n            \n                \n                    被定义在 server/src/common/tasks/status.task.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            pushStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pushStatus()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Interval(3000)\n                \n            \n\n            \n                \n                    被定义在 server/src/common/tasks/status.task.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            watchFiles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    watchFiles()\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/tasks/status.task.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { stat } from 'fs';\nimport { resolve, basename, dirname, extname } from 'path';\nimport * as pidusage from 'pidusage';\nimport * as chokidar from 'chokidar';\nimport { SubscribeMessage, WebSocketGateway, WebSocketServer } from '@nestjs/websockets';\nimport { Cron, Interval, Timeout, NestSchedule } from 'nest-schedule';\nimport { influx } from '../lib/influx';\nimport { Logger } from '../lib/logger';\nimport { es } from '../lib/elastic-search';\nimport { config } from '../../config';\n\n@WebSocketGateway(config.websocket.port, { namespace: 'status' })\nexport class StatusTask extends NestSchedule {\n    @WebSocketServer() server: any;\n\n    constructor() {\n        super();\n\n        this.watchFiles();\n    }\n\n    // # ┌────────────── second (optional)\n    // # │ ┌──────────── minute\n    // # │ │ ┌────────── hour\n    // # │ │ │ ┌──────── day of month\n    // # │ │ │ │ ┌────── month\n    // # │ │ │ │ │ ┌──── day of week\n    // # │ │ │ │ │ │\n    // # │ │ │ │ │ │\n    // # * * * * * *\n\n    // @Cron('2 * * * * *')\n    // async cronJob() {\n    //     Logger.log('定时任务');\n\n    //     const status = await pidusage(process.pid);\n    //     Logger.log(status);\n    // }\n\n    // @Timeout(5000)\n    // onceJob() {\n    //     Logger.log('延时任务');\n    // }\n\n    async watchFiles() {\n        const uploadDirPath = resolve('./static');\n        Logger.log(`watching ${uploadDirPath}`);\n\n        chokidar.watch(uploadDirPath, { ignored: /(^|[\\/\\\\])\\../ }).on('all', (event, path) => {\n            // if (!!this.server) {\n            //     this.server.emit('fileChange', { event, path, date });\n            // }\n            stat(path, (err, stats) => {\n                Logger.log(event, path, stats);\n\n                const info = { index: 'uploads', type: 'uploads' };\n\n                switch (event) {\n                    case 'add':\n                        es.index({\n                            ...info,\n                            id: path,\n                            body: {\n                                baseName: basename(path),\n                                dirName: dirname(path),\n                                extName: extname(path),\n                                path,\n                                type: 'file',\n                                stat: stats\n                            }\n                        });\n                        break;\n                    case 'addDir':\n                        es.index({\n                            ...info,\n                            id: path,\n                            body: {\n                                baseName: basename(path),\n                                dirName: dirname(path),\n                                extName: extname(path),\n                                path,\n                                type: 'dir',\n                                stat: stats\n                            }\n                        });\n                        break;\n                    case 'change':\n                        es.update({\n                            ...info,\n                            id: path,\n                            body: {\n                                baseName: basename(path),\n                                dirName: dirname(path),\n                                extName: extname(path),\n                                path,\n                                type: 'dir',\n                                stat: stats\n                            }\n                        });\n                        break;\n                    case 'unlink':\n                        es.delete({\n                            ...info,\n                            id: path\n                        });\n                        break;\n                    case 'unlinkDir':\n                        es.delete({\n                            ...info,\n                            id: path\n                        });\n                        break;\n                }\n            });\n        });\n    }\n\n    @Interval(3000)\n    async pushStatus() {\n        if (!this.server) return false;\n\n        const status = await influx.query(\n            `select * from system_status order by time desc limit 30`\n        );\n        this.server.emit('status', status);\n    }\n\n    @Interval(3000)\n    async intervalJob() {\n        const status = await pidusage(process.pid);\n\n        await influx.writePoints([\n            {\n                measurement: 'system_status',\n                tags: { status: 'status' },\n                fields: status,\n                timestamp: new Date()\n            }\n        ]);\n\n        return false;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/StorageController.html":{"url":"classes/StorageController.html","title":"class - StorageController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  StorageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/storage.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(importService: ImportService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/storage.controller.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        importService\n                                                  \n                                                        \n                                                                        ImportService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(req, res)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()@ApiConsumes('multipart/form-data')@ApiImplicitFile({name: 'file', required: true})\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/storage.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as UUID from 'uuid';\nimport * as moment from 'moment';\nimport { ApiUseTags, ApiConsumes, ApiImplicitFile, ApiBearerAuth } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Post, Req, Res, BadRequestException, InternalServerErrorException, UseGuards } from '@nestjs/common';\nimport { config } from '../../config';\nimport { Api } from '../../common/aspects/decorator';\nimport { resolve } from 'path';\nimport { UploadActionType } from '../../common/aspects/enum';\nimport { ImportService } from '../../common/services/import.service';\nimport { Logger } from '../../common/lib/logger';\n\n@Api('storage')\n@ApiUseTags('storage')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\nexport class StorageController {\n\tconstructor(private readonly importService: ImportService) { }\n\n\t@Post()\n\t@ApiConsumes('multipart/form-data')\n\t@ApiImplicitFile({ name: 'file', required: true })\n\tasync upload(@Req() req, @Res() res) {\n\t\tconst files = req.raw.files;\n\n\t\tif (Object.keys(files).length == 0) {\n\t\t\tthrow new BadRequestException('没有上传任何文件');\n\t\t}\n\n\t\tconst file = files.file;\n\t\tconst action = req.raw.body.action || UploadActionType.UPLOAD;\n\n\t\tswitch (action) {\n\t\t\tcase UploadActionType.IMPORT:\n\t\t\t\tconst target = req.raw.body.target;\n\t\t\t\tif (!target) throw new BadRequestException('参数 target 缺失');\n\n\t\t\t\tLogger.log(target, 'StorageController::import');\n\n\t\t\t\ttry {\n\t\t\t\t\tres.send(await this.importService.handleFile(file, target));\n\t\t\t\t} catch (err) {\n\t\t\t\t\tLogger.error(err);\n\n\t\t\t\t\tthrow new BadRequestException('导入失败');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconst path = `${moment().format('YYYY-MM-DD')}/${UUID.v4()}-${file.name}`;\n\t\t\t\tconst filePath = `${resolve(config.static.root)}${config.static.uploadPath}/${path}`;\n\n\t\t\t\tLogger.log(filePath, 'StorageController::upload');\n\n\t\t\t\tfile.mv(filePath, (err) => {\n\t\t\t\t\tif (err) throw new InternalServerErrorException('文件移动失败', err);\n\n\t\t\t\t\tres.send({\n\t\t\t\t\t\tpath: `${config.static.uploadPath}/${path}`,\n\t\t\t\t\t\tfilePath,\n\t\t\t\t\t\tname: file.name,\n\t\t\t\t\t\tsize: file.size,\n\t\t\t\t\t\tmd5: file.md5,\n\t\t\t\t\t\tmimetype: file.mimetype\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/UpdateContentDto.html":{"url":"classes/UpdateContentDto.html","title":"class - UpdateContentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  UpdateContentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/dtos/content.dto.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                author\n                            \n                            \n                                    Readonly\n                                publish_at\n                            \n                            \n                                    Readonly\n                                sort\n                            \n                            \n                                    Readonly\n                                summary\n                            \n                            \n                                    Readonly\n                                text\n                            \n                            \n                                    Readonly\n                                thumbnail\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                views\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            publish_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@IsNotEmpty({message: '发布时间不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            summary\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            thumbnail\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()@IsNotEmpty({message: '标题不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/dtos/content.dto.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateContentDto {\n\t@ApiModelProperty()\n\t@IsNotEmpty({\n\t\tmessage: '标题不能为空'\n\t})\n\treadonly title: string;\n\n\t@ApiModelProperty() readonly author: string;\n\n\t@ApiModelProperty() readonly sort: number;\n\n\t@ApiModelProperty() readonly thumbnail: string;\n\n\t@ApiModelProperty() readonly summary: string;\n\n\t@ApiModelProperty() readonly text: string;\n\n\t@ApiModelProperty() readonly views: number;\n\n\t@ApiModelProperty()\n\t@IsNotEmpty({\n\t\tmessage: '发布时间不能为空'\n\t})\n\treadonly publish_at: string;\n}\n\nexport class CreateContentDto {\n\t@ApiModelProperty()\n\t@IsNotEmpty({\n\t\tmessage: '标题不能为空'\n\t})\n\treadonly title: string;\n\n\t@ApiModelProperty() readonly author: string;\n\n\t@ApiModelProperty() readonly sort: number;\n\n\t@ApiModelProperty() readonly thumbnail: string;\n\n\t@ApiModelProperty() readonly summary: string;\n\n\t@ApiModelProperty() readonly text: string;\n\n\t@ApiModelProperty() readonly views: number;\n\n\t@ApiModelProperty()\n\t@IsNotEmpty({\n\t\tmessage: '发布时间不能为空'\n\t})\n\treadonly publish_at: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/entities/user.entity.ts\n        \n\n\n            \n                继承\n            \n            \n                        Base\n            \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                avatar\n                            \n                            \n                                ex_info\n                            \n                            \n                                gender\n                            \n                            \n                                nickname\n                            \n                            \n                                org\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                roles\n                            \n                            \n                                create_at\n                            \n                            \n                                id\n                            \n                            \n                                row_status\n                            \n                            \n                                update_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                beforeInsert\n                            \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getFullPath\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    avatarPath\n                                \n                                \n                                    isSuperAdmin\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '帐号', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '头像', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ex_info\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({type: 'simple-json', default: undefined, comment: '扩展信息'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Gender\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '性别', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nickname\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Column({comment: '昵称', default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            org\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Organization\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude({toPlainOnly: true})@Column({comment: '密码'})\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Role\n\n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         Role[]\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @ManyToMany(undefined, undefined)@JoinTable()\n                            \n                        \n                    \n                        \n                            \n                                    被定义在 server/src/common/entities/user.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @CreateDateColumn({comment: '创建时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         string\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row_status\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         RowStatus\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @Exclude()@Column({type: 'enum', default: undefined, enum: RowStatus, comment: '行状态'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_at\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         number\n\n                        \n                    \n                    \n                        \n                            装饰器列表 : \n                            \n                            \n                                @UpdateDateColumn({comment: '更新时间'})\n                            \n                        \n                    \n                            \n                                \n                                    继承自         Base\n\n                                \n                            \n                        \n                            \n                                    被定义在         Base:26\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            beforeInsert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beforeInsert()\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @BeforeInsert()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/entities/user.entity.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        返回 :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: Object)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/entities/user.entity.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                Object\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFullPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullPath(path: string)\n                \n            \n\n\n            \n                \n                    继承自         Base\n\n                \n            \n            \n                \n                        被定义在         Base:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        avatarPath\n                    \n                \n\n                \n                    \n                        getavatarPath()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/user.entity.ts:47\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isSuperAdmin\n                    \n                \n\n                \n                    \n                        getisSuperAdmin()\n                    \n                \n                            \n                                \n                                    被定义在 server/src/common/entities/user.entity.ts:52\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import * as bcrypt from 'bcryptjs';\nimport { Exclude, Expose, plainToClass } from 'class-transformer';\nimport { Base } from './base';\nimport { Entity, Column, BeforeInsert, ManyToMany, ManyToOne, JoinTable } from 'typeorm';\nimport { Gender } from '../aspects/enum';\nimport { Role } from './role.entity';\nimport { Organization } from './organization.entity';\n\n@Entity()\nexport class User extends Base {\n    @Column({\n        comment: '帐号',\n        unique: true\n    })\n    account: string;\n\n    @Exclude({ toPlainOnly: true })\n    @Column({ comment: '密码' })\n    password: string;\n\n    @Column({ comment: '昵称', default: '' })\n    nickname: string;\n\n    @Column({ comment: '头像', default: '' })\n    avatar: string;\n\n    @Column({ comment: '性别', default: Gender.MALE })\n    gender: Gender;\n\n    @Column({ type: 'simple-json', default: {}, comment: '扩展信息' })\n    ex_info: any;\n\n    @ManyToMany((type) => Role, (role) => role.users)\n    @JoinTable()\n    roles: Role[];\n\n    @ManyToOne((type) => Organization, (org) => org.users)\n    org: Organization;\n\n    role: Role;\n\n    static create(target: Object) {\n        return plainToClass(User, target);\n    }\n\n    @Expose()\n    get avatarPath(): string {\n        return Base.getFullPath(this.avatar);\n    }\n\n    @Expose()\n    get isSuperAdmin(): boolean {\n        if (!this.roles || this.roles.length  role.token === 'superAdmin');\n    }\n\n    @BeforeInsert()\n    async beforeInsert() {\n        const salt = await bcrypt.genSalt(10);\n        this.password = await bcrypt.hash(this.password || '12345678', salt);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/UserController.html":{"url":"classes/UserController.html","title":"class - UserController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/api/controllers/user.controller.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                current\n                            \n                            \n                                    Async\n                                fetch\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                被定义在 server/src/api/controllers/user.controller.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(user, dto: PasswordDto)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put('password')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/user.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                PasswordDto\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/user.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            current\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    current(user)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('current')@UseInterceptors(ClassSerializerInterceptor)\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/user.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetch(params)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get(':id')@UseInterceptors(ClassSerializerInterceptor)\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/user.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Get('list')\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/user.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(payload)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/user.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    被定义在 server/src/api/controllers/user.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Get,\n    Body,\n    Put,\n    Param,\n    UseInterceptors,\n    ClassSerializerInterceptor,\n    UseGuards,\n    UsePipes,\n    ValidationPipe,\n    Query,\n    Post,\n    Delete\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\nimport { Api, CurrentUser } from '../../common/aspects/decorator';\nimport { UserService } from '../../common/services/user.service';\nimport { PasswordDto } from '../../common/dtos/password.dto';\n\n@Api('user')\n@ApiUseTags('user')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\nexport class UserController {\n    constructor(private readonly userService: UserService) {}\n\n    @Get(':id')\n    @UseInterceptors(ClassSerializerInterceptor)\n    async fetch(@Param() params) {\n        return await this.userService.findOneById(params.id);\n    }\n\n    @Get('list')\n    async list(@Query() payload) {\n        return await this.userService.query(payload);\n    }\n\n    @Get('current')\n    @UseInterceptors(ClassSerializerInterceptor)\n    async current(@CurrentUser() user) {\n        return await this.userService.findOneById(user.id);\n    }\n\n    @Put('password')\n    @UsePipes(new ValidationPipe())\n    async changePassword(@CurrentUser() user, @Body() dto: PasswordDto) {\n        return await this.userService.changePassword(user.id, dto);\n    }\n\n    @Post()\n    async create(@Body() dto: any) {\n        return await this.userService.save(dto);\n    }\n\n    @Put()\n    async update(@Body() dto: any) {\n        return await this.userService.save(dto);\n    }\n\n    @Delete()\n    async remove(@Query() payload) {\n        return await this.userService.remove(payload.selectedRows.split(','));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            文件\n        \n        \n            server/src/common/services/user.service.ts\n        \n\n\n            \n                继承\n            \n            \n                        BaseService\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                query\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userRepository: Repository)\n                    \n                \n                        \n                            \n                                被定义在 server/src/common/services/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        方法\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(id, dto)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/user.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    dto\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/user.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(account, password)\n                \n            \n\n\n            \n                \n                    被定义在 server/src/common/services/user.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    account\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(payload: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/user.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(payload: any)\n                \n            \n\n            \n                \n                    装饰器列表 : \n                    \n                    @TransformClassToPlain()\n                \n            \n\n            \n                \n                    被定义在 server/src/common/services/user.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: string)\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string[])\n                \n            \n\n\n            \n                \n                    继承自         BaseService\n\n                \n            \n            \n                \n                        被定义在         BaseService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport * as bcrypt from 'bcryptjs';\nimport { JwtService } from '@nestjs/jwt';\nimport { Injectable, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { TransformClassToPlain } from 'class-transformer';\nimport { BaseService } from './base.service';\nimport { User } from '../entities/user.entity';\n\n@Injectable()\nexport class UserService extends BaseService {\n    constructor(\n        private readonly jwtService: JwtService,\n        @InjectRepository(User) private readonly userRepository: Repository\n    ) {\n        super(userRepository);\n    }\n\n    @TransformClassToPlain()\n    async query(payload: any) {\n        const qb = this.userRepository.createQueryBuilder('t');\n\n        qb.leftJoinAndSelect('t.roles', 'role');\n        qb.leftJoinAndSelect('t.org', 'organization');\n\n        if (!payload.page) {\n            payload.page = 0;\n        }\n\n        if (!payload.pageSize) {\n            payload.pageSize = 10;\n        }\n\n        if (!!payload.keyword) {\n            qb.andWhere(`t.nickname LIKE '%${payload.keyword}%'`);\n        }\n\n        if (!!payload.org) {\n            qb.andWhere('organization.id = :org', { org: payload.org });\n        }\n\n        if (!!payload.create_at) {\n            payload.create_at = payload.create_at.split(',');\n            qb.andWhere(\n                `t.create_at BETWEEN '${payload.create_at.shift()}' AND '${payload.create_at.pop()}'`\n            );\n        }\n\n        if (!!payload.sort && !!payload.order) {\n            qb.addOrderBy(`t.${payload.sort}`, payload.order);\n        } else {\n            qb.addOrderBy('t.create_at', 'DESC');\n        }\n\n        if (!!payload.isExport) {\n            if (!payload.category) throw new BadRequestException('分类参数错误');\n\n            const dataSource = await qb.getMany();\n\n            // 执行导出逻辑\n            // return await ExcelHelper.export(dataSource, Content.sheetsMap[payload.category], payload.fields.split(','));\n        } else {\n            qb.skip(payload.page * payload.pageSize);\n            qb.take(payload.pageSize);\n        }\n\n        return await qb.getManyAndCount();\n    }\n\n    @TransformClassToPlain()\n    async findOneById(id) {\n        return await this.userRepository.findOne({\n            where: { id },\n            relations: ['roles', 'org']\n        });\n    }\n\n    async login(account, password) {\n        const user = await this.userRepository.findOne({ account });\n\n        if (!user) throw new BadRequestException('用户不存在');\n\n        if (!(await bcrypt.compare(password, user.password)))\n            throw new BadRequestException('密码错误');\n\n        return await this.jwtService.sign(_.toPlainObject(user));\n    }\n\n    async changePassword(id, dto) {\n        const user = await this.userRepository.findOne({ where: { id }, relations: ['roles'] });\n\n        if (!(await bcrypt.compare(dto.oldPassword, user.password)))\n            throw new BadRequestException('旧密码错误');\n\n        const salt = await bcrypt.genSalt(10);\n        user.password = await bcrypt.hash(dto.password, salt);\n\n        return await this.userRepository.save(user);\n    }\n\n    @TransformClassToPlain()\n    async save(payload: any) {\n        const user = User.create(payload) as User;\n\n        return await this.userRepository.save(user);\n    }\n\n    // async remove(ids: string[]) {\n    //     // 软删除\n    //     return await this.userRepository.delete(ids);\n    // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    文档概览\n\n\n\n    \n\n\n\n    \n        \n            文件\n            类型\n            标识符\n            注释\n        \n    \n    \n        \n            \n                \n                server/src/api/controllers/authority.controller.ts\n            \n            class\n            AuthorityController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                server/src/api/controllers/category.controller.ts\n            \n            class\n            CategoryController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                server/src/api/controllers/content.controller.ts\n            \n            class\n            ContentController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                server/src/api/controllers/login.controller.ts\n            \n            class\n            LoginController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/src/api/controllers/organization.controller.ts\n            \n            class\n            OrganizationController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                server/src/api/controllers/role.controller.ts\n            \n            class\n            RoleController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                server/src/api/controllers/search.controller.ts\n            \n            class\n            SearchController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/src/api/controllers/setting.controller.ts\n            \n            class\n            SettingController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/src/api/controllers/storage.controller.ts\n            \n            class\n            StorageController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/src/api/controllers/user.controller.ts\n            \n            class\n            UserController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                server/src/common/aspects/decorator.ts\n            \n            function\n            Api\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/aspects/decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/aspects/exceptions.filter.ts\n            \n            class\n            ExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                server/src/common/aspects/middlewares.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/dtos/content.dto.ts\n            \n            class\n            CreateContentDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                server/src/common/dtos/content.dto.ts\n            \n            class\n            UpdateContentDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                server/src/common/dtos/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/src/common/dtos/password.dto.ts\n            \n            class\n            PasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/src/common/entities/authority.entity.ts\n            \n            class\n            Authority\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                server/src/common/entities/base.ts\n            \n            class\n            Base\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                server/src/common/entities/category.entity.ts\n            \n            class\n            Category\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                server/src/common/entities/content.entity.ts\n            \n            class\n            Content\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                server/src/common/entities/content.entity.ts\n            \n            variable\n            cellsMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/entities/content.entity.ts\n            \n            variable\n            handleType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/entities/content.entity.ts\n            \n            variable\n            rowsMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/entities/organization.entity.ts\n            \n            class\n            Organization\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                server/src/common/entities/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                server/src/common/entities/setting.entity.ts\n            \n            class\n            Setting\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                server/src/common/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                server/src/common/lib/elastic-search.ts\n            \n            variable\n            es\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/lib/excel.ts\n            \n            class\n            ExcelHelper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                server/src/common/lib/helper.ts\n            \n            function\n            extractionTextInHtml\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/lib/helper.ts\n            \n            function\n            textInterception\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/lib/influx.ts\n            \n            variable\n            influx\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/lib/logger.ts\n            \n            class\n            ContextTrace\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                server/src/common/lib/logger.ts\n            \n            class\n            Logger\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                server/src/common/lib/logger.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/common/services/authority.service.ts\n            \n            injectable\n            AuthorityService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                server/src/common/services/base.service.ts\n            \n            class\n            BaseService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/src/common/services/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                server/src/common/services/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                server/src/common/services/content.service.ts\n            \n            injectable\n            ContentService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                server/src/common/services/import.service.ts\n            \n            injectable\n            ImportService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                server/src/common/services/organization.service.ts\n            \n            injectable\n            OrganizationService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                server/src/common/services/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                server/src/common/services/search.service.ts\n            \n            injectable\n            SearchService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                server/src/common/services/setting.service.ts\n            \n            injectable\n            SettingService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                server/src/common/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                server/src/common/strategys/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/src/common/tasks/status.task.ts\n            \n            class\n            StatusTask\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                server/src/config/index.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/main.ts\n            \n            variable\n            readFileAsync\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/src/seed/index.ts\n            \n            injectable\n            Seed\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                server/src/ssr/controllers/index.controller.ts\n            \n            controller\n            IndexController\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                server/src/ssr/controllers/index.controller.ts\n            \n            variable\n            toGetMenuIndex\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  列举\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            ExcelHandleType   (server/.../excel.ts)\n                        \n                        \n                            Gender   (server/.../enum.ts)\n                        \n                        \n                            LoggerLevel   (server/.../logger.ts)\n                        \n                        \n                            RowStatus   (server/.../enum.ts)\n                        \n                        \n                            UploadActionType   (server/.../enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server/src/common/lib/excel.ts\n    \n        \n            \n                \n                    \n                        \n                        ExcelHandleType\n                    \n                \n                        \n                            \n                                 KV\n                            \n                        \n                        \n                            \n                                 ARRAY\n                            \n                        \n            \n        \n\n    server/src/common/aspects/enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Gender\n                    \n                \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                 FEMALE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RowStatus\n                    \n                \n                        \n                            \n                                 NORMAL\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UploadActionType\n                    \n                \n                        \n                            \n                                 IMPORT\n                            \n                        \n                        \n                            \n                                值 : IMPORT\n                            \n                        \n                        \n                            \n                                 UPLOAD\n                            \n                        \n                        \n                            \n                                值 : UPLOAD\n                            \n                        \n            \n        \n\n    server/src/common/lib/logger.ts\n    \n        \n            \n                \n                    \n                        \n                        LoggerLevel\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                值 : ALL\n                            \n                        \n                        \n                            \n                                 MARK\n                            \n                        \n                        \n                            \n                                值 : MARK\n                            \n                        \n                        \n                            \n                                 TRACE\n                            \n                        \n                        \n                            \n                                值 : TRACE\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                值 : DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                值 : INFO\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                值 : WARN\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                值 : ERROR\n                            \n                        \n                        \n                            \n                                 FATAL\n                            \n                        \n                        \n                            \n                                值 : FATAL\n                            \n                        \n                        \n                            \n                                 OFF\n                            \n                        \n                        \n                            \n                                值 : OFF\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  函数\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            Api   (server/.../decorator.ts)\n                        \n                        \n                            bootstrap   (server/.../main.ts)\n                        \n                        \n                            extractionTextInHtml   (server/.../helper.ts)\n                        \n                        \n                            logger   (server/.../middlewares.ts)\n                        \n                        \n                            textInterception   (server/.../helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server/src/common/aspects/decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Api\n                        \n                        \n                    \n                \n            \n            \n                \nApi(prefix?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    prefix\n\n                                    \n                                        是\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        返回 :     ClassDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    server/src/common/lib/helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            extractionTextInHtml\n                        \n                        \n                    \n                \n            \n            \n                \nextractionTextInHtml(html)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    html\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            textInterception\n                        \n                        \n                    \n                \n            \n            \n                \ntextInterception(text, length: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    类型\n                                    可选的\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    server/src/common/aspects/middlewares.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            logger\n                        \n                        \n                    \n                \n            \n            \n                \nlogger(req, res, next)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        参数列表 :\n                        \n                            \n                                \n                                    名称\n                                    可选的\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        否\n                                    \n\n\n                                \n                                \n                                    next\n\n                                    \n                                        否\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNestify\n\n开箱即用的内容管理框架\n\n技术选型\n\nNestjs、Nextjs、Fastify、TypeORM、ElasticSearch、Ant Design...\n\n使用方法\n\ngit clone 项目到本地\n分别在 根、server、admin 目录中安装依赖\n安装 ElasticSearch、InfluxDB、PostgreSQL\n修改 server/package.json 以及 server/database/ 中 sql 文件的账户信息\n回到根目录执行 yarn db:create 和 yarn db:init\n开发模式启动前后台执行 yarn dev\n\n功能概览\n\nFastify 的超强性能\nReact 服务端渲染\nReact SPA 后台管理系统\nElasticSearch 全文检索\nRBAC 权限管理\n日志模块\n配置文件\n安全保护\n访问频率\n堆栈跟踪\n定时任务\n文件上传、监控、搜索、管理\n脚本创建、初始化、迁移、回滚数据库\nExcel 导入、导出\nSwagger API 文档\nInfluxDB 时序数据库\nWebSocket\n系统监控\n\n正在开发的功能\n\n容器部署\nK8S\n缓存模块\n短信模块\n邮件模块\n消息队列\n...\n\n协议\nNestify is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Roy Lin\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    模块列表\n\n\n    \n            \n                \n                    \n                        ApiModule\n                    \n                    \n                                \n                                    无数据显示\n                                \n                        \n                            查看\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        你的浏览器不支持SVG\n                                    \n                                \n                        \n                            查看\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        你的浏览器不支持SVG\n                                    \n                                \n                        \n                            查看\n                        \n                    \n                \n            \n            \n                \n                    \n                        SSRModule\n                    \n                    \n                                \n                                    无数据显示\n                                \n                        \n                            查看\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    概述\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nApiModule\n\nApiModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nAuthorityService \n\nAuthorityService \n\nAuthorityService  -->\n\nCommonModule->AuthorityService \n\n\n\n\n\nCategoryService \n\nCategoryService \n\nCategoryService  -->\n\nCommonModule->CategoryService \n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nContentService \n\nContentService \n\nContentService  -->\n\nCommonModule->ContentService \n\n\n\n\n\nImportService \n\nImportService \n\nImportService  -->\n\nCommonModule->ImportService \n\n\n\n\n\nOrganizationService \n\nOrganizationService \n\nOrganizationService  -->\n\nCommonModule->OrganizationService \n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nCommonModule->RoleService \n\n\n\n\n\nSearchService \n\nSearchService \n\nSearchService  -->\n\nCommonModule->SearchService \n\n\n\n\n\nSettingService \n\nSettingService \n\nSettingService  -->\n\nCommonModule->SettingService \n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nCommonModule->UserService \n\n\n\n\n\nSSRModule\n\nSSRModule\n\nAppModule -->\n\nSSRModule->AppModule\n\n\n\n\n\nSeed\n\nSeed\n\nAppModule -->\n\nSeed->AppModule\n\n\n\n\n\nAuthorityService\n\nAuthorityService\n\nCommonModule -->\n\nAuthorityService->CommonModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCommonModule -->\n\nCategoryService->CommonModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\nContentService\n\nContentService\n\nCommonModule -->\n\nContentService->CommonModule\n\n\n\n\n\nImportService\n\nImportService\n\nCommonModule -->\n\nImportService->CommonModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nCommonModule -->\n\nJwtStrategy->CommonModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nCommonModule -->\n\nOrganizationService->CommonModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nCommonModule -->\n\nRoleService->CommonModule\n\n\n\n\n\nSearchService\n\nSearchService\n\nCommonModule -->\n\nSearchService->CommonModule\n\n\n\n\n\nSettingService\n\nSettingService\n\nCommonModule -->\n\nSettingService->CommonModule\n\n\n\n\n\nUserService\n\nUserService\n\nCommonModule -->\n\nUserService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        放大\n        重置\n        缩小\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 模块列表\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    12 可注入的\n                \n            \n        \n        \n            \n                \n                    \n                    28 类列表\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  变量\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            cellsMap   (server/.../content.entity.ts)\n                        \n                        \n                            config   (server/.../index.ts)\n                        \n                        \n                            CurrentUser   (server/.../decorator.ts)\n                        \n                        \n                            es   (server/.../elastic-search.ts)\n                        \n                        \n                            handleType   (server/.../content.entity.ts)\n                        \n                        \n                            influx   (server/.../influx.ts)\n                        \n                        \n                            logger   (server/.../logger.ts)\n                        \n                        \n                            module   (server/.../main.ts)\n                        \n                        \n                            readFileAsync   (server/.../main.ts)\n                        \n                        \n                            rowsMap   (server/.../content.entity.ts)\n                        \n                        \n                            toGetMenuIndex   (server/.../index.controller.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server/src/common/entities/content.entity.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cellsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n    标题: 'title',\n    作者: 'author',\n    来源: 'source',\n    地址: 'address',\n    排序: 'sort',\n    发布时间: 'publish_at',\n    正文: 'text',\n    图片: 'thumbnail',\n    视频: 'video'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleType\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : ExcelHandleType.ARRAY\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rowsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n    id: {\n        header: '编号'\n    },\n    title: {\n        header: '标题'\n    },\n    author: {\n        header: '作者'\n    },\n    source: {\n        header: '来源'\n    },\n    address: {\n        header: '地址'\n    },\n    sort: {\n        header: '排序'\n    },\n    thumbnailPath: {\n        header: '图片',\n        key: 'thumbnail',\n        handler: (val) => Content.getFullPath(val)\n    },\n    videoPath: {\n        header: '视频',\n        key: 'video',\n        handler: (val) => Content.getFullPath(val)\n    },\n    summary: {\n        header: '摘要'\n    },\n    text: {\n        header: '正文'\n    },\n    views: {\n        header: '浏览量'\n    },\n    publish_at: {\n        header: '发布时间',\n        handler: (val) => (val ? moment(val).format('YYYY-MM-DD HH:mm:ss') : '')\n    },\n    update_at: {\n        header: '修改时间',\n        handler: (val) => (val ? moment(val).format('YYYY-MM-DD HH:mm:ss') : '')\n    },\n    category: {\n        header: '分类',\n        handler: (val) => (val ? val.name : '')\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    server/src/config/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n    port: 3000,\n    hostName: '0.0.0.0',\n    serverUrl: 'http://127.0.0.1:3000',\n\n    static: {\n        root: 'static',\n        prefix: '/static/',\n        uploadPath: '/uploads'\n    },\n\n    jwt: {\n        secretOrPrivateKey: 'secretKey',\n        signOptions: {\n            expiresIn: 360000\n        }\n    },\n\n    cache: {\n        ttl: 10,\n        max: 1000\n    },\n\n    redis: {\n        host: '127.0.0.1',\n        port: 6379\n    },\n\n    session: {\n        secret: 'some-secret-password-at-least-32-characters-long',\n        cookie: {\n            maxAge: 1000 * 60 * 60 * 3,\n            secure: false\n        }\n    },\n\n    orm: {\n        type: 'postgres',\n        host: '127.0.0.1',\n        port: 5432,\n        database: 'nestify',\n        username: 'nestify',\n        password: '123456',\n        dropSchema: false,\n        synchronize: false,\n        logging: false,\n        entities: [resolve('./**/*.entity.ts')]\n    },\n\n    influx: {\n        host: '127.0.0.1',\n        database: 'nestify',\n        schema: [\n            {\n                measurement: 'system_status',\n                fields: {\n                    cpu: Influx.FieldType.FLOAT,\n                    memory: Influx.FieldType.INTEGER,\n                    ppid: Influx.FieldType.INTEGER,\n                    pid: Influx.FieldType.INTEGER,\n                    ctime: Influx.FieldType.INTEGER,\n                    elapsed: Influx.FieldType.INTEGER,\n                    timestamp: Influx.FieldType.INTEGER\n                },\n                tags: ['status']\n            }\n        ]\n    },\n\n    websocket: {\n        port: 9000\n    },\n\n    es: {\n        host: '127.0.0.1:9200',\n        log: 'trace'\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    server/src/common/aspects/decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createParamDecorator(async (param, request) => {\n\treturn !param ? request.user : request.user[param];\n})\n                        \n                    \n\n\n            \n        \n\n    server/src/common/lib/elastic-search.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            es\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new elasticsearch.Client({\n    ...config.es,\n    log: Logger\n})\n                        \n                    \n\n\n            \n        \n\n    server/src/common/lib/influx.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            influx\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new Influx.InfluxDB(config.influx)\n                        \n                    \n\n\n            \n        \n\n    server/src/common/lib/logger.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : Log4js.getLogger()\n                        \n                    \n\n\n            \n        \n\n    server/src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :         any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readFileAsync\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : util.promisify(fs.readFile)\n                        \n                    \n\n\n            \n        \n\n    server/src/ssr/controllers/index.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toGetMenuIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : (menus, asPath) => {\n\tlet path = asPath.split('?').shift().split('/').pop();\n\tlet index = 0;\n\tlet order = 0;\n\tmenus.forEach((menu, i) => {\n\t\tif (menu.children && menu.children.length > 0) {\n\t\t\tmenu.children.forEach((item, j) => {\n\t\t\t\tif (path === item.url.split('/').pop()) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\torder = j;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t});\n\treturn {\n\t\tmenu_show: menus[index],\n\t\torder\n\t};\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"}}
}
